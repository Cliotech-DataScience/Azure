{
	"name": "Serials",
	"properties": {
		"activities": [
			{
				"name": "LK_Last_Id_Mng_azure_ETL",
				"type": "Lookup",
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"typeProperties": {
					"source": {
						"type": "SqlSource",
						"sqlReaderQuery": "SELECT  LastIncrementalDate=DATEADD(MINUTE,65,LastIncrementalDate)   \n  ---- remove to use incremental\n FROM  [localdb].[azure].[Mng_azure_ETL]\n  WHERE TableName='Serials'"
					},
					"dataset": {
						"referenceName": "Mng_azure_ETL",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "copy_to_blob",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "LK_Last_Id_Mng_azure_ETL",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "LK_new_max_id",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"typeProperties": {
					"source": {
						"type": "SqlSource"
					},
					"sink": {
						"type": "BlobSink"
					},
					"enableStaging": false,
					"dataIntegrationUnits": 0
				},
				"inputs": [
					{
						"referenceName": "serials",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Blob_Serials",
						"type": "DatasetReference",
						"parameters": {
							"folder_name": "Serials"
						}
					}
				]
			},
			{
				"name": "update_mng_azure",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "copy_to_blob",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"typeProperties": {
					"storedProcedureName": "[azure].[SP_Update_Mng_azure_ETL]",
					"storedProcedureParameters": {
						"LastId": {
							"value": "-1",
							"type": "Int64"
						},
						"LastIncrementalDate": {
							"value": {
								"value": "@{activity('LK_new_max_id').output.firstRow.ExecutionDate}",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"TableName": {
							"value": "Serials",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "alldbdwh",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "LK_new_max_id",
				"type": "Lookup",
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"typeProperties": {
					"source": {
						"type": "SqlSource",
						"sqlReaderQuery": " SELECT ExecutionDate=MAX(update_date)\n FROM azure.az_serials"
					},
					"dataset": {
						"referenceName": "serials",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Serials",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "update_mng_azure",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"typeProperties": {
					"notebookPath": "/Load Data/Dimensions/serials"
				},
				"linkedServiceName": {
					"referenceName": "Analysis",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Delete_serials_file",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "Serials",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"typeProperties": {
					"dataset": {
						"referenceName": "blob_serials_row_folder",
						"type": "DatasetReference"
					},
					"enableLogging": false
				}
			}
		],
		"folder": {
			"name": "Data_from_SQL"
		}
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}