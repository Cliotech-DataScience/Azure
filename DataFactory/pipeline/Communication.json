{
	"name": "Communication",
	"properties": {
		"activities": [
			{
				"name": "LK_Last_Date_Mng_azure_ETL",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureTableSource",
						"azureTableSourceQuery": "PartitionKey eq 'Upload Data' and RowKey eq 'Communication'",
						"azureTableSourceIgnoreTableNotFound": false
					},
					"dataset": {
						"referenceName": "etl_manage",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "LK_new_max_date",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlSource",
						"sqlReaderQuery": " SELECT Last_Event_Date = MAX(Event_Date)\nFROM EMERP_LM.azure.AZ_Communication\nWHERE Event_Date < CAST(GETDATE() AS DATE)\nand  Event_Date>'2022-07-30'",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "Communication_src",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "copy_to_blob",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "LK_Last_Date_Mng_azure_ETL",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "LK_new_max_date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "select * \nFROM EMERP_LM.azure.AZ_Communication\nwhere Event_Date > '@{activity('LK_Last_Date_Mng_azure_ETL').output.value[0].Last_Incremental_Date}' and Event_Date <= '@{activity('LK_new_max_date').output.firstRow.Last_Event_Date}'",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "BlobSink"
					},
					"enableStaging": false,
					"dataIntegrationUnits": 0,
					"translator": {
						"type": "TabularTranslator",
						"columnMappings": {
							"MessageID": "MessageID",
							"Event_Date": "Event_Date",
							"details": "details"
						}
					}
				},
				"inputs": [
					{
						"referenceName": "Communication_src",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Communication_blob",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Update Manage Table",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "copy_to_blob",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "MergeTableStore",
						"type": "PipelineReference"
					},
					"parameters": {
						"PartitionKey": "Upload Data",
						"RowKey": "Communication",
						"PropertyName": "Last_Incremental_Date",
						"PropertyValue": {
							"value": "@activity('LK_new_max_date').output.firstRow.Last_Event_Date",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Load Communication to Events",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "Update Manage Table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Load Data/Digital Communication/Load Communication"
				},
				"linkedServiceName": {
					"referenceName": "Analysis",
					"type": "LinkedServiceReference"
				}
			}
		],
		"folder": {
			"name": "Data_from_SQL"
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}