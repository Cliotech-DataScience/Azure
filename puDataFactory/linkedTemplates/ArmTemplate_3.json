{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name",
			"defaultValue": "puDataFactory"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/dwh_lead_assignments_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "alldbdwh",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "Fact_Lead_Assignments_ID",
						"type": "Int32"
					},
					{
						"name": "Assignment_Details",
						"type": "String"
					},
					{
						"name": "Assignment_Day",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "dwh.azure.Lead_assignments "
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/fxnet_deals_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "alldbdwh",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "TransactionNumber",
						"type": "Int32"
					},
					{
						"name": "Trans_Details",
						"type": "String"
					},
					{
						"name": "ExecutionDay",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "dwh.azure.deals"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/serials')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "emerpdbpr",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "Serial",
						"type": "Int64"
					},
					{
						"name": "serial_details",
						"type": "String"
					},
					{
						"name": "update_date",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "azure.az_serials"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/0000Incremental_SQL_DWH_Copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Id_Mng_azure_ETL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT  LastIncrementalDate\n FROM  [azure].[Mng_azure_ETL]\n WHERE TableName='Fact_Transactions'"
							},
							"dataset": {
								"referenceName": "Mng_azure_ETL",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LK_new_max_id",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT ExecutionDate=MAX(ExecutionDate)\n FROM [azure].[AZ_Fact_Transactions]\n"
							},
							"dataset": {
								"referenceName": "Mng_azure_ETL",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Id_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select * from azure.AZ_Fact_Transactions\n where ExecutionDate > '@{activity('LK_Last_Id_Mng_azure_ETL').output.firstRow.LastIncrementalDate}' and ExecutionDate <= '@{activity('LK_new_max_id').output.firstRow.ExecutionDate}'",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "Fact_Transactions",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "blob_Fact_Transactions",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": "Fact_Transactions"
								}
							}
						]
					},
					{
						"name": "update_mng_azure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'azure].[SP_Update_Mng_azure_ETL]')]",
							"storedProcedureParameters": {
								"LastId": {
									"value": "-1",
									"type": "Int64"
								},
								"LastIncrementalDate": {
									"value": {
										"value": "@{activity('LK_new_max_id').output.firstRow.ExecutionDate}",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": "Fact_Transactions",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "alldbdwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "_old"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/01_platfromusage_files_copy_to_blob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_file",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "run_sp_add_new_file_name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "\t  SELECT file_name,\n        folder\n\tFROM azure.platfrom_usage_log_file\n WHERE ISNULL(move_to_blob,0) <>1 \n  \n  IF @@ROWCOUNT=0 THROW 50000 ,'No file to move',1"
							},
							"dataset": {
								"referenceName": "DWH_pu_list_files",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy to blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_file",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "Source_file_avi",
								"type": "DatasetReference",
								"parameters": {
									"file_name": {
										"value": "@activity('LK_file').output.firstRow.file_name",
										"type": "Expression"
									},
									"folder": {
										"value": "@substring(activity('LK_file').output.firstRow.FILE_NAME,0,8)",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "platformusage_blob",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": {
										"value": "@concat('platformusage/rawdata/',activity('LK_file').output.firstRow.folder,'/')\n ",
										"type": "Expression"
									},
									"file_name": {
										"value": "@concat(substring(activity('LK_file').output.firstRow.FILE_NAME,0,8),'.zip')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "update_platfrom_usage_log_file",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy to blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'azure].[SP_Update_platfrom_usage_log_file]')]",
							"storedProcedureParameters": {
								"file_name": {
									"value": {
										"value": "@activity('LK_file').output.firstRow.file_name",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "alldbdwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "run_sp_add_new_file_name",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'azure].[SP_add_new_file_to_table]')]"
						},
						"linkedServiceName": {
							"referenceName": "alldbdwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Platfrom_Usage"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/02_platfromusage_unzip_zip_blob_files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "lookup_file_to_unzip",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "      SELECT file_name,\n        folder,unzip_file\n\tFROM azure.platfrom_usage_log_file\n WHERE ISNULL(unzip_file,0) <>1 AND move_to_blob=1\n  \n  IF @@ROWCOUNT=0 THROW 50000 ,'No file to move',1"
							},
							"dataset": {
								"referenceName": "DWH_pu_list_files",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "unzip",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "lookup_file_to_unzip",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink",
								"copyBehavior": "PreserveHierarchy"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "platformusage_blob",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": "@concat('platformusage/rawdata/',activity('lookup_file_to_unzip').output.firstRow.folder,'/')",
									"file_name": "@concat(substring(activity('lookup_file_to_unzip').output.firstRow.FILE_NAME,0,8),'.zip')"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "blob_platfrom_unzip_file",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": "@concat('platformusage/unzip/',activity('lookup_file_to_unzip').output.firstRow.folder,'/')",
									"file_name": "@concat(substring(activity('lookup_file_to_unzip').output.firstRow.FILE_NAME,0,8),'.zip')"
								}
							}
						]
					},
					{
						"name": "update_unzip",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "unzip",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'azure].[SP_Update_platfrom_usage_log_file_unzip]')]",
							"storedProcedureParameters": {
								"file_name": {
									"value": {
										"value": "@activity('lookup_file_to_unzip').output.firstRow.file_name",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "alldbdwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Platfrom_Usage"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/03_PU_Load_ods_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PU_Load_ods_data",
						"description": "create one daily file from all daily files ",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Lookup_file_to_create",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Load Data/Platform Usage/PU Load ods data",
							"baseParameters": {
								"input_file_path": {
									"value": "@activity('Lookup_file_to_create').output.firstRow.file_name",
									"type": "Expression"
								},
								"ods": "/mnt/dataloadestore/platformusage/ods/",
								"zippath": "/mnt/dataloadestore/platformusage/unzip/",
								"folder_name": {
									"value": "@activity('Lookup_file_to_create').output.firstRow.folder",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_file_to_create",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "   SELECT file_name,\n        folder,daily_file\nFROM azure.platfrom_usage_log_file\nWHERE 1=1\nAND move_to_blob =1 \nAND unzip_file=1\nAND  ISNULL(daily_file,0)<>1\n"
							},
							"dataset": {
								"referenceName": "DWH_pu_list_files",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Update_Create_Daily_File",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "PU_Load_ods_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'azure].[SP_Update_platfrom_usage_log_file_create_daily_file]')]",
							"storedProcedureParameters": {
								"file_name": {
									"value": {
										"value": "@activity('Lookup_file_to_create').output.firstRow.file_name",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "alldbdwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Platfrom_Usage"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Contacts')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Id_Mng_azure_ETL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT  LastIncrementalDate=LastId \n  ---- remove to use incremental\n FROM  [localdb].[azure].[Mng_azure_ETL]\n  WHERE TableName='Contacts'"
							},
							"dataset": {
								"referenceName": "Mng_azure_ETL",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Id_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * from   EmErp_LM.azure.scmm_contacts\n where update_date > CAST(CAST('@{activity('LK_Last_Id_Mng_azure_ETL').output.firstRow.LastIncrementalDate}' AS bigint) AS VARBINARY(8))\n",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "Contacts",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Blob_Contacts",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": "Contacts"
								}
							}
						]
					},
					{
						"name": "update_mng_azure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'azure].[SP_Update_Mng_azure_ETL]')]",
							"storedProcedureParameters": {
								"LastId": {
									"value": {
										"value": "@{activity('LK_new_max_id').output.firstRow.last_id}",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"LastIncrementalDate": {
									"value": "1990-01-01",
									"type": "DateTime"
								},
								"TableName": {
									"value": "Contacts",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "alldbdwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LK_new_max_id",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT last_id= MAX(timeStampINT)\nFROM EmErp_LM.azure.scmm_contacts\n"
							},
							"dataset": {
								"referenceName": "Contacts",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Contacts",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "update_mng_azure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Load Data/SCMM/contacts"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Data_from_SQL"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_emerp')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_576",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Destination",
								"value": "testdata/dspsample.csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "-- test 5\r\nSELECT RAWDB_Id, DynamicSerialParams\r\nFROM emerp_db.dbo.events\r\nWHERE RAWDB_Id IN(\r\n998890442,\r\n998890443,\r\n998890445,\r\n999093755,\r\n999093756,\r\n999094912,\r\n999102165)\r\n"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_576",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "BI_Events_blob",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_emerpdsp')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_emerpdsp",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Destination",
								"value": "testdata/dat"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "-- test 5\nSELECT RAWDB_Id, DynamicSerialParams\nFROM emerp_db.dbo.events\nWHERE RAWDB_Id IN(\n998890442,\n998890443,\n998890445,\n999093755,\n999093756,\n999094912,\n999102165)\n"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_bvj",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_bvj",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_gjq')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_gjq",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Destination",
								"value": "/fact_account"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "select * from fact_account where actionDay='2018-09-09'"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_gjq",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_opq",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "_old"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy_emerp_events')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_tau",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Destination",
								"value": "emerp-events/ods/events_2017"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "select * from emerp_db.dbo.events\r\nwhere fixed_timestamp <'2008-01-01'"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"redirectIncompatibleRowSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "emerp-events/ods_errors"
							},
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_tau",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "BI_Events_blob",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Customers')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Id_Mng_azure_ETL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "\n  \nSELECT  LastIncrementalDate=DATEADD(MINUTE,65,LastIncrementalDate)   \n  ---- remove to use incremental\n FROM  [localdb].[azure].[Mng_azure_ETL]\n  WHERE TableName='Customers'\n"
							},
							"dataset": {
								"referenceName": "Mng_azure_ETL",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LK_new_max_id",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT ExecutionDate=MAX(SsisUpdatedDate)\n FROM dwh.azure.AZ_Customers\n"
							},
							"dataset": {
								"referenceName": "Mng_azure_ETL",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Id_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select * from  dwh.azure.AZ_Customers\n where SsisUpdatedDate > '@{activity('LK_Last_Id_Mng_azure_ETL').output.firstRow.LastIncrementalDate}' and SsisUpdatedDate<= '@{activity('LK_new_max_id').output.firstRow.ExecutionDate}'",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "Customers",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "blob_Customers",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": "Customers"
								}
							}
						]
					},
					{
						"name": "update_mng_azure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'azure].[SP_Update_Mng_azure_ETL]')]",
							"storedProcedureParameters": {
								"LastId": {
									"value": "-1",
									"type": "Int64"
								},
								"LastIncrementalDate": {
									"value": {
										"value": "@{activity('LK_new_max_id').output.firstRow.ExecutionDate}",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": "Customers",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "alldbdwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Customers",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "update_mng_azure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Process/Infrastructure/Customers"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Data_from_SQL"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DWH_Calls')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Id_Mng_azure_ETL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT  LastIncrementalDate \n  ---- remove to use incremental\nFROM  localdb.azure.Mng_azure_ETL\nWHERE TableName='DWH_Calls'"
							},
							"dataset": {
								"referenceName": "Mng_azure_ETL",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LK_new_max_id",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT executionDay=DATEADD(DAY,-1,MAX(callday))\nFROM dwh.azure.calls"
							},
							"dataset": {
								"referenceName": "Mng_azure_ETL",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Id_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "\nselect * \nFROM dwh.azure.calls\nwhere callday> '@{activity('LK_Last_Id_Mng_azure_ETL').output.firstRow.LastIncrementalDate}' and callday<= '@{activity('LK_new_max_id').output.firstRow.executionDay}'",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"Call_ID": "Call_ID",
									"Call_Details": "Call_Details",
									"CallDay": "CallDay"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dwh_calls_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dwh_calls_blob",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "update_mng_azure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'azure].[SP_Update_Mng_azure_ETL]')]",
							"storedProcedureParameters": {
								"LastId": {
									"value": "-1",
									"type": "Int64"
								},
								"LastIncrementalDate": {
									"value": {
										"value": "@{activity('LK_new_max_id').output.firstRow.ExecutionDay}",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": "DWH_Calls",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "alldbdwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Load_Calls_To_Events",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "update_mng_azure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Load Data/Calls/Load Calls"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Data_from_SQL"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DWH_LeadAssignments')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Id_Mng_azure_ETL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT  LastIncrementalDate \n  ---- remove to use incremental\nFROM  localdb.azure.Mng_azure_ETL\nWHERE TableName='DWH_LeadAssignments'"
							},
							"dataset": {
								"referenceName": "Mng_azure_ETL",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LK_new_max_id",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT Assignment_Day=DATEADD(DAY,-1,MAX(Assignment_day))\nFROM dwh.azure.Lead_Assignments"
							},
							"dataset": {
								"referenceName": "Mng_azure_ETL",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Id_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "\nselect * \nFROM dwh.azure.Lead_Assignments\nwhere Assignment_Day> '@{activity('LK_Last_Id_Mng_azure_ETL').output.firstRow.LastIncrementalDate}' and Assignment_Day<= '@{activity('LK_new_max_id').output.firstRow.Assignment_Day}'",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"Call_ID": "Call_ID",
									"Call_Details": "Call_Details",
									"CallDay": "CallDay"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dwh_calls_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dwh_calls_blob",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "update_mng_azure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'azure].[SP_Update_Mng_azure_ETL]')]",
							"storedProcedureParameters": {
								"LastId": {
									"value": "-1",
									"type": "Int64"
								},
								"LastIncrementalDate": {
									"value": {
										"value": "@{activity('LK_new_max_id').output.firstRow.Assignment_Day}",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": "DWH_Calls",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "alldbdwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Data_from_SQL"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EMERP_Events')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Id_Mng_azure_ETL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT  LastIncrementalDate=DATEADD(MINUTE,65,LastIncrementalDate)   \n  ---- remove to use incremental\n FROM  localdb.azure.Mng_azure_ETL\n  WHERE TableName='EMERP_DB_Events'"
							},
							"dataset": {
								"referenceName": "Mng_azure_ETL",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LK_new_max_id",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": " SELECT ExecutionDate=MAX(Event_Date_day)\n FROM EmErp_DB.azure.AZ_EMERP_DB_Events"
							},
							"dataset": {
								"referenceName": "Mng_azure_ETL",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Id_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select * from  EmErp_DB.azure.AZ_EMERP_DB_Events\n where Event_Date_day > '@{activity('LK_Last_Id_Mng_azure_ETL').output.firstRow.LastIncrementalDate}' and Event_Date_day <= '@{activity('LK_new_max_id').output.firstRow.ExecutionDate}'",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "EMERP_DB_Events",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "blob_EMERP_Events",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": "EMERP_Events"
								}
							}
						]
					},
					{
						"name": "update_mng_azure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'azure].[SP_Update_Mng_azure_ETL]')]",
							"storedProcedureParameters": {
								"LastId": {
									"value": "-1",
									"type": "Int64"
								},
								"LastIncrementalDate": {
									"value": {
										"value": "@{activity('LK_new_max_id').output.firstRow.ExecutionDate}",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": "EMERP_DB_Events",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "alldbdwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "EMERP_Events",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "update_mng_azure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Load Data/Emerp Events/EMERP_Events_to_events_table"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Data_from_SQL"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FXNET_Deals')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Id_Mng_azure_ETL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT  LastIncrementalDate \n  ---- remove to use incremental\nFROM  localdb.azure.Mng_azure_ETL\nWHERE TableName='FXNET_Deals'"
							},
							"dataset": {
								"referenceName": "Mng_azure_ETL",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LK_new_max_id",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT executionDay=DATEADD(DAY,-1,MAX(executionday))\nFROM dwh.azure.deals"
							},
							"dataset": {
								"referenceName": "Mng_azure_ETL",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Id_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "\nselect * \nFROM dwh.azure.deals\nwhere executionDay > '@{activity('LK_Last_Id_Mng_azure_ETL').output.firstRow.LastIncrementalDate}' and executionDay<= '@{activity('LK_new_max_id').output.firstRow.executionDay}'",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"TransactionNumber": "TransactionNumber",
									"Trans_Details": "Trans_Details",
									"ExecutionDay": "ExecutionDay"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "fxnet_deals_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "fxnet_deals_blob",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": "FXNET_Deals"
								}
							}
						]
					},
					{
						"name": "update_mng_azure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'azure].[SP_Update_Mng_azure_ETL]')]",
							"storedProcedureParameters": {
								"LastId": {
									"value": "-1",
									"type": "Int64"
								},
								"LastIncrementalDate": {
									"value": {
										"value": "@{activity('LK_new_max_id').output.firstRow.ExecutionDay}",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": "FXNET_Deals",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "alldbdwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Data_from_SQL"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/fxnet_deals_src')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Platfrom_Usage_Log_Collector')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_qai",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "processed/PlatfromUsagePROD_@{formatDateTime(pipeline().parameters.windowStart,'yyyy')}@{formatDateTime(pipeline().parameters.windowStart,'MM')}@{formatDateTime(pipeline().parameters.windowStart,'dd')}*"
							},
							{
								"name": "Destination",
								"value": "INprocessed/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": false
							},
							"sink": {
								"type": "FileSystemSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_PlatfromUsagePROD",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_qai",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"windowStart": {
						"type": "String"
					}
				},
				"folder": {
					"name": "_old"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Serials')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Id_Mng_azure_ETL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT  LastIncrementalDate=DATEADD(MINUTE,65,LastIncrementalDate)   \n  ---- remove to use incremental\n FROM  [localdb].[azure].[Mng_azure_ETL]\n  WHERE TableName='Serials'"
							},
							"dataset": {
								"referenceName": "Mng_azure_ETL",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Id_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "serials",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Blob_Serials",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": "Serials"
								}
							}
						]
					},
					{
						"name": "update_mng_azure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'azure].[SP_Update_Mng_azure_ETL]')]",
							"storedProcedureParameters": {
								"LastId": {
									"value": "-1",
									"type": "Int64"
								},
								"LastIncrementalDate": {
									"value": {
										"value": "@{activity('LK_new_max_id').output.firstRow.ExecutionDate}",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": "Serials",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "alldbdwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LK_new_max_id",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": " SELECT ExecutionDate=MAX(update_date)\n FROM azure.az_serials"
							},
							"dataset": {
								"referenceName": "serials",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Serials",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "update_mng_azure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Load Data/Emerp Events/serials"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Data_from_SQL"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/serials')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copypufiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_opq",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "/"
							},
							{
								"name": "Destination",
								"value": "puods/pulogfile"
							}
						],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink",
								"copyBehavior": "MergeFiles"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_opq",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_opq",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "_old"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}