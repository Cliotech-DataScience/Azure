{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "puDataFactory"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Source_files_pu_raw_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "pu_raw_file_LS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Platform Usage"
				},
				"annotations": [],
				"type": "FileShare",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/all_db_pr_SQL_SERVER')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "alldbdwh",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "_ Contact_crm"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dwh_Customer_Questionnaires_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "AccountNumber",
						"type": "Int32"
					},
					{
						"name": "details",
						"type": "String"
					},
					{
						"name": "Last_Update",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "[[azure].[AZ_Customer_Questionnaires]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dwh_Dim_Users_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "User_ID",
						"type": "Int16"
					},
					{
						"name": "details",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[azure].[AZ_Users]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dwh_calls_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "Call_ID",
						"type": "Int32"
					},
					{
						"name": "Call_Details",
						"type": "String"
					},
					{
						"name": "CallDay",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "[[azure].[AZ_Calls]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dwh_lead_assignments_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "Fact_Lead_Assignments_ID",
						"type": "Int32"
					},
					{
						"name": "Assignment_Day",
						"type": "Date"
					},
					{
						"name": "Assignment_Date",
						"type": "DateTime"
					},
					{
						"name": "Details",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[azure].[AZ_Lead_assignments]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dwhpr_dynamic_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Dwhpr",
					"type": "LinkedServiceReference",
					"parameters": {
						"DB": {
							"value": "@dataset().DB",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"DB": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					},
					"schema": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/fxnet_accounting_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "fact_account_trans_id",
						"type": "Int64"
					},
					{
						"name": "ActionDay",
						"type": "Date"
					},
					{
						"name": "ActionDate",
						"type": "DateTime"
					},
					{
						"name": "Details",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[azure].[AZ_Accounting]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/fxnet_deals_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "TransactionNumber",
						"type": "Int32"
					},
					{
						"name": "ExecutionDay",
						"type": "Date"
					},
					{
						"name": "ExecutionDate",
						"type": "DateTime"
					},
					{
						"name": "Trans_Details",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[azure].[AZ_Deals]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/scmm_activities_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCMM_DBG_PR1",
					"type": "LinkedServiceReference",
					"parameters": {
						"DB": "EmErp_LM"
					}
				},
				"folder": {
					"name": "DWH"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "Activity_Id",
						"type": "Int32"
					},
					{
						"name": "Activity_Date",
						"type": "DateTime"
					},
					{
						"name": "details",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[azure].[AZ_SCMM_Activities]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/scmm_dev_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "alldbdwh",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SQL_Table_name": {
						"type": "string",
						"defaultValue": "Emails"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().SQL_Table_name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/serials')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "emerpdbpr",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "Serial",
						"type": "Int64"
					},
					{
						"name": "serial_details",
						"type": "String"
					},
					{
						"name": "update_date",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "azure.az_serials"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/01_platfromusage_files_copy_to_blob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_file",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "  SELECT file_name,\n        folder\n\tFROM etl.platfrom_usage_log_file\n WHERE ISNULL(move_to_blob,0) <>1 \n  \n  IF @@ROWCOUNT=0 THROW 50000 ,'No file to move',1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Azure_Sql_bi_db",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy to blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_file",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "Source_file_avi",
								"type": "DatasetReference",
								"parameters": {
									"file_name": {
										"value": "@activity('LK_file').output.firstRow.file_name",
										"type": "Expression"
									},
									"folder": {
										"value": "@substring(activity('LK_file').output.firstRow.FILE_NAME,0,8)",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "platformusage_blob",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": {
										"value": "@concat('platformusage/rawdata/',activity('LK_file').output.firstRow.folder,'/')\n ",
										"type": "Expression"
									},
									"file_name": {
										"value": "@concat(substring(activity('LK_file').output.firstRow.FILE_NAME,0,8),'.zip')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "update_platfrom_usage_log_file",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy to blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[etl].[SP_Update_platfrom_usage_log_file]",
							"storedProcedureParameters": {
								"file_name": {
									"value": {
										"value": "@activity('LK_file').output.firstRow.file_name",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Azure BI db",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Platfrom_Usage"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/03_PU_Load_ods_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PU_Load_ods_data",
						"description": "create one daily file from all daily files ",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Lookup_file_to_create",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Load Data/Platform Usage/PU Load ods data",
							"baseParameters": {
								"input_file_path": {
									"value": "@activity('Lookup_file_to_create').output.firstRow.file_name",
									"type": "Expression"
								},
								"ods": "/mnt/dataloadestore/platformusage/ods/",
								"zippath": "/mnt/dataloadestore/platformusage/unzip/",
								"folder_name": {
									"value": "@activity('Lookup_file_to_create').output.firstRow.folder",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_file_to_create",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "   SELECT file_name,\n        folder,daily_file\nFROM azure.platfrom_usage_log_file\nWHERE 1=1\nAND move_to_blob =1 \nAND unzip_file=1\nAND  ISNULL(daily_file,0)<>1\n",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DWH_pu_list_files",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Update_Create_Daily_File",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "PU_Load_ods_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[azure].[SP_Update_platfrom_usage_log_file_create_daily_file]",
							"storedProcedureParameters": {
								"file_name": {
									"value": {
										"value": "@activity('Lookup_file_to_create').output.firstRow.file_name",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "alldbdwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Platfrom_Usage/old"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Communication')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Date_Mng_azure_ETL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureTableSource",
								"azureTableSourceQuery": "PartitionKey eq 'Upload Data' and RowKey eq 'Communication'",
								"azureTableSourceIgnoreTableNotFound": false
							},
							"dataset": {
								"referenceName": "etl_manage",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "LK_new_max_date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": " SELECT Last_Event_Date = MAX(Event_Date)\nFROM EMERP_LM.azure.AZ_Communication\nWHERE Event_Date < CAST(GETDATE() AS DATE)\nand  Event_Date>'2022-07-30'",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Communication_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Date_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "select * \nFROM EMERP_LM.azure.AZ_Communication\nwhere Event_Date > '@{activity('LK_Last_Date_Mng_azure_ETL').output.value[0].Last_Incremental_Date}' and Event_Date <= '@{activity('LK_new_max_date').output.firstRow.Last_Event_Date}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"MessageID": "MessageID",
									"Event_Date": "Event_Date",
									"details": "details"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Communication_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Communication_blob",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Update Manage Table",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MergeTableStore",
								"type": "PipelineReference"
							},
							"parameters": {
								"PartitionKey": "Upload Data",
								"RowKey": "Communication",
								"PropertyName": "Last_Incremental_Date",
								"PropertyValue": {
									"value": "@activity('LK_new_max_date').output.firstRow.Last_Event_Date",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load Communication to Events",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Update Manage Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Load Data/Digital Communication/Load Communication"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Data_from_SQL"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Contacts')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Id_Mng_azure_ETL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "  SELECT  LastIncrementalDate=LastId \n  ---- remove to use incremental\n FROM  Mng_data_factory_ETL\n  WHERE TableName='Contacts'\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Mng_data_factory_etl",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Id_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * from   EmErp_LM.azure.scmm_contacts\n where update_date > CAST(CAST('@{activity('LK_Last_Id_Mng_azure_ETL').output.firstRow.LastIncrementalDate}' AS bigint) AS VARBINARY(8))\n",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"parallelCopies": 6
						},
						"inputs": [
							{
								"referenceName": "Contacts",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Blob_Contacts",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": "Contacts"
								}
							}
						]
					},
					{
						"name": "update_mng_azure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "SP_Update_Mng_data_factory_ETL",
							"storedProcedureParameters": {
								"LastId": {
									"value": {
										"value": "@{activity('LK_new_max_id').output.firstRow.last_id}",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"LastIncrementalDate": {
									"value": "1990-01-01",
									"type": "DateTime"
								},
								"TableName": {
									"value": "Contacts",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Azure BI db",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LK_new_max_id",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT last_id= MAX(timeStampINT)\nFROM EmErp_LM.azure.scmm_contacts\n",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Contacts",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Contacts",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "update_mng_azure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Load Data/Dimensions/contacts"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Data_from_SQL"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy Model Data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Model Data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "Assignment.Model_Data"
							},
							{
								"name": "Destination",
								"value": "mirrordatafs//adata"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "DM_Model_Data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ADLS_Model_Data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Assignment Score"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_5qf')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_5qf",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.agent_tab"
							},
							{
								"name": "Destination",
								"value": "agents"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "agent_numerator",
											"type": "Int32"
										},
										"sink": {
											"path": "$"
										}
									},
									{
										"source": {
											"name": "id",
											"type": "Guid"
										},
										"sink": {
											"path": "$['agent_id']"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String"
										},
										"sink": {
											"path": "$['agent_name']"
										}
									},
									{
										"source": {
											"name": "status",
											"type": "Byte"
										},
										"sink": {
											"path": "$['status']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_5qf",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_5qf",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_Moneytrans')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_4o1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.Fact_MoneyTrans"
							},
							{
								"name": "Destination",
								"value": "mirrordatafs/moneytrans/@{formatDateTime(pipeline().parameters.windowStart,'yyyy')}/@{formatDateTime(pipeline().parameters.windowStart,'MM')}/mtrans_@{formatDateTime(pipeline().parameters.windowStart,'yyyy')}@{formatDateTime(pipeline().parameters.windowStart,'MM')}@{formatDateTime(pipeline().parameters.windowStart,'dd')}"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "select * from [dbo].[Fact_MoneyTrans] \nwhere [Request_Date] >= '@{formatDateTime(pipeline().parameters.windowStart, 'yyyy-MM-dd HH:mm' )}' \nAND [Request_Date] < '@{formatDateTime(pipeline().parameters.windowEnd, 'yyyy-MM-dd HH:mm' )}'",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"filePattern": "arrayOfObjects"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Moneytrans_Id",
											"type": "Int32"
										},
										"sink": {
											"path": "$['Moneytrans_Id']"
										}
									},
									{
										"source": {
											"name": "Update_Date",
											"type": "DateTime"
										},
										"sink": {
											"path": "$['Update_Date']"
										}
									},
									{
										"source": {
											"name": "Request_Date",
											"type": "DateTime"
										},
										"sink": {
											"path": "$['Request_Date']"
										}
									},
									{
										"source": {
											"name": "AccountNumber",
											"type": "Int32"
										},
										"sink": {
											"path": "$['AccountNumber']"
										}
									},
									{
										"source": {
											"name": "CCY",
											"type": "String"
										},
										"sink": {
											"path": "$['CCY']"
										}
									},
									{
										"source": {
											"name": "Amount",
											"type": "Double"
										},
										"sink": {
											"path": "$['Amount']"
										}
									},
									{
										"source": {
											"name": "Moneytrans_Stage_Id",
											"type": "Int16"
										},
										"sink": {
											"path": "$['Moneytrans_Stage_Id']"
										}
									},
									{
										"source": {
											"name": "Moneytrans_Stage",
											"type": "String"
										},
										"sink": {
											"path": "$['Moneytrans_Stage']"
										}
									},
									{
										"source": {
											"name": "Credit_Card",
											"type": "String"
										},
										"sink": {
											"path": "$['Credit_Card']"
										}
									},
									{
										"source": {
											"name": "WireTransfer_Bank",
											"type": "String"
										},
										"sink": {
											"path": "$['WireTransfer_Bank']"
										}
									},
									{
										"source": {
											"name": "Payment_Provider_Id",
											"type": "Int16"
										},
										"sink": {
											"path": "$['Payment_Provider_Id']"
										}
									},
									{
										"source": {
											"name": "Payment_Provider",
											"type": "String"
										},
										"sink": {
											"path": "$['Payment_Provider']"
										}
									},
									{
										"source": {
											"name": "Payment_Type_Id",
											"type": "Int16"
										},
										"sink": {
											"path": "$['Payment_Type_Id']"
										}
									},
									{
										"source": {
											"name": "Payment_Type",
											"type": "String"
										},
										"sink": {
											"path": "$['Payment_Type']"
										}
									},
									{
										"source": {
											"name": "Payment_Provider_Owner_Broker_Id",
											"type": "Int32"
										},
										"sink": {
											"path": "$['Payment_Provider_Owner_Broker_Id']"
										}
									},
									{
										"source": {
											"name": "Sessions_ID",
											"type": "Int64"
										},
										"sink": {
											"path": "$['Sessions_ID']"
										}
									},
									{
										"source": {
											"name": "Amount_USD",
											"type": "Double"
										},
										"sink": {
											"path": "$['Amount_USD']"
										}
									},
									{
										"source": {
											"name": "Is_First_Deposit_Success",
											"type": "Int16"
										},
										"sink": {
											"path": "$['Is_First_Deposit_Success']"
										}
									},
									{
										"source": {
											"name": "Is_First_Deposit_Attempt",
											"type": "Int16"
										},
										"sink": {
											"path": "$['Is_First_Deposit_Attempt']"
										}
									},
									{
										"source": {
											"name": "Payment_Clearer_Id",
											"type": "Int32"
										},
										"sink": {
											"path": "$['Payment_Clearer_Id']"
										}
									},
									{
										"source": {
											"name": "Payment_Clearer_Name",
											"type": "String"
										},
										"sink": {
											"path": "$['Payment_Clearer_Name']"
										}
									},
									{
										"source": {
											"name": "PaymentAuthenticationModeID",
											"type": "Byte"
										},
										"sink": {
											"path": "$['PaymentAuthenticationModeID']"
										}
									},
									{
										"source": {
											"name": "PaymentAuthenticationMode",
											"type": "String"
										},
										"sink": {
											"path": "$['PaymentAuthenticationMode']"
										}
									},
									{
										"source": {
											"name": "ConcretePaymentTypeID",
											"type": "Int32"
										},
										"sink": {
											"path": "$['ConcretePaymentTypeID']"
										}
									},
									{
										"source": {
											"name": "ConcretePaymentType",
											"type": "String"
										},
										"sink": {
											"path": "$['ConcretePaymentType']"
										}
									},
									{
										"source": {
											"name": "CCTypeId",
											"type": "Byte"
										},
										"sink": {
											"path": "$['CCTypeId']"
										}
									},
									{
										"source": {
											"name": "CCType",
											"type": "String"
										},
										"sink": {
											"path": "$['CCType']"
										}
									},
									{
										"source": {
											"name": "First6",
											"type": "String"
										},
										"sink": {
											"path": "$['First6']"
										}
									},
									{
										"source": {
											"name": "CCIssuer",
											"type": "String"
										},
										"sink": {
											"path": "$['CCIssuer']"
										}
									},
									{
										"source": {
											"name": "CCCountry",
											"type": "String"
										},
										"sink": {
											"path": "$['CCCountry']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_4o1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_4o1",
								"type": "DatasetReference",
								"parameters": {
									"cw_fileName": "mtrans_@{formatDateTime(pipeline().parameters.windowStart,'yyyy')}@{formatDateTime(pipeline().parameters.windowStart,'MM')}@{formatDateTime(pipeline().parameters.windowStart,'dd')}",
									"cw_folderPath": "moneytrans/@{formatDateTime(pipeline().parameters.windowStart,'yyyy')}/@{formatDateTime(pipeline().parameters.windowStart,'MM')}"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "String"
					},
					"windowEnd": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_small_tables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach_y59",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_y59",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{item().source.schema}.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "bi.@{item().destination.table}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": {
												"value": "@item().copySink.writeBehavior",
												"type": "Expression"
											},
											"sqlWriterUseTableLock": {
												"value": "@item().copySink.sqlWriterUseTableLock",
												"type": "Expression"
											},
											"upsertSettings": {
												"useTempDB": true
											},
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"validateDataConsistency": false,
										"translator": {
											"value": "@item().copyActivity.translator",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "SourceDataset_y59",
											"type": "DatasetReference",
											"parameters": {
												"cw_schema": "@item().source.schema",
												"cw_table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_y59",
											"type": "DatasetReference",
											"parameters": {
												"cw_table": "@item().destination.table"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"schema": "Calls",
									"table": "CallModes"
								},
								"destination": {
									"table": "CallModes"
								},
								"copySink": {
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"mappings": [
											{
												"source": {
													"name": "CallModeID",
													"type": "Byte",
													"physicalType": "tinyint"
												},
												"sink": {
													"name": "CallModeID",
													"type": "Byte"
												}
											},
											{
												"source": {
													"name": "CallModeName",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "CallModeName",
													"type": "String"
												}
											}
										],
										"typeConversion": true,
										"typeConversionSettings": {
											"allowDataTruncation": true,
											"treatBooleanAsNumber": false
										}
									}
								}
							},
							{
								"source": {
									"schema": "Communication",
									"table": "Statuses"
								},
								"destination": {
									"table": "Statuses"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"mappings": [
											{
												"source": {
													"name": "StatusID",
													"type": "Int16",
													"physicalType": "smallint"
												},
												"sink": {
													"name": "StatusID",
													"type": "Int16"
												}
											},
											{
												"source": {
													"name": "Status",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "Status",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "TreatAsSent",
													"type": "Boolean",
													"physicalType": "bit"
												},
												"sink": {
													"name": "TreatAsSent",
													"type": "Boolean"
												}
											}
										],
										"typeConversion": true,
										"typeConversionSettings": {
											"allowDataTruncation": true,
											"treatBooleanAsNumber": false
										}
									}
								}
							}
						]
					}
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}