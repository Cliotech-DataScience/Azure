{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "puDataFactory"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Customers')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Id_Mng_azure_ETL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT  LastIncrementalDate=DATEADD(DAY,-1,LastIncrementalDate)   \n  ---- remove to use incremental\n FROM  Mng_data_factory_ETL\n  WHERE TableName='Customers'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Mng_data_factory_etl",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LK_new_max_id",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT ExecutionDate=MAX(SsisUpdatedDate)\n FROM azure.AZ_Customers",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DWH_Dim_Customers_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Id_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select * from  dwh.azure.AZ_Customers\n where SsisUpdatedDate > '@{activity('LK_Last_Id_Mng_azure_ETL').output.firstRow.LastIncrementalDate}' ",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "DWH_Dim_Customers_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DWH_Dim_Customers_blob",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": "Customers"
								}
							}
						]
					},
					{
						"name": "update_mng_azure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "SP_Update_Mng_data_factory_ETL",
							"storedProcedureParameters": {
								"LastId": {
									"value": "-1",
									"type": "Int64"
								},
								"LastIncrementalDate": {
									"value": {
										"value": "@{activity('LK_new_max_id').output.firstRow.ExecutionDate}",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": "Customers",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Azure BI db",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Customers",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "update_mng_azure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Load Data/Dimensions/Customers"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Data_from_SQL"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DWH_Calls')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_new_max_Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT Next_Call_Day=DATEADD(DAY,-1,MAX(callday))\nFROM dwh.azure.AZ_Calls",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dwh_calls_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_new_max_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_Last_Date_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select * \nFROM dwh.azure.AZ_calls\nwhere callday> '@{activity('LK_Last_Date_Mng_azure_ETL').output.firstRow.Last_Incremental_Date}' and callday<= '@{activity('LK_new_max_Date').output.firstRow.Next_Call_Day}'",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"Call_ID": "Call_ID",
									"Call_Details": "Call_Details",
									"CallDay": "CallDay"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dwh_calls_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dwh_calls_blob",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "LK_Last_Date_Mng_azure_ETL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureTableSource",
								"azureTableSourceQuery": "PartitionKey eq 'Upload Data' and RowKey eq 'DWH_Calls'",
								"azureTableSourceIgnoreTableNotFound": false
							},
							"dataset": {
								"referenceName": "etl_manage",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Load Calls to Events",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "merge tbl store",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Load Data/Calls/Load Calls"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "merge tbl store",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MergeTableStore",
								"type": "PipelineReference"
							},
							"parameters": {
								"PartitionKey": "Upload Data",
								"RowKey": "DWH_Calls",
								"PropertyName": "Last_Incremental_Date",
								"PropertyValue": {
									"value": "@{activity('LK_new_max_Date').output.firstRow.Next_Call_Day}",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Data_from_SQL"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DWH_Dim_Users')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"User_ID": "User_ID",
									"details": "details"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dwh_Dim_Users_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dwh_Dim_Users_blob",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Load_Users",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Load Data/Dimensions/Users"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Data_from_SQL"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DWH_Lead_Assignments')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "assignments",
				"activities": [
					{
						"name": "LK_Last_Date_Mng_azure_ETL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureTableSource",
								"azureTableSourceQuery": {
									"value": "PartitionKey eq 'Upload Data' and RowKey eq '@{variables('Table_Name')}'",
									"type": "Expression"
								},
								"azureTableSourceIgnoreTableNotFound": false
							},
							"dataset": {
								"referenceName": "etl_manage",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "LK_new_max_date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT Last_Date=MAX(Assignment_Date)\nFROM azure.AZ_Lead_Assignments \nWHERE Assignment_Day BETWEEN\nCAST(GETDATE() - 100 AS DATE) AND CAST(GETDATE() - 1 AS DATE) \n",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dwh_lead_assignments_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Date_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * \nFROM azure.AZ_Lead_Assignments\nwhere Assignment_Date > '@{activity('LK_Last_Date_Mng_azure_ETL').output.value[0].Last_Incremental_Date}' \n  and Assignment_Date <= '@{activity('LK_new_max_date').output.firstRow.Last_Date}'\n  and Assignment_Day > dateadd(day,-1,cast('@{activity('LK_Last_Date_Mng_azure_ETL').output.value[0].Last_Incremental_Date}' as date))\n  and Assignment_Day < dateadd(day,1,cast('@{activity('LK_new_max_date').output.firstRow.Last_Date}' as date))\n",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"Fact_Lead_Assignments_ID": "Fact_Lead_Assignments_ID",
									"Assignment_Day": "Assignment_Day",
									"Assignment_Date": "Assignment_Date",
									"Details": "Details"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dwh_lead_assignments_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dwh_lead_assignments_blob",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Update Manage Table",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MergeTableStore",
								"type": "PipelineReference"
							},
							"parameters": {
								"PartitionKey": "Upload Data",
								"RowKey": {
									"value": "@variables('Table_Name')",
									"type": "Expression"
								},
								"PropertyName": "Last_Incremental_Date",
								"PropertyValue": {
									"value": "@activity('LK_new_max_date').output.firstRow.Last_Date",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "load assignments to events",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Update Manage Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Load Data/SCMM/Load Lead Assignments"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"Table_Name": {
						"type": "String",
						"defaultValue": "DWH_Lead_Assignments"
					}
				},
				"folder": {
					"name": "Data_from_SQL"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dim_Communication_Channels')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy data from on premise SQL Server to SQL Azure.\n\nYou can also go to \"Copy Data Tool\" to get the pipeline for more connectors and scenarios.",
				"activities": [
					{
						"name": "SQL_to_SQLAzure",
						"description": "Copy data from SQL server to SQL Azure",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ChannelID",
											"type": "Int32"
										},
										"sink": {
											"name": "ChannelID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ChannelTypeID",
											"type": "Byte"
										},
										"sink": {
											"name": "ChannelTypeID",
											"type": "Byte"
										}
									},
									{
										"source": {
											"name": "ChannelType",
											"type": "String"
										},
										"sink": {
											"name": "ChannelType",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ChannelName",
											"type": "String"
										},
										"sink": {
											"name": "ChannelName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ChannelStatus",
											"type": "String"
										},
										"sink": {
											"name": "ChannelStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SendingMethodID",
											"type": "Int16"
										},
										"sink": {
											"name": "SendingMethodID",
											"type": "Int16"
										}
									},
									{
										"source": {
											"name": "SendingMethodName",
											"type": "String"
										},
										"sink": {
											"name": "SendingMethodName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ChannelPopulationFilterId",
											"type": "Int32"
										},
										"sink": {
											"name": "ChannelPopulationFilterId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ChannelPopulationFilter",
											"type": "String"
										},
										"sink": {
											"name": "ChannelPopulationFilter",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Channel_Event",
											"type": "String"
										},
										"sink": {
											"name": "Channel_Event",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ChannelDeliveryScheduleType",
											"type": "String"
										},
										"sink": {
											"name": "ChannelDeliveryScheduleType",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CampaignID",
											"type": "Int32"
										},
										"sink": {
											"name": "CampaignID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CampaignName",
											"type": "String"
										},
										"sink": {
											"name": "CampaignName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CampaignCategory",
											"type": "String"
										},
										"sink": {
											"name": "CampaignCategory",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Campaign_System",
											"type": "String"
										},
										"sink": {
											"name": "Campaign_System",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Campaign_Schedule_Type",
											"type": "String"
										},
										"sink": {
											"name": "Campaign_Schedule_Type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EmailSubject",
											"type": "String"
										},
										"sink": {
											"name": "EmailSubject",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CampaignStatus",
											"type": "String"
										},
										"sink": {
											"name": "CampaignStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CampaignPopulationFilterId",
											"type": "Int32"
										},
										"sink": {
											"name": "CampaignPopulationFilterId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CampaignPopulationFilter",
											"type": "String"
										},
										"sink": {
											"name": "CampaignPopulationFilter",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ExpectedCustomerResponse",
											"type": "String"
										},
										"sink": {
											"name": "ExpectedCustomerResponse",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RewardID",
											"type": "Int32"
										},
										"sink": {
											"name": "RewardID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "RewardName",
											"type": "String"
										},
										"sink": {
											"name": "RewardName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Channel_Group",
											"type": "String"
										},
										"sink": {
											"name": "Channel_Group",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Scmm_Communication_Channels",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Azure_dwh_Dim_Channels",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DC"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EMERP_Events')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Id_Mng_azure_ETL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT  LastIncrementalDate=DATEADD(MINUTE,65,LastIncrementalDate)   \n  ---- remove to use incremental\n FROM dbo.Mng_data_factory_ETL\n  WHERE TableName='EMERP_DB_Events'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Mng_data_factory_etl",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LK_new_max_id",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": " SELECT ExecutionDate=MAX(Event_Date)\n FROM EmErp_DB.azure.AZ_EMERP_DB_Events",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "EMERP_DB_Events",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Id_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select * from  EmErp_DB.azure.AZ_EMERP_DB_Events\n where Event_Date > '@{activity('LK_Last_Id_Mng_azure_ETL').output.firstRow.LastIncrementalDate}' \n AND Event_Date <= '@{activity('LK_new_max_id').output.firstRow.ExecutionDate}'",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "EMERP_DB_Events",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "blob_EMERP_Events",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": "EMERP_Events"
								}
							}
						]
					},
					{
						"name": "Stored Procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "SP_Update_Mng_data_factory_ETL",
							"storedProcedureParameters": {
								"LastId": {
									"value": "-1",
									"type": "Int64"
								},
								"LastIncrementalDate": {
									"value": {
										"value": "@{activity('LK_new_max_id').output.firstRow.ExecutionDate}",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": "EMERP_DB_Events",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Azure BI db",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Stored Procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Load Data/Emerp Events/EMERP_Events_to_events_table"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Data_from_SQL"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Emails')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "CommonDataServiceForAppsSource",
								"query": "<fetch>  \n   <entity name='msdynmkt_email'>   \n      <attribute name='msdynmkt_name'/>   \n      <attribute name='msdynmkt_placeholders'/>   \n\t  <attribute name='msdynmkt_previewhtml'/>     \n   </entity>   \n</fetch>"
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "dataverse_Email",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "scmm_dev_sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "CRM"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FXNET_Accounting')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Date_Mng_azure_ETL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureTableSource",
								"azureTableSourceQuery": {
									"value": "PartitionKey eq 'Upload Data' and RowKey eq '@{variables('Table_Name')}'",
									"type": "Expression"
								},
								"azureTableSourceIgnoreTableNotFound": false
							},
							"dataset": {
								"referenceName": "etl_manage",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "LK_new_max_date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT Last_Activity_Date = MAX(ActionDate)\nFROM azure.AZ_Accounting\nWHERE ActionDay BETWEEN CAST(GETDATE() - 100 AS DATE) AND CAST(GETDATE() - 1 AS DATE) ",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "fxnet_accounting_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Date_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select * \nFROM azure.AZ_Accounting\nwhere ActionDate > '@{activity('LK_Last_Date_Mng_azure_ETL').output.value[0].Last_Incremental_Date}' \n  and ActionDate <= '@{activity('LK_new_max_date').output.firstRow.Last_Activity_Date}'\n  and ActionDay > dateadd(day,-1,cast('@{activity('LK_Last_Date_Mng_azure_ETL').output.value[0].Last_Incremental_Date}' as date))\n  and ActionDay < dateadd(day,1,cast('@{activity('LK_new_max_date').output.firstRow.Last_Activity_Date}' as date))",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"fact_account_trans_id": "fact_account_trans_id",
									"ActionDay": "ActionDay",
									"ActionDate": "ActionDate",
									"Details": "Details"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "fxnet_accounting_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "fxnet_accounting_blob",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Update Manage Table",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MergeTableStore",
								"type": "PipelineReference"
							},
							"parameters": {
								"PartitionKey": "Upload Data",
								"RowKey": {
									"value": "@variables('Table_Name')",
									"type": "Expression"
								},
								"PropertyName": "Last_Incremental_Date",
								"PropertyValue": {
									"value": "@activity('LK_new_max_date').output.firstRow.Last_Activity_Date",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load Accounts to Events",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Update Manage Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Load Data/FXNET/Load Accounting"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"Table_Name": {
						"type": "String",
						"defaultValue": "FXNET_Accounting"
					}
				},
				"folder": {
					"name": "Data_from_SQL"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FXNET_Deals')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Date_Mng_azure_ETL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureTableSource",
								"azureTableSourceQuery": {
									"value": "PartitionKey eq 'Upload Data' and RowKey eq '@{variables('Table_Name')}'",
									"type": "Expression"
								},
								"azureTableSourceIgnoreTableNotFound": false
							},
							"dataset": {
								"referenceName": "etl_manage",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LK_new_max_Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT Last_Date=MAX(ExecutionDate)\nFROM azure.AZ_Deals\nWHERE executionDay BETWEEN\nCAST(GETDATE() - 100 AS DATE) AND CAST(GETDATE() - 1 AS DATE) ",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "fxnet_deals_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Date_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select * \nFROM azure.AZ_Deals\nwhere executionDate > '@{activity('LK_Last_Date_Mng_azure_ETL').output.firstRow.Last_Incremental_Date}' \nand executionDate <= '@{activity('LK_new_max_Date').output.firstRow.Last_Date}'\nand executionDay > dateadd(day,-1,cast('@{activity('LK_Last_Date_Mng_azure_ETL').output.firstRow.Last_Incremental_Date}' as date))\nand executionDay < dateadd(day,1,cast('@{activity('LK_new_max_Date').output.firstRow.Last_Date}' as date))",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"TransactionNumber": "TransactionNumber",
									"ExecutionDay": "ExecutionDay",
									"ExecutionDate": "ExecutionDate",
									"Trans_Details": "Trans_Details"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "fxnet_deals_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "fxnet_deals_blob",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Update mng ETL table storage",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MergeTableStore",
								"type": "PipelineReference"
							},
							"parameters": {
								"PartitionKey": "Upload Data",
								"RowKey": {
									"value": "@variables('Table_Name')",
									"type": "Expression"
								},
								"PropertyName": "Last_Incremental_Date",
								"PropertyValue": {
									"value": "@activity('LK_new_max_Date').output.firstRow.Last_Date",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load Deals",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Update mng ETL table storage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Load Data/FXNET/Load Deals"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"Table_Name": {
						"type": "String",
						"defaultValue": "FXNET_Deals"
					}
				},
				"folder": {
					"name": "Data_from_SQL"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCMM_Activities')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Date_Mng_azure_ETL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureTableSource",
								"azureTableSourceQuery": "PartitionKey eq 'Upload Data' and RowKey eq 'SCMM_Activities'",
								"azureTableSourceIgnoreTableNotFound": false
							},
							"dataset": {
								"referenceName": "etl_manage",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "LK_new_max_date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT Last_Activity_Date = MAX(Activity_Date)\nFROM azure.AZ_SCMM_Activities\n",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "scmm_activities_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Date_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "select * \nFROM EMERP_LM.azure.AZ_SCMM_Activities\nwhere Activity_Date > '@{activity('LK_Last_Date_Mng_azure_ETL').output.value[0].Last_Incremental_Date}' and Activity_Date <= '@{activity('LK_new_max_date').output.firstRow.Last_Activity_Date}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"Activity_Id": "Activity_Id",
									"Activity_Date": "Activity_Date",
									"details": "details"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "scmm_activities_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "scmm_activities_blob",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Update Manage Table",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MergeTableStore",
								"type": "PipelineReference"
							},
							"parameters": {
								"PartitionKey": "Upload Data",
								"RowKey": "SCMM_Activities",
								"PropertyName": "Last_Incremental_Date",
								"PropertyValue": {
									"value": "@activity('LK_new_max_date').output.firstRow.Last_Activity_Date",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load_Activities_To_Events",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Update Manage Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Load Data/SCMM/Load Activities"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Data_from_SQL"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Scmm_Communication_MessageTemplates')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Id_Mng_azure_ETL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT  LastIncrementalDate=DATEADD(MINUTE,10,LastIncrementalDate)   \n  ---- remove to use incremental\n FROM  Mng_data_factory_ETL\n  WHERE TableName='MessageTemplates'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Mng_data_factory_etl",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LK_new_max_id",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT MAX(ContentUpdateDate) FROM emerp_lm.azure.scmm_Communication_MessageTemplates",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SCMM_ALL",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy data to file",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Id_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT * from   EmErp_LM.azure.scmm_Communication_MessageTemplates\n where ContentUpdateDate > '@{activity('LK_Last_Id_Mng_azure_ETL').output.firstRow.LastIncrementalDate}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureDatabricksDeltaLakeSink",
								"preCopyScript": "TRUNCATE TABLE prod_raw.mrr_Communication_MessageTemplates",
								"importSettings": {
									"type": "AzureDatabricksDeltaLakeImportCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "adf_staging_linked_service",
									"type": "LinkedServiceReference"
								},
								"path": "usan-data-lake-fs/adf_staging/Scmm_Communication_MessageTemplates",
								"enableCompression": false
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "MessageTemplateID",
											"type": "Int32"
										},
										"sink": {
											"name": "MessageTemplateID",
											"type": "Int"
										}
									},
									{
										"source": {
											"name": "ContentKey",
											"type": "String"
										},
										"sink": {
											"name": "ContentKey",
											"type": "string"
										}
									},
									{
										"source": {
											"name": "ChannelID",
											"type": "Int32"
										},
										"sink": {
											"name": "ChannelID",
											"type": "Int"
										}
									},
									{
										"source": {
											"name": "Created",
											"type": "DateTime"
										},
										"sink": {
											"name": "Created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Weight",
											"type": "Byte"
										},
										"sink": {
											"name": "Weight",
											"type": "Int"
										}
									},
									{
										"source": {
											"name": "ContentUpdateDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "ContentUpdateDate",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SCMM_ALL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureDatabricksDelta_DWH",
								"type": "DatasetReference",
								"parameters": {
									"table": "mrr_communication_messagetemplates"
								}
							}
						]
					},
					{
						"name": "Load_Communication_MessageTemplates",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Copy data to file",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Load Data/SCMM/Load_Communication_MessageTemplates",
							"baseParameters": {
								"env_type": "prod"
							}
						},
						"linkedServiceName": {
							"referenceName": "Adf_Cluster",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Data_from_SQL/sql_to_azure_delta_table"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Serials')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Id_Mng_azure_ETL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT  LastIncrementalDate=DATEADD(MINUTE,65,LastIncrementalDate)   \n  ---- remove to use incremental\n FROM  Mng_data_factory_ETL\n  WHERE TableName='Serials'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Mng_data_factory_etl",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Id_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "serials",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Blob_Serials",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": "Serials"
								}
							}
						]
					},
					{
						"name": "update_mng_azure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "SP_Update_Mng_data_factory_ETL",
							"storedProcedureParameters": {
								"LastId": {
									"value": "-1",
									"type": "Int64"
								},
								"LastIncrementalDate": {
									"value": {
										"value": "@{activity('LK_new_max_id').output.firstRow.ExecutionDate}",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": "Serials",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Azure BI db",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LK_new_max_id",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": " SELECT ExecutionDate=MAX(update_date)\n FROM azure.az_serials",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "serials",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Serials",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "update_mng_azure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Load Data/Dimensions/serials"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Delete_serials_file",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Serials",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_serials_row_folder",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false
						}
					},
					{
						"name": "Serials_after_delete",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Delete_serials_file",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Load Data/Dimensions/serials"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Data_from_SQL"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sync Tables from sql to delta')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lk_table_name",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT ID,\n       Server,\n       DB,\n       [schema],\n       TableName\nFROM dbo.synapse_Mng_Sync_Tables\nWHERE Active=1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lk_table_name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lk_table_name').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data to parquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "dwhpr_dynamic_table",
											"type": "DatasetReference",
											"parameters": {
												"DB": {
													"value": "@item().DB",
													"type": "Expression"
												},
												"TableName": "@item().TableName",
												"schema": "@item().schema"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Parquet_file_dynamic",
											"type": "DatasetReference",
											"parameters": {
												"Parquet_table_file_name": "@item().TableName",
												"Parquet_db": "@item().DB"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "azure"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sync Tables from sql to delta_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lk_table_name",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT ID,\n       Server,\n       DB,\n       [schema],\n       TableName\nFROM dbo.synapse_Mng_Sync_Tables\nWHERE Active=1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lk_table_name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lk_table_name').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data to parquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT TOP 10000* FROM [DWH].[vDwh_Customers_full]",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "dwhpr_dynamic_table",
											"type": "DatasetReference",
											"parameters": {
												"DB": {
													"value": "@item().DB",
													"type": "Expression"
												},
												"TableName": "@item().TableName",
												"schema": "@item().schema"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Parquet_file_dynamic",
											"type": "DatasetReference",
											"parameters": {
												"Parquet_table_file_name": "@item().TableName",
												"Parquet_db": "@item().DB"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "azure"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/_Poc_cosmos_db')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Id_Mng_azure_ETL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "  SELECT  LastIncrementalDate=LastId \n  ---- remove to use incremental\n FROM  Mng_data_factory_ETL\n  WHERE TableName='Contacts'\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Mng_data_factory_etl",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Id_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "SELECT top 10 * from   EmErp_LM.azure.scmm_contacts\n where update_date > CAST(CAST('@{activity('LK_Last_Id_Mng_azure_ETL').output.firstRow.LastIncrementalDate}' AS bigint) AS VARBINARY(8))\n",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"parallelCopies": 6
						},
						"inputs": [
							{
								"referenceName": "Contacts",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Blob_Contacts",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": "Contacts"
								}
							}
						]
					},
					{
						"name": "LK_new_max_id",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT last_id= MAX(timeStampINT)\nFROM EmErp_LM.azure.scmm_contacts\n",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Contacts",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Data_from_SQL"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/___CopyPipeline_pu_file_AUTO')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_np9",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "/"
							},
							{
								"name": "Destination",
								"value": "platformusage/_test_pu_raw_file_sync/@{formatDateTime(pipeline().parameters.windowStart,'yy')}/@{formatDateTime(pipeline().parameters.windowStart,'MM')}/@{formatDateTime(pipeline().parameters.windowStart,'dd')}/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"skipErrorFile": {
								"fileMissing": true
							},
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_np9",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_np9",
								"type": "DatasetReference",
								"parameters": {
									"cw_folderPath": "_test_pu_raw_file_sync/@{formatDateTime(pipeline().parameters.windowStart,'yy')}/@{formatDateTime(pipeline().parameters.windowStart,'MM')}/@{formatDateTime(pipeline().parameters.windowStart,'dd')}"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "String"
					}
				},
				"variables": {
					"files_list": {
						"type": "Array"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/___Scmm_Communication_MessageTemplates_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Id_Mng_azure_ETL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT  LastIncrementalDate=DATEADD(MINUTE,10,LastIncrementalDate)   \n  ---- remove to use incremental\n FROM  Mng_data_factory_ETL\n  WHERE TableName='MessageTemplates'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Mng_data_factory_etl",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LK_new_max_id",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT MAX(ContentUpdateDate) FROM emerp_lm.azure.scmm_Communication_MessageTemplates",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SCMM_ALL",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LK_Last_Id_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('LK_Last_Id_Mng_azure_ETL').output.firstRow,activity('LK_new_max_id').output.firstRow)\n",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "SELECT * from   EmErp_LM.azure.scmm_Communication_MessageTemplates\n where ContentUpdateDate > '@{activity('LK_Last_Id_Mng_azure_ETL').output.firstRow.LastIncrementalDate}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureDatabricksDeltaLakeSink",
											"preCopyScript": "TRUNCATE TABLE prod_raw.mrr_Communication_MessageTemplates",
											"importSettings": {
												"type": "AzureDatabricksDeltaLakeImportCommand"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "adf_staging_linked_service",
												"type": "LinkedServiceReference"
											},
											"path": "usan-data-lake-fs/adf_staging/Scmm_Communication_MessageTemplates"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "MessageTemplateID",
														"type": "Int32"
													},
													"sink": {
														"name": "MessageTemplateID",
														"type": "Int"
													}
												},
												{
													"source": {
														"name": "ContentKey",
														"type": "String"
													},
													"sink": {
														"name": "ContentKey",
														"type": "string"
													}
												},
												{
													"source": {
														"name": "ChannelID",
														"type": "Int32"
													},
													"sink": {
														"name": "ChannelID",
														"type": "Int"
													}
												},
												{
													"source": {
														"name": "Created",
														"type": "DateTime"
													},
													"sink": {
														"name": "Created",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"name": "Weight",
														"type": "Byte"
													},
													"sink": {
														"name": "Weight",
														"type": "Int"
													}
												},
												{
													"source": {
														"name": "ContentUpdateDate",
														"type": "DateTime"
													},
													"sink": {
														"name": "ContentUpdateDate",
														"type": "DateTime"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "SCMM_ALL",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureDatabricksDelta_DWH",
											"type": "DatasetReference",
											"parameters": {
												"table": "mrr_communication_messagetemplates"
											}
										}
									]
								},
								{
									"name": "Load_Communication_MessageTemplates_v2_copy1",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "Copy data1_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Load Data/SCMM/Load_Communication_MessageTemplates"
									},
									"linkedServiceName": {
										"referenceName": "Adf_Cluster",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Data_from_SQL/sql_to_azure_delta_table"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/___pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get FileName",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Source_files_pu_raw_file",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems",
								"lastModified"
							]
						}
					},
					{
						"name": "Append variable1",
						"type": "AppendVariable",
						"dependsOn": [
							{
								"activity": "Get FileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "files_lists",
							"value": {
								"value": "@activity('Get FileName').output.childItems[0]",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"files_lists": {
						"type": "Array"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/_pu_raw_files_sync')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_zwu",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "/"
							},
							{
								"name": "Destination",
								"value": "platformusage/_test_pu_raw_file_sync/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": {
										"value": "@pipeline().parameters.windowStart",
										"type": "Expression"
									},
									"modifiedDatetimeEnd": {
										"value": "@pipeline().parameters.windowEnd",
										"type": "Expression"
									},
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"skipErrorFile": {
								"fileMissing": true
							},
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_zwu",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_zwu",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "String"
					},
					"windowEnd": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cm camp SqlJsonToBlobText')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_lfo",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "."
							},
							{
								"name": "Destination",
								"value": "dwh-qa/sqldata/campaingscsv.json"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "\r\nSELECT [value] FROM OPENJSON(\r\n  (SELECT\r\n     c.numerator, c.id, c.name,\r\n    (select product_id = p.id, product_name= p.name, product_numerator = p.numerator ,\r\n\t\t(SELECT Serial_id =pc.id, pc.serial\r\n\t\tFROM product_creative_tab pc \r\n\t\tWHERE pc.product_id = p.id\r\n\t\tFOR JSON AUTO\r\n\t\t) AS Serials\r\n\t FROM product_tab p \r\n\t WHERE p.campaign_id = c.id \r\n\t FOR json auto) as Products\r\n   FROM dbo.campaign_tab\tc  \r\n   WHERE c.numerator BETWEEN 39900 AND 39950\r\n   FOR JSON PATH)\r\n)",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_lfo",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_lfo",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}