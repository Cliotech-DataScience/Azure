{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "puDataFactory"
		},
		"ADLS Byl_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLS Byl'"
		},
		"Analysis_spark_3_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'Analysis_spark_3'"
		},
		"Azure BI db_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Azure BI db'"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureBlobStorage2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage2'"
		},
		"AzureBlobStorage3_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage3'"
		},
		"AzureBlob_pu_files_raw_sc_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlob_pu_files_raw_sc'"
		},
		"AzureDataLake_gen2_usansa_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLake_gen2_usansa'"
		},
		"AzureDatabricks1_10_4_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks1_10_4'"
		},
		"AzureDatabricksDeltaLake_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricksDeltaLake'"
		},
		"AzureSql tesdb_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSql tesdb'"
		},
		"AzureSqlDatabase_dwh_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase_dwh'"
		},
		"AzureSqlDatabase_events_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase_events'"
		},
		"CosmosDb1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CosmosDb1'"
		},
		"DWH_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'DWH'"
		},
		"DWH_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'DWH'"
		},
		"DWH12_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'DWH12'"
		},
		"DWH12_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'DWH12'"
		},
		"DataLoadStorageAccount_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'DataLoadStorageAccount'"
		},
		"Databricks Job Cluster_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'Databricks Job Cluster'"
		},
		"DataloadStore_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'DataloadStore'"
		},
		"Dwhpr_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Dwhpr'"
		},
		"Dwhpr_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Dwhpr'"
		},
		"ETL Manage DB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ETL Manage DB'"
		},
		"Events_Collector_PlatfromUsage_log_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Events_Collector_PlatfromUsage_log'"
		},
		"SCMM SQL_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SCMM SQL'"
		},
		"SCMM SQL_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SCMM SQL'"
		},
		"SCMM_DBG_PR1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SCMM_DBG_PR1'"
		},
		"SCMM_DBG_PR1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SCMM_DBG_PR1'"
		},
		"STG_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'STG'"
		},
		"STG_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'STG'"
		},
		"alldbdwh_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'alldbdwh'"
		},
		"alldbdwh_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'alldbdwh'"
		},
		"bydatalakqa sa_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'bydatalakqa sa'"
		},
		"dwhdb_blob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'dwhdb_blob'"
		},
		"emerp_lm_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'emerp_lm'"
		},
		"emerp_lm_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'emerp_lm'"
		},
		"emerpdbpr_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'emerpdbpr'"
		},
		"emerpdbpr_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'emerpdbpr'"
		},
		"fileserver1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'fileserver1'"
		},
		"linkedService1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'linkedService1'"
		},
		"mlwprdwesa_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'mlwprdwesa'"
		},
		"pu_raw_file_LS_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'pu_raw_file_LS'"
		},
		"adf_staging_linked_service_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'adf_staging_linked_service'"
		},
		"BI_Events_blob_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "*.parquet"
		},
		"BI_Events_blob_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "bi-db/fact_events"
		},
		"BI_Logins_By_Country_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "*.parquet"
		},
		"BI_Logins_By_Country_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "bi-db/mrr_logins_by_country"
		},
		"BI_Serials_blob_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "*.parquet"
		},
		"BI_Serials_blob_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "bi-db/dim_serials"
		},
		"Blob_Contacts_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@CONCAT('Contacts_', pipeline().RunId, '.csv')"
		},
		"Blob_Contacts_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "rawdata/Contacts"
		},
		"Blob_Serials_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@CONCAT('Serials', pipeline().RunId, '.csv')"
		},
		"Blob_Serials_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "rawdata/Serials"
		},
		"Communication_blob_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@CONCAT('Communication_', pipeline().TriggerTime, '.csv.bz2')"
		},
		"Communication_blob_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "@concat('rawdata/Communication/Received=',utcnow('s'))"
		},
		"DWH_Dim_Customers_blob_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@CONCAT('Customers_', pipeline().RunId, '.csv')"
		},
		"DWH_Dim_Customers_blob_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "rawdata/Customers"
		},
		"SourceDataset_PlatfromUsagePROD_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "processed"
		},
		"Source_file_avi_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@dataset().file_name"
		},
		"Source_file_avi_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "@dataset().folder"
		},
		"blob_EMERP_Events_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@CONCAT('EMERP_Events', pipeline().RunId, '.csv')"
		},
		"blob_EMERP_Events_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "rawdata/EMERP_Events"
		},
		"blob_Fact_Transactions_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@CONCAT('test_pu-', pipeline().RunId, '.txt')"
		},
		"blob_Fact_Transactions_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "rawdata/Fact_Transactions"
		},
		"blob_PU_raw_files_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": ""
		},
		"blob_PU_raw_files_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "platformusage/_test_pu_raw_file_sync"
		},
		"blob_customers_clustering_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "*.csv"
		},
		"blob_customers_clustering_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "@concat('rawdata/export_file/customers_clustering/',dataset().folder_name)"
		},
		"blob_customers_clustering_folder_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": ""
		},
		"blob_customers_clustering_folder_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "@concat('rawdata/export_file/customers_clustering/',dataset().folder_name)"
		},
		"blob_customers_clustering_folder_hd_file_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "dataset().folder_name"
		},
		"blob_customers_clustering_folder_hd_file_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "rawdata/export_file/customers_clustering/"
		},
		"blob_customers_clustering_json_file_list_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "*.json"
		},
		"blob_customers_clustering_json_file_list_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "rawdata/export_file/customers_clustering/file_list.json"
		},
		"blob_platfrom_merge_file_des_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@dataset().file_name"
		},
		"blob_platfrom_merge_file_des_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "rawdata/platfrom_merged_by_day"
		},
		"blob_platfrom_unzip_file_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "@dataset().folder_name"
		},
		"blob_platfrom_unzip_file_1_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@dataset().file_name"
		},
		"blob_platfrom_unzip_file_1_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "@dataset().folder_name"
		},
		"blob_serials_row_folder_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "*.csv"
		},
		"blob_serials_row_folder_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "rawdata/Serials/"
		},
		"dwh_Customer_Questionnaires_blob_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@CONCAT('Customer_Questionnaires_', pipeline().TriggerTime, '.csv.bz2')"
		},
		"dwh_Customer_Questionnaires_blob_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "rawdata/Customer_Questionnaires/"
		},
		"dwh_Dim_Users_blob_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "Users.csv"
		},
		"dwh_Dim_Users_blob_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "rawdata/DWH_Users"
		},
		"dwh_calls_blob_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@CONCAT('Calls_', pipeline().TriggerTime, '.csv.bz2')"
		},
		"dwh_calls_blob_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "@concat('rawdata/DWH_Calls/Received=',utcnow('s'))"
		},
		"dwh_lead_assignments_blob_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@CONCAT('DWH_Lead_Assignments_', pipeline().TriggerTime, '.csv.bz2')"
		},
		"dwh_lead_assignments_blob_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "@concat('rawdata/DWH_Lead_Assignments/Received=',utcnow('s'))"
		},
		"fxnet_accounting_blob_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@CONCAT('FXNET_Accounting_', pipeline().TriggerTime, '.csv.bz2')"
		},
		"fxnet_accounting_blob_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "@concat('rawdata/FXNET_Accounting/Received=',utcnow('s'))"
		},
		"fxnet_deals_blob_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@CONCAT('FXNET_Deals_', pipeline().TriggerTime, '.csv.bz2')"
		},
		"fxnet_deals_blob_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "@concat('rawdata/FXNET_Deals/Received=',utcnow('s'))"
		},
		"platformusage_blob_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@dataset().file_name"
		},
		"platformusage_blob_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "@dataset().folder_name"
		},
		"scmm_activities_blob_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@CONCAT('SCMM_Activities_', pipeline().TriggerTime, '.csv.bz2')"
		},
		"scmm_activities_blob_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "@concat('rawdata/SCMM_Activities/Received=',utcnow('s'))"
		},
		"unzip_platfrom_file_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": ""
		},
		"unzip_platfrom_file_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "platformusage/rawdata/201810"
		},
		"ADLS Byl_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://byldatalakeqa.dfs.core.windows.net"
		},
		"Analysis_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0120-125803-reach437"
		},
		"Analysis_spark_3_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "1224-085455-babel544"
		},
		"AzureDataLake_gen2_usansa_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://usansa.dfs.core.windows.net/"
		},
		"DWH_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "efix\\az_etl"
		},
		"DWH12_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "efix\\Barak"
		},
		"Dwhpr_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "efix\\az_etl"
		},
		"Events_Collector_PlatfromUsage_log_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "\\\\netapp-ams-cifs\\db\\Events_Collector\\az_test_processed"
		},
		"Events_Collector_PlatfromUsage_log_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "efix\\az_etl"
		},
		"SCMM SQL_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "efix\\reportsprod"
		},
		"SCMM_DBG_PR1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "efix\\az_etl"
		},
		"STG_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "efix\\az_etl"
		},
		"alldbdwh_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "efix\\az_etl"
		},
		"emerp_lm_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "efix\\az_etl"
		},
		"emerpdbpr_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "efix\\az_etl"
		},
		"fileserver1_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "\\\\netapp-ams-cifs\\db\\Events_Collector\\Archived"
		},
		"fileserver1_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "efix\\az_etl"
		},
		"linkedService1_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "\\\\netapp-ams-cifs\\db\\Events_Collector\\pu_file_sync_to_azure\\files"
		},
		"linkedService1_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "efix\\az_etl"
		},
		"pu_raw_file_LS_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "\\\\netapp-ams-cifs\\db\\Events_Collector\\pu_file_sync_to_azure\\files"
		},
		"pu_raw_file_LS_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "efix\\az_etl"
		},
		"Trigger_np9_properties____CopyPipeline_pu_file_AUTO_parameters_windowStart": {
			"type": "string",
			"defaultValue": "@trigger().scheduledTime"
		},
		"Trigger_zwu_properties__pu_raw_files_sync_parameters_windowStart": {
			"type": "string",
			"defaultValue": "@{addminutes(trigger().scheduledTime, -24)}"
		},
		"Trigger_zwu_properties__pu_raw_files_sync_parameters_windowEnd": {
			"type": "string",
			"defaultValue": "@trigger().scheduledTime"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/01 Get Customers List For All Models')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "run Get Customers List For Model",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Analysis/Clustering/Get Customers List For Models  2 7 30"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Dm_Models"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Analysis')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/01_platfromusage_files_copy_to_blob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_file",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "run_sp_add_new_file_name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "\t  SELECT file_name,\n        folder\n\tFROM azure.platfrom_usage_log_file\n WHERE ISNULL(move_to_blob,0) <>1 \n  \n  IF @@ROWCOUNT=0 THROW 50000 ,'No file to move',1",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DWH_pu_list_files",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy to blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_file",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "Source_file_avi",
								"type": "DatasetReference",
								"parameters": {
									"file_name": {
										"value": "@activity('LK_file').output.firstRow.file_name",
										"type": "Expression"
									},
									"folder": {
										"value": "@substring(activity('LK_file').output.firstRow.FILE_NAME,0,8)",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "platformusage_blob",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": {
										"value": "@concat('platformusage/rawdata/',activity('LK_file').output.firstRow.folder,'/')\n ",
										"type": "Expression"
									},
									"file_name": {
										"value": "@concat(substring(activity('LK_file').output.firstRow.FILE_NAME,0,8),'.zip')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "update_platfrom_usage_log_file",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy to blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[azure].[SP_Update_platfrom_usage_log_file]",
							"storedProcedureParameters": {
								"file_name": {
									"value": {
										"value": "@activity('LK_file').output.firstRow.file_name",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "alldbdwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "run_sp_add_new_file_name",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[azure].[SP_add_new_file_to_table]"
						},
						"linkedServiceName": {
							"referenceName": "alldbdwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Platfrom_Usage"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DWH_pu_list_files')]",
				"[concat(variables('factoryId'), '/datasets/Source_file_avi')]",
				"[concat(variables('factoryId'), '/datasets/platformusage_blob')]",
				"[concat(variables('factoryId'), '/linkedServices/alldbdwh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/02 Get Data For Models')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2 Days 11  Get Data For Model",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Analysis/Clustering/2_DAYS/10. Customers 2 Days -  11. Get Data For Model"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "30 Days 11  Get Data For Model",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "7 Days 11 Get Data For Model",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Analysis/Clustering/30_DAYS/12. Customers 30 Days -  11. Get Data For Model"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "7 Days 11 Get Data For Model",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "2 Days 11  Get Data For Model",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Analysis/Clustering/7_DAYS/11. Customers 7 Days -  11. Get Data For Model"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Dm_Models"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Analysis')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/02_platfromusage_unzip_zip_blob_files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "lookup_file_to_unzip",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "      SELECT file_name,\n        folder,unzip_file\n\tFROM azure.platfrom_usage_log_file\n WHERE ISNULL(unzip_file,0) <>1 AND move_to_blob=1\n  \n  IF @@ROWCOUNT=0 THROW 50000 ,'No file to move',1",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DWH_pu_list_files",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "unzip",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "lookup_file_to_unzip",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink",
								"copyBehavior": "PreserveHierarchy"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "platformusage_blob",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": "@concat('platformusage/rawdata/',activity('lookup_file_to_unzip').output.firstRow.folder,'/')",
									"file_name": "@concat(substring(activity('lookup_file_to_unzip').output.firstRow.FILE_NAME,0,8),'.zip')"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "blob_platfrom_unzip_file",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": "@concat('platformusage/unzip/',activity('lookup_file_to_unzip').output.firstRow.folder,'/')",
									"file_name": "@concat(substring(activity('lookup_file_to_unzip').output.firstRow.FILE_NAME,0,8),'.zip')"
								}
							}
						]
					},
					{
						"name": "update_unzip",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "unzip",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[azure].[SP_Update_platfrom_usage_log_file_unzip]",
							"storedProcedureParameters": {
								"file_name": {
									"value": {
										"value": "@activity('lookup_file_to_unzip').output.firstRow.file_name",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "alldbdwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Platfrom_Usage"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DWH_pu_list_files')]",
				"[concat(variables('factoryId'), '/datasets/platformusage_blob')]",
				"[concat(variables('factoryId'), '/datasets/blob_platfrom_unzip_file')]",
				"[concat(variables('factoryId'), '/linkedServices/alldbdwh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/03 - Execute Models')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Customers 2 Days  12 Execute Model",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Analysis/Clustering/RUN/11. 2 DAYS -  RUN 03 - Execute model"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Customers 7 Days  12 Execute Model",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Customers 2 Days  12 Execute Model",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Analysis/Clustering/RUN/11. 7 DAYS -  RUN 03 - Execute model"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Customers 30 Days  12 Execute Model",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Customers 7 Days  12 Execute Model",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Analysis/Clustering/RUN/11. 30 DAYS -  RUN 03 - Execute model"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Dm_Models"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Analysis')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/03_PU_Load_ods_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PU_Load_ods_data",
						"description": "create one daily file from all daily files ",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Lookup_file_to_create",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Load Data/Platform Usage/PU Load ods data",
							"baseParameters": {
								"input_file_path": {
									"value": "@activity('Lookup_file_to_create').output.firstRow.file_name",
									"type": "Expression"
								},
								"ods": "/mnt/dataloadestore/platformusage/ods/",
								"zippath": "/mnt/dataloadestore/platformusage/unzip/",
								"folder_name": {
									"value": "@activity('Lookup_file_to_create').output.firstRow.folder",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_file_to_create",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "   SELECT file_name,\n        folder,daily_file\nFROM azure.platfrom_usage_log_file\nWHERE 1=1\nAND move_to_blob =1 \nAND unzip_file=1\nAND  ISNULL(daily_file,0)<>1\n",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DWH_pu_list_files",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Update_Create_Daily_File",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "PU_Load_ods_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[azure].[SP_Update_platfrom_usage_log_file_create_daily_file]",
							"storedProcedureParameters": {
								"file_name": {
									"value": {
										"value": "@activity('Lookup_file_to_create').output.firstRow.file_name",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "alldbdwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Platfrom_Usage/old"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Analysis')]",
				"[concat(variables('factoryId'), '/datasets/DWH_pu_list_files')]",
				"[concat(variables('factoryId'), '/linkedServices/alldbdwh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/04 - sync to azure sql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sync 2 day models result",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Analysis/Clustering/2_DAYS/10. Customers 2 Days - 13. sync models result"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sync 7 day models result",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "sync 2 day models result",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Analysis/Clustering/7_DAYS/11. Customers 7 Days - 13. sync models result"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sync 30 day models result",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "sync 7 day models result",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Analysis/Clustering/30_DAYS/12. Customers 30 Days - 13. sync models result"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Dm_Models"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Analysis')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/04_PU_ods_to_events')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PU PU ods to events raw",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Load Data/Platform Usage/PU ods to events raw"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Platfrom_Usage/old"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Analysis')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/301 Get Customers List For Model')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "run Get Customers List For Model",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Analysis/Clustering V2/10. Get Customers List For Models 302 307 330"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Dm_Models"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Analysis')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/302 Get Data For Model')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Data For Models",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Analysis/Clustering V2/11. Get Data For Model 302 307 330"
						},
						"linkedServiceName": {
							"referenceName": "Analysis_spark_3",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Dm_Models"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Analysis_spark_3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/303 Execute Models')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Models",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Analysis/Clustering V2/12. Get cluster for Model 302 307 330"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Dm_Models"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Analysis')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/999 - sync to azure sql')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sync models result",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Analysis/99.Sync Models Results",
							"baseParameters": {
								"env_type": "prod"
							}
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Dm_Models"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Analysis')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Communication')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Date_Mng_azure_ETL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureTableSource",
								"azureTableSourceQuery": "PartitionKey eq 'Upload Data' and RowKey eq 'Communication'",
								"azureTableSourceIgnoreTableNotFound": false
							},
							"dataset": {
								"referenceName": "etl_manage",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "LK_new_max_date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": " SELECT Last_Event_Date = MAX(Event_Date)\nFROM EMERP_LM.azure.AZ_Communication\nWHERE Event_Date < CAST(GETDATE() AS DATE)\nand  Event_Date>'2022-07-30'",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Communication_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Date_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "select * \nFROM EMERP_LM.azure.AZ_Communication\nwhere Event_Date > '@{activity('LK_Last_Date_Mng_azure_ETL').output.value[0].Last_Incremental_Date}' and Event_Date <= '@{activity('LK_new_max_date').output.firstRow.Last_Event_Date}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"MessageID": "MessageID",
									"Event_Date": "Event_Date",
									"details": "details"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Communication_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Communication_blob",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Update Manage Table",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MergeTableStore",
								"type": "PipelineReference"
							},
							"parameters": {
								"PartitionKey": "Upload Data",
								"RowKey": "Communication",
								"PropertyName": "Last_Incremental_Date",
								"PropertyValue": {
									"value": "@activity('LK_new_max_date').output.firstRow.Last_Event_Date",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load Communication to Events",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Update Manage Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Load Data/Digital Communication/Load Communication"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Data_from_SQL"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/etl_manage')]",
				"[concat(variables('factoryId'), '/datasets/Communication_src')]",
				"[concat(variables('factoryId'), '/datasets/Communication_blob')]",
				"[concat(variables('factoryId'), '/pipelines/MergeTableStore')]",
				"[concat(variables('factoryId'), '/linkedServices/Analysis')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Contacts')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Id_Mng_azure_ETL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "  SELECT  LastIncrementalDate=LastId \n  ---- remove to use incremental\n FROM  Mng_data_factory_ETL\n  WHERE TableName='Contacts'\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Mng_data_factory_etl",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Id_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * from   EmErp_LM.azure.scmm_contacts\n where update_date > CAST(CAST('@{activity('LK_Last_Id_Mng_azure_ETL').output.firstRow.LastIncrementalDate}' AS bigint) AS VARBINARY(8))\n",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"parallelCopies": 6
						},
						"inputs": [
							{
								"referenceName": "Contacts",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Blob_Contacts",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": "Contacts"
								}
							}
						]
					},
					{
						"name": "update_mng_azure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "SP_Update_Mng_data_factory_ETL",
							"storedProcedureParameters": {
								"LastId": {
									"value": {
										"value": "@{activity('LK_new_max_id').output.firstRow.last_id}",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"LastIncrementalDate": {
									"value": "1990-01-01",
									"type": "DateTime"
								},
								"TableName": {
									"value": "Contacts",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Azure BI db",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LK_new_max_id",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT last_id= MAX(timeStampINT)\nFROM EmErp_LM.azure.scmm_contacts\n",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Contacts",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Contacts",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "update_mng_azure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Load Data/Dimensions/contacts"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Data_from_SQL"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Mng_data_factory_etl')]",
				"[concat(variables('factoryId'), '/datasets/Contacts')]",
				"[concat(variables('factoryId'), '/datasets/Blob_Contacts')]",
				"[concat(variables('factoryId'), '/linkedServices/Azure BI db')]",
				"[concat(variables('factoryId'), '/linkedServices/Analysis')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy Model Data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Model Data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "Assignment.Model_Data"
							},
							{
								"name": "Destination",
								"value": "mirrordatafs//adata"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "DM_Model_Data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ADLS_Model_Data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Assignment Score"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DM_Model_Data')]",
				"[concat(variables('factoryId'), '/datasets/ADLS_Model_Data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_5qf')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_5qf",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.agent_tab"
							},
							{
								"name": "Destination",
								"value": "agents"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "agent_numerator",
											"type": "Int32"
										},
										"sink": {
											"path": "$"
										}
									},
									{
										"source": {
											"name": "id",
											"type": "Guid"
										},
										"sink": {
											"path": "$['agent_id']"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String"
										},
										"sink": {
											"path": "$['agent_name']"
										}
									},
									{
										"source": {
											"name": "status",
											"type": "Byte"
										},
										"sink": {
											"path": "$['status']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_5qf",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_5qf",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_5qf')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_5qf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_prf')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_prf",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "users/barak/tmp_pqu/"
							},
							{
								"name": "Destination",
								"value": "WebEvents"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "String"
										},
										"sink": {
											"path": "$['id']"
										}
									},
									{
										"source": {
											"name": "Req",
											"type": "String"
										},
										"sink": {
											"path": "$['Req']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_prf",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_prf",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_prf')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_prf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_small_tables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach_y59",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_y59",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{item().source.schema}.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "bi.@{item().destination.table}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": {
												"value": "@item().copySink.writeBehavior",
												"type": "Expression"
											},
											"sqlWriterUseTableLock": {
												"value": "@item().copySink.sqlWriterUseTableLock",
												"type": "Expression"
											},
											"upsertSettings": {
												"useTempDB": true
											},
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"validateDataConsistency": false,
										"translator": {
											"value": "@item().copyActivity.translator",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "SourceDataset_y59",
											"type": "DatasetReference",
											"parameters": {
												"cw_schema": "@item().source.schema",
												"cw_table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_y59",
											"type": "DatasetReference",
											"parameters": {
												"cw_table": "@item().destination.table"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"schema": "Calls",
									"table": "CallModes"
								},
								"destination": {
									"table": "CallModes"
								},
								"copySink": {
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"mappings": [
											{
												"source": {
													"name": "CallModeID",
													"type": "Byte",
													"physicalType": "tinyint"
												},
												"sink": {
													"name": "CallModeID",
													"type": "Byte"
												}
											},
											{
												"source": {
													"name": "CallModeName",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "CallModeName",
													"type": "String"
												}
											}
										],
										"typeConversion": true,
										"typeConversionSettings": {
											"allowDataTruncation": true,
											"treatBooleanAsNumber": false
										}
									}
								}
							},
							{
								"source": {
									"schema": "Communication",
									"table": "Statuses"
								},
								"destination": {
									"table": "Statuses"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"mappings": [
											{
												"source": {
													"name": "StatusID",
													"type": "Int16",
													"physicalType": "smallint"
												},
												"sink": {
													"name": "StatusID",
													"type": "Int16"
												}
											},
											{
												"source": {
													"name": "Status",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "Status",
													"type": "String"
												}
											},
											{
												"source": {
													"name": "TreatAsSent",
													"type": "Boolean",
													"physicalType": "bit"
												},
												"sink": {
													"name": "TreatAsSent",
													"type": "Boolean"
												}
											}
										],
										"typeConversion": true,
										"typeConversionSettings": {
											"allowDataTruncation": true,
											"treatBooleanAsNumber": false
										}
									}
								}
							}
						]
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_y59')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_y59')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Customer_Questionnaires')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Date_Mng_azure_ETL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureTableSource",
								"azureTableSourceQuery": {
									"value": "PartitionKey eq 'Upload Data' and RowKey eq '@{variables('Table_Name')}'",
									"type": "Expression"
								},
								"azureTableSourceIgnoreTableNotFound": false
							},
							"dataset": {
								"referenceName": "etl_manage",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "LK_new_max_date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": " SELECT Last_Update= MAX(Last_Update)\nFROM azure.AZ_Customer_Questionnaires",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dwh_Customer_Questionnaires_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Date_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select * \nFROM azure.AZ_Customer_Questionnaires\nwhere Last_Update > '@{activity('LK_Last_Date_Mng_azure_ETL').output.firstRow.Last_Incremental_Date}' \n  and Last_Update <= '@{activity('LK_new_max_date').output.firstRow.Last_Update}'\n",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "dwh_Customer_Questionnaires_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dwh_Customer_Questionnaires_blob",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Update Manage Table",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "run_Load Customer_Questionnaires",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MergeTableStore",
								"type": "PipelineReference"
							},
							"parameters": {
								"PartitionKey": "Upload Data",
								"RowKey": {
									"value": "@variables('Table_Name')",
									"type": "Expression"
								},
								"PropertyName": "Last_Incremental_Date",
								"PropertyValue": {
									"value": "@activity('LK_new_max_date').output.firstRow.Last_Update",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "run_Load Customer_Questionnaires",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Load Data/Dimensions/Load Customer_Questionnaires"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Delete_copy_file",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Update Manage Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "dwh_Customer_Questionnaires_blob",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"Table_Name": {
						"type": "String",
						"defaultValue": "Customer_Questionnaires"
					}
				},
				"folder": {
					"name": "Data_from_SQL"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/etl_manage')]",
				"[concat(variables('factoryId'), '/datasets/dwh_Customer_Questionnaires_src')]",
				"[concat(variables('factoryId'), '/datasets/dwh_Customer_Questionnaires_blob')]",
				"[concat(variables('factoryId'), '/pipelines/MergeTableStore')]",
				"[concat(variables('factoryId'), '/linkedServices/Analysis')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Customers')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Id_Mng_azure_ETL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT  LastIncrementalDate=DATEADD(DAY,-1,LastIncrementalDate)   \n  ---- remove to use incremental\n FROM  Mng_data_factory_ETL\n  WHERE TableName='Customers'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Mng_data_factory_etl",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LK_new_max_id",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT ExecutionDate=MAX(SsisUpdatedDate)\n FROM dwh.azure.AZ_Customers\n",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Mng_azure_ETL",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Id_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select * from  dwh.azure.AZ_Customers\n where SsisUpdatedDate > '@{activity('LK_Last_Id_Mng_azure_ETL').output.firstRow.LastIncrementalDate}' ",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "DWH_Dim_Customers_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DWH_Dim_Customers_blob",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": "Customers"
								}
							}
						]
					},
					{
						"name": "update_mng_azure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "SP_Update_Mng_data_factory_ETL",
							"storedProcedureParameters": {
								"LastId": {
									"value": "-1",
									"type": "Int64"
								},
								"LastIncrementalDate": {
									"value": {
										"value": "@{activity('LK_new_max_id').output.firstRow.ExecutionDate}",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": "Customers",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Azure BI db",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Customers",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "update_mng_azure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Load Data/Dimensions/Customers"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Data_from_SQL"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Mng_data_factory_etl')]",
				"[concat(variables('factoryId'), '/datasets/Mng_azure_ETL')]",
				"[concat(variables('factoryId'), '/datasets/DWH_Dim_Customers_src')]",
				"[concat(variables('factoryId'), '/datasets/DWH_Dim_Customers_blob')]",
				"[concat(variables('factoryId'), '/linkedServices/Azure BI db')]",
				"[concat(variables('factoryId'), '/linkedServices/Analysis')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DC ETL",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/barak@skylabs.co.il/ETL DWH/DC ETL",
							"libraries": [
								{
									"maven": {
										"coordinates": "com.microsoft.azure:azure-sqldb-spark:1.0.2"
									}
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "Databricks Job Cluster",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "BI"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Databricks Job Cluster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DWH_Calls')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_new_max_Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT Next_Call_Day=DATEADD(DAY,-1,MAX(callday))\nFROM dwh.azure.AZ_Calls",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dwh_calls_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_new_max_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_Last_Date_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select * \nFROM dwh.azure.AZ_calls\nwhere callday> '@{activity('LK_Last_Date_Mng_azure_ETL').output.firstRow.Last_Incremental_Date}' and callday<= '@{activity('LK_new_max_Date').output.firstRow.Next_Call_Day}'",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"Call_ID": "Call_ID",
									"Call_Details": "Call_Details",
									"CallDay": "CallDay"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dwh_calls_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dwh_calls_blob",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "LK_Last_Date_Mng_azure_ETL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureTableSource",
								"azureTableSourceQuery": "PartitionKey eq 'Upload Data' and RowKey eq 'DWH_Calls'",
								"azureTableSourceIgnoreTableNotFound": false
							},
							"dataset": {
								"referenceName": "etl_manage",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Load Calls to Events",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "merge tbl store",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Load Data/Calls/Load Calls"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "merge tbl store",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MergeTableStore",
								"type": "PipelineReference"
							},
							"parameters": {
								"PartitionKey": "Upload Data",
								"RowKey": "DWH_Calls",
								"PropertyName": "Last_Incremental_Date",
								"PropertyValue": {
									"value": "@{activity('LK_new_max_Date').output.firstRow.Next_Call_Day}",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Data_from_SQL"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dwh_calls_src')]",
				"[concat(variables('factoryId'), '/datasets/dwh_calls_blob')]",
				"[concat(variables('factoryId'), '/datasets/etl_manage')]",
				"[concat(variables('factoryId'), '/linkedServices/Analysis')]",
				"[concat(variables('factoryId'), '/pipelines/MergeTableStore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DWH_Dim_Users')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"User_ID": "User_ID",
									"details": "details"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dwh_Dim_Users_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dwh_Dim_Users_blob",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Load_Users",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Load Data/Dimensions/Users"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Data_from_SQL"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dwh_Dim_Users_src')]",
				"[concat(variables('factoryId'), '/datasets/dwh_Dim_Users_blob')]",
				"[concat(variables('factoryId'), '/linkedServices/Analysis')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DWH_Lead_Assignments')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "assignments",
				"activities": [
					{
						"name": "LK_Last_Date_Mng_azure_ETL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureTableSource",
								"azureTableSourceQuery": {
									"value": "PartitionKey eq 'Upload Data' and RowKey eq '@{variables('Table_Name')}'",
									"type": "Expression"
								},
								"azureTableSourceIgnoreTableNotFound": false
							},
							"dataset": {
								"referenceName": "etl_manage",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "LK_new_max_date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT Last_Date=MAX(Assignment_Date)\nFROM azure.AZ_Lead_Assignments \nWHERE Assignment_Day BETWEEN\nCAST(GETDATE() - 100 AS DATE) AND CAST(GETDATE() - 1 AS DATE) \n",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "dwh_lead_assignments_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Date_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * \nFROM azure.AZ_Lead_Assignments\nwhere Assignment_Date > '@{activity('LK_Last_Date_Mng_azure_ETL').output.value[0].Last_Incremental_Date}' \n  and Assignment_Date <= '@{activity('LK_new_max_date').output.firstRow.Last_Date}'\n  and Assignment_Day > dateadd(day,-1,cast('@{activity('LK_Last_Date_Mng_azure_ETL').output.value[0].Last_Incremental_Date}' as date))\n  and Assignment_Day < dateadd(day,1,cast('@{activity('LK_new_max_date').output.firstRow.Last_Date}' as date))\n",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"Fact_Lead_Assignments_ID": "Fact_Lead_Assignments_ID",
									"Assignment_Day": "Assignment_Day",
									"Assignment_Date": "Assignment_Date",
									"Details": "Details"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dwh_lead_assignments_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dwh_lead_assignments_blob",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Update Manage Table",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MergeTableStore",
								"type": "PipelineReference"
							},
							"parameters": {
								"PartitionKey": "Upload Data",
								"RowKey": {
									"value": "@variables('Table_Name')",
									"type": "Expression"
								},
								"PropertyName": "Last_Incremental_Date",
								"PropertyValue": {
									"value": "@activity('LK_new_max_date').output.firstRow.Last_Date",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "load assignments to events",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Update Manage Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Load Data/SCMM/Load Lead Assignments"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"Table_Name": {
						"type": "String",
						"defaultValue": "DWH_Lead_Assignments"
					}
				},
				"folder": {
					"name": "Data_from_SQL"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/etl_manage')]",
				"[concat(variables('factoryId'), '/datasets/dwh_lead_assignments_src')]",
				"[concat(variables('factoryId'), '/datasets/dwh_lead_assignments_blob')]",
				"[concat(variables('factoryId'), '/pipelines/MergeTableStore')]",
				"[concat(variables('factoryId'), '/linkedServices/Analysis')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dim_Communication_Channels')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy data from on premise SQL Server to SQL Azure.\n\nYou can also go to \"Copy Data Tool\" to get the pipeline for more connectors and scenarios.",
				"activities": [
					{
						"name": "SQL_to_SQLAzure",
						"description": "Copy data from SQL server to SQL Azure",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ChannelID",
											"type": "Int32"
										},
										"sink": {
											"name": "ChannelID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ChannelTypeID",
											"type": "Byte"
										},
										"sink": {
											"name": "ChannelTypeID",
											"type": "Byte"
										}
									},
									{
										"source": {
											"name": "ChannelType",
											"type": "String"
										},
										"sink": {
											"name": "ChannelType",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ChannelName",
											"type": "String"
										},
										"sink": {
											"name": "ChannelName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ChannelStatus",
											"type": "String"
										},
										"sink": {
											"name": "ChannelStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SendingMethodID",
											"type": "Int16"
										},
										"sink": {
											"name": "SendingMethodID",
											"type": "Int16"
										}
									},
									{
										"source": {
											"name": "SendingMethodName",
											"type": "String"
										},
										"sink": {
											"name": "SendingMethodName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ChannelPopulationFilterId",
											"type": "Int32"
										},
										"sink": {
											"name": "ChannelPopulationFilterId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ChannelPopulationFilter",
											"type": "String"
										},
										"sink": {
											"name": "ChannelPopulationFilter",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Channel_Event",
											"type": "String"
										},
										"sink": {
											"name": "Channel_Event",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ChannelDeliveryScheduleType",
											"type": "String"
										},
										"sink": {
											"name": "ChannelDeliveryScheduleType",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CampaignID",
											"type": "Int32"
										},
										"sink": {
											"name": "CampaignID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CampaignName",
											"type": "String"
										},
										"sink": {
											"name": "CampaignName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CampaignCategory",
											"type": "String"
										},
										"sink": {
											"name": "CampaignCategory",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Campaign_System",
											"type": "String"
										},
										"sink": {
											"name": "Campaign_System",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Campaign_Schedule_Type",
											"type": "String"
										},
										"sink": {
											"name": "Campaign_Schedule_Type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EmailSubject",
											"type": "String"
										},
										"sink": {
											"name": "EmailSubject",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CampaignStatus",
											"type": "String"
										},
										"sink": {
											"name": "CampaignStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CampaignPopulationFilterId",
											"type": "Int32"
										},
										"sink": {
											"name": "CampaignPopulationFilterId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CampaignPopulationFilter",
											"type": "String"
										},
										"sink": {
											"name": "CampaignPopulationFilter",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ExpectedCustomerResponse",
											"type": "String"
										},
										"sink": {
											"name": "ExpectedCustomerResponse",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RewardID",
											"type": "Int32"
										},
										"sink": {
											"name": "RewardID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "RewardName",
											"type": "String"
										},
										"sink": {
											"name": "RewardName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Channel_Group",
											"type": "String"
										},
										"sink": {
											"name": "Channel_Group",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Scmm_Communication_Channels",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Azure_dwh_Dim_Channels",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DC"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Scmm_Communication_Channels')]",
				"[concat(variables('factoryId'), '/datasets/Azure_dwh_Dim_Channels')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EMERP_Events')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Id_Mng_azure_ETL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT  LastIncrementalDate=DATEADD(MINUTE,65,LastIncrementalDate)   \n  ---- remove to use incremental\n FROM dbo.Mng_data_factory_ETL\n  WHERE TableName='EMERP_DB_Events'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Mng_data_factory_etl",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LK_new_max_id",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": " SELECT ExecutionDate=MAX(Event_Date)\n FROM EmErp_DB.azure.AZ_EMERP_DB_Events",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "EMERP_DB_Events",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Id_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select * from  EmErp_DB.azure.AZ_EMERP_DB_Events\n where Event_Date > '@{activity('LK_Last_Id_Mng_azure_ETL').output.firstRow.LastIncrementalDate}' \n AND Event_Date <= '@{activity('LK_new_max_id').output.firstRow.ExecutionDate}'",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "EMERP_DB_Events",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "blob_EMERP_Events",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": "EMERP_Events"
								}
							}
						]
					},
					{
						"name": "Stored Procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "SP_Update_Mng_data_factory_ETL",
							"storedProcedureParameters": {
								"LastId": {
									"value": "-1",
									"type": "Int64"
								},
								"LastIncrementalDate": {
									"value": {
										"value": "@{activity('LK_new_max_id').output.firstRow.ExecutionDate}",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": "EMERP_DB_Events",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Azure BI db",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Stored Procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Load Data/Emerp Events/EMERP_Events_to_events_table"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Data_from_SQL"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Mng_data_factory_etl')]",
				"[concat(variables('factoryId'), '/datasets/EMERP_DB_Events')]",
				"[concat(variables('factoryId'), '/datasets/blob_EMERP_Events')]",
				"[concat(variables('factoryId'), '/linkedServices/Azure BI db')]",
				"[concat(variables('factoryId'), '/linkedServices/Analysis')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FXNET_Accounting')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Date_Mng_azure_ETL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureTableSource",
								"azureTableSourceQuery": {
									"value": "PartitionKey eq 'Upload Data' and RowKey eq '@{variables('Table_Name')}'",
									"type": "Expression"
								},
								"azureTableSourceIgnoreTableNotFound": false
							},
							"dataset": {
								"referenceName": "etl_manage",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "LK_new_max_date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT Last_Activity_Date = MAX(ActionDate)\nFROM azure.AZ_Accounting\nWHERE ActionDay BETWEEN CAST(GETDATE() - 100 AS DATE) AND CAST(GETDATE() - 1 AS DATE) ",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "fxnet_accounting_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Date_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select * \nFROM azure.AZ_Accounting\nwhere ActionDate > '@{activity('LK_Last_Date_Mng_azure_ETL').output.value[0].Last_Incremental_Date}' \n  and ActionDate <= '@{activity('LK_new_max_date').output.firstRow.Last_Activity_Date}'\n  and ActionDay > dateadd(day,-1,cast('@{activity('LK_Last_Date_Mng_azure_ETL').output.value[0].Last_Incremental_Date}' as date))\n  and ActionDay < dateadd(day,1,cast('@{activity('LK_new_max_date').output.firstRow.Last_Activity_Date}' as date))",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"fact_account_trans_id": "fact_account_trans_id",
									"ActionDay": "ActionDay",
									"ActionDate": "ActionDate",
									"Details": "Details"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "fxnet_accounting_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "fxnet_accounting_blob",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Update Manage Table",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MergeTableStore",
								"type": "PipelineReference"
							},
							"parameters": {
								"PartitionKey": "Upload Data",
								"RowKey": {
									"value": "@variables('Table_Name')",
									"type": "Expression"
								},
								"PropertyName": "Last_Incremental_Date",
								"PropertyValue": {
									"value": "@activity('LK_new_max_date').output.firstRow.Last_Activity_Date",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load Accounts to Events",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Update Manage Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Load Data/FXNET/Load Accounting"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"Table_Name": {
						"type": "String",
						"defaultValue": "FXNET_Accounting"
					}
				},
				"folder": {
					"name": "Data_from_SQL"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/etl_manage')]",
				"[concat(variables('factoryId'), '/datasets/fxnet_accounting_src')]",
				"[concat(variables('factoryId'), '/datasets/fxnet_accounting_blob')]",
				"[concat(variables('factoryId'), '/pipelines/MergeTableStore')]",
				"[concat(variables('factoryId'), '/linkedServices/Analysis')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FXNET_Deals')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Date_Mng_azure_ETL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureTableSource",
								"azureTableSourceQuery": {
									"value": "PartitionKey eq 'Upload Data' and RowKey eq '@{variables('Table_Name')}'",
									"type": "Expression"
								},
								"azureTableSourceIgnoreTableNotFound": false
							},
							"dataset": {
								"referenceName": "etl_manage",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LK_new_max_Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT Last_Date=MAX(ExecutionDate)\nFROM azure.AZ_Deals\nWHERE executionDay BETWEEN\nCAST(GETDATE() - 100 AS DATE) AND CAST(GETDATE() - 1 AS DATE) ",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "fxnet_deals_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Date_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select * \nFROM azure.AZ_Deals\nwhere executionDate > '@{activity('LK_Last_Date_Mng_azure_ETL').output.firstRow.Last_Incremental_Date}' \nand executionDate <= '@{activity('LK_new_max_Date').output.firstRow.Last_Date}'\nand executionDay > dateadd(day,-1,cast('@{activity('LK_Last_Date_Mng_azure_ETL').output.firstRow.Last_Incremental_Date}' as date))\nand executionDay < dateadd(day,1,cast('@{activity('LK_new_max_Date').output.firstRow.Last_Date}' as date))",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"TransactionNumber": "TransactionNumber",
									"ExecutionDay": "ExecutionDay",
									"ExecutionDate": "ExecutionDate",
									"Trans_Details": "Trans_Details"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "fxnet_deals_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "fxnet_deals_blob",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Update mng ETL table storage",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MergeTableStore",
								"type": "PipelineReference"
							},
							"parameters": {
								"PartitionKey": "Upload Data",
								"RowKey": {
									"value": "@variables('Table_Name')",
									"type": "Expression"
								},
								"PropertyName": "Last_Incremental_Date",
								"PropertyValue": {
									"value": "@activity('LK_new_max_Date').output.firstRow.Last_Date",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load Deals",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Update mng ETL table storage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Load Data/FXNET/Load Deals"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"Table_Name": {
						"type": "String",
						"defaultValue": "FXNET_Deals"
					}
				},
				"folder": {
					"name": "Data_from_SQL"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/etl_manage')]",
				"[concat(variables('factoryId'), '/datasets/fxnet_deals_src')]",
				"[concat(variables('factoryId'), '/datasets/fxnet_deals_blob')]",
				"[concat(variables('factoryId'), '/pipelines/MergeTableStore')]",
				"[concat(variables('factoryId'), '/linkedServices/Analysis')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Logins_by_Country')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Login Sessions",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "GetLast_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/BI/Reports/Sessions Reports",
							"baseParameters": {
								"Last_Date": {
									"value": "@activity('GetLast_Date').output.firstRow.Last_Date",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "GetLast_Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[Reports].[Get_LastDate]",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSQL_Logins_By_Country",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy mrr to Azure SQL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Login Sessions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"Event_Day": "Event_date_Day",
									"AccountNumber": "AccountNumber",
									"Broker": "Broker",
									"Folder": "Folder",
									"FolderType": "FolderType",
									"Login_From_Country": "Login_From_Country",
									"CustomerCountry": "CustomerCountry",
									"AMLComplianceStatus": "AMLComplianceStatus",
									"Sessions": "Sessions"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "BI_Logins_By_Country",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSQL_Logins_By_Country",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "BI"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Analysis')]",
				"[concat(variables('factoryId'), '/datasets/AzureSQL_Logins_By_Country')]",
				"[concat(variables('factoryId'), '/datasets/BI_Logins_By_Country')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MergeTableStore')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MergeTableStorage",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-19.westeurope.logic.azure.com:443/workflows/fdc08617ec204e91923afb154eb5e9d3/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=lmpuubOmGI-VjJ9ltwWrti0QZzF4gYY4HHKM_RfQCis",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@concat('{ \"PartitionKey\":\"',pipeline().parameters.PartitionKey,'\",   \"RowKey\":\"',pipeline().parameters.RowKey,'\"  , \"PropertyName\":\"',pipeline().parameters.PropertyName,'\", \"PropertyValue\":\"',pipeline().parameters.PropertyValue,'\" }')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"PartitionKey": {
						"type": "String",
						"defaultValue": "PartitionKey"
					},
					"RowKey": {
						"type": "String",
						"defaultValue": "RowKey"
					},
					"PropertyName": {
						"type": "String",
						"defaultValue": "PropertyName"
					},
					"PropertyValue": {
						"type": "String",
						"defaultValue": "PropertyValue"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RUN ONLY PU')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "RUN - 02_platfromusage_unzip_zip_blob_files",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RUN - 01_platfromusage_files_copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "02_platfromusage_unzip_zip_blob_files",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "RUN - 01_platfromusage_files_copy_to_blob",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01_platfromusage_files_copy_to_blob",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/02_platfromusage_unzip_zip_blob_files')]",
				"[concat(variables('factoryId'), '/pipelines/01_platfromusage_files_copy_to_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RUN_ALL_pip_platfrom_usage')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "RUN - 02_platfromusage_unzip_zip_blob_files",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RUN - 01_platfromusage_files_copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "02_platfromusage_unzip_zip_blob_files",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "RUN - Customers",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Customers",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "RUN - 01_platfromusage_files_copy_to_blob",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RUN - Customer Questionnaires",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01_platfromusage_files_copy_to_blob",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "RUN - Serials",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RUN - Customers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Serials",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "RUN - Contacts",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RUN - Serials",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Contacts",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "RUN - Users",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RUN - Contacts",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DWH_Dim_Users",
								"type": "PipelineReference"
							},
							"parameters": {}
						}
					},
					{
						"name": "RUN - Customer Questionnaires",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RUN - Users",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Customer_Questionnaires",
								"type": "PipelineReference"
							},
							"parameters": {}
						}
					},
					{
						"name": "RUN SCMM_Activities",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RUN - 02_platfromusage_unzip_zip_blob_files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SCMM_Activities",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/02_platfromusage_unzip_zip_blob_files')]",
				"[concat(variables('factoryId'), '/pipelines/Customers')]",
				"[concat(variables('factoryId'), '/pipelines/01_platfromusage_files_copy_to_blob')]",
				"[concat(variables('factoryId'), '/pipelines/Serials')]",
				"[concat(variables('factoryId'), '/pipelines/Contacts')]",
				"[concat(variables('factoryId'), '/pipelines/DWH_Dim_Users')]",
				"[concat(variables('factoryId'), '/pipelines/Customer_Questionnaires')]",
				"[concat(variables('factoryId'), '/pipelines/SCMM_Activities')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RUN_All_old_clustering_model_203')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "01 Get Customers",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01 Get Customers List For All Models",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "02 Get Data For Models",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "01 Get Customers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "02 Get Data For Models",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "03  Execute Models",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "02 Get Data For Models",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "03 - Execute Models",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Dm_Models"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/01 Get Customers List For All Models')]",
				"[concat(variables('factoryId'), '/pipelines/02 Get Data For Models')]",
				"[concat(variables('factoryId'), '/pipelines/03 - Execute Models')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Run_all_Model_ETL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "999 sync to azure sql",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "303  Execute Models",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "999 - sync to azure sql",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "301 Get Customers",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "301 Get Customers List For Model",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "302 Get Data For Models",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "301 Get Customers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "302 Get Data For Model",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "303  Execute Models",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "302 Get Data For Models",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "303 Execute Models",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Dm_Models"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/999 - sync to azure sql')]",
				"[concat(variables('factoryId'), '/pipelines/301 Get Customers List For Model')]",
				"[concat(variables('factoryId'), '/pipelines/302 Get Data For Model')]",
				"[concat(variables('factoryId'), '/pipelines/303 Execute Models')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCMM_Activities')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Date_Mng_azure_ETL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureTableSource",
								"azureTableSourceQuery": "PartitionKey eq 'Upload Data' and RowKey eq 'SCMM_Activities'",
								"azureTableSourceIgnoreTableNotFound": false
							},
							"dataset": {
								"referenceName": "etl_manage",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "LK_new_max_date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT Last_Activity_Date = MAX(Activity_Date)\nFROM azure.AZ_SCMM_Activities\n",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "scmm_activities_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Date_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "select * \nFROM EMERP_LM.azure.AZ_SCMM_Activities\nwhere Activity_Date > '@{activity('LK_Last_Date_Mng_azure_ETL').output.value[0].Last_Incremental_Date}' and Activity_Date <= '@{activity('LK_new_max_date').output.firstRow.Last_Activity_Date}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"Activity_Id": "Activity_Id",
									"Activity_Date": "Activity_Date",
									"details": "details"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "scmm_activities_src",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "scmm_activities_blob",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Update Manage Table",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MergeTableStore",
								"type": "PipelineReference"
							},
							"parameters": {
								"PartitionKey": "Upload Data",
								"RowKey": "SCMM_Activities",
								"PropertyName": "Last_Incremental_Date",
								"PropertyValue": {
									"value": "@activity('LK_new_max_date').output.firstRow.Last_Activity_Date",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load_Activities_To_Events",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Update Manage Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Load Data/SCMM/Load Activities"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Data_from_SQL"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/etl_manage')]",
				"[concat(variables('factoryId'), '/datasets/scmm_activities_src')]",
				"[concat(variables('factoryId'), '/datasets/scmm_activities_blob')]",
				"[concat(variables('factoryId'), '/pipelines/MergeTableStore')]",
				"[concat(variables('factoryId'), '/linkedServices/Analysis')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Serials Dim')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy_to_sql",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"Serial": "Serial",
									"Client_Id": "Client_Id",
									"Client_Numerator": "Client_Numerator",
									"Client_Name": "Client_Name",
									"Product_Numerator": "Product_Numerator",
									"Product_Name": "Product_Name",
									"Product_Full_Name": "Product_Full_Name",
									"Campaign_Numerator": "Campaign_Numerator",
									"Campaign_Name": "Campaign_Name",
									"Targetmarket_Id": "Targetmarket_Id",
									"Targetmarket": "Targetmarket",
									"Supplier_Numerator": "Supplier_Numerator",
									"Supplier": "Supplier",
									"Supplier_Group": "Supplier_Group",
									"Mediabuyer_Numerator": "Mediabuyer_Numerator",
									"Mediabuyer": "Mediabuyer",
									"Format": "Format",
									"Site_Numerator": "Site_Numerator",
									"Site_Name": "Site_Name",
									"Proposition_Id": "Proposition_Id",
									"Proposition": "Proposition",
									"Banner_Name": "Banner_Name",
									"Banner_Path": "Banner_Path",
									"TypeExt": "TypeExt",
									"Landing_Page": "Landing_Page",
									"Language": "Language",
									"SelfActivation": "SelfActivation",
									"Content": "Content"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "BI_Serials_blob",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "serials_dim_dwh",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "BI"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/BI_Serials_blob')]",
				"[concat(variables('factoryId'), '/datasets/serials_dim_dwh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Serials')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Id_Mng_azure_ETL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT  LastIncrementalDate=DATEADD(MINUTE,65,LastIncrementalDate)   \n  ---- remove to use incremental\n FROM  Mng_data_factory_ETL\n  WHERE TableName='Serials'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Mng_data_factory_etl",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Id_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "serials",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Blob_Serials",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": "Serials"
								}
							}
						]
					},
					{
						"name": "update_mng_azure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "SP_Update_Mng_data_factory_ETL",
							"storedProcedureParameters": {
								"LastId": {
									"value": "-1",
									"type": "Int64"
								},
								"LastIncrementalDate": {
									"value": {
										"value": "@{activity('LK_new_max_id').output.firstRow.ExecutionDate}",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": "Serials",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Azure BI db",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LK_new_max_id",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": " SELECT ExecutionDate=MAX(update_date)\n FROM azure.az_serials",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "serials",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Serials",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "update_mng_azure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Load Data/Dimensions/serials"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Delete_serials_file",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Serials",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_serials_row_folder",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false
						}
					},
					{
						"name": "Serials_after_delete",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Delete_serials_file",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Load Data/Dimensions/serials"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Data_from_SQL"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Mng_data_factory_etl')]",
				"[concat(variables('factoryId'), '/datasets/serials')]",
				"[concat(variables('factoryId'), '/datasets/Blob_Serials')]",
				"[concat(variables('factoryId'), '/linkedServices/Azure BI db')]",
				"[concat(variables('factoryId'), '/linkedServices/Analysis')]",
				"[concat(variables('factoryId'), '/datasets/blob_serials_row_folder')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sync Tables from sql to delta')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lk_table_name",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT ID,\n       Server,\n       DB,\n       [schema],\n       TableName\nFROM dbo.synapse_Mng_Sync_Tables\nWHERE Active=1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lk_table_name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lk_table_name').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data to parquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "dwhpr_dynamic_table",
											"type": "DatasetReference",
											"parameters": {
												"DB": {
													"value": "@item().DB",
													"type": "Expression"
												},
												"TableName": "@item().TableName",
												"schema": "@item().schema"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Parquet_file_dynamic",
											"type": "DatasetReference",
											"parameters": {
												"Parquet_table_file_name": "@item().TableName",
												"Parquet_db": "@item().DB"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "azure"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/dwhpr_dynamic_table')]",
				"[concat(variables('factoryId'), '/datasets/Parquet_file_dynamic')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sync Tables from sql to delta_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lk_table_name",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT ID,\n       Server,\n       DB,\n       [schema],\n       TableName\nFROM dbo.synapse_Mng_Sync_Tables\nWHERE Active=1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lk_table_name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lk_table_name').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data to parquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": "SELECT TOP 10000* FROM [DWH].[vDwh_Customers_full]",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "dwhpr_dynamic_table",
											"type": "DatasetReference",
											"parameters": {
												"DB": {
													"value": "@item().DB",
													"type": "Expression"
												},
												"TableName": "@item().TableName",
												"schema": "@item().schema"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Parquet_file_dynamic",
											"type": "DatasetReference",
											"parameters": {
												"Parquet_table_file_name": "@item().TableName",
												"Parquet_db": "@item().DB"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "azure"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/dwhpr_dynamic_table')]",
				"[concat(variables('factoryId'), '/datasets/Parquet_file_dynamic')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/V3_PU_real_time_file_sync')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "move_last_pu_file",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"modifiedDatetimeEnd": {
										"value": "@addseconds(pipeline().TriggerTime,-30)",
										"type": "Expression"
									},
									"wildcardFolderPath": "landing",
									"wildcardFileName": "*.log",
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "sc_pu_landing",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "des_pu_in_processing",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "load pu rows files to platformusage",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "move_last_pu_file",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Load Data/Platform Usage/version 3/01 v3  load  pu rows files to platformusage raw data table",
							"baseParameters": {
								"env_type": "dev"
							},
							"libraries": [
								{
									"pypi": {
										"package": "user_agents"
									}
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1_10_4",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Platfrom_Usage/V3"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sc_pu_landing')]",
				"[concat(variables('factoryId'), '/datasets/des_pu_in_processing')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1_10_4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/_Poc_cosmos_db')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Id_Mng_azure_ETL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "  SELECT  LastIncrementalDate=LastId \n  ---- remove to use incremental\n FROM  Mng_data_factory_ETL\n  WHERE TableName='Contacts'\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Mng_data_factory_etl",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Id_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "SELECT top 10 * from   EmErp_LM.azure.scmm_contacts\n where update_date > CAST(CAST('@{activity('LK_Last_Id_Mng_azure_ETL').output.firstRow.LastIncrementalDate}' AS bigint) AS VARBINARY(8))\n",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"parallelCopies": 6
						},
						"inputs": [
							{
								"referenceName": "Contacts",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Blob_Contacts",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": "Contacts"
								}
							}
						]
					},
					{
						"name": "LK_new_max_id",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT last_id= MAX(timeStampINT)\nFROM EmErp_LM.azure.scmm_contacts\n",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Contacts",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Data_from_SQL"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Mng_data_factory_etl')]",
				"[concat(variables('factoryId'), '/datasets/Contacts')]",
				"[concat(variables('factoryId'), '/datasets/Blob_Contacts')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/___CopyPipeline_pu_file_AUTO')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_np9",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "/"
							},
							{
								"name": "Destination",
								"value": "platformusage/_test_pu_raw_file_sync/@{formatDateTime(pipeline().parameters.windowStart,'yy')}/@{formatDateTime(pipeline().parameters.windowStart,'MM')}/@{formatDateTime(pipeline().parameters.windowStart,'dd')}/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"skipErrorFile": {
								"fileMissing": true
							},
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_np9",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_np9",
								"type": "DatasetReference",
								"parameters": {
									"cw_folderPath": "_test_pu_raw_file_sync/@{formatDateTime(pipeline().parameters.windowStart,'yy')}/@{formatDateTime(pipeline().parameters.windowStart,'MM')}/@{formatDateTime(pipeline().parameters.windowStart,'dd')}"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "String"
					}
				},
				"variables": {
					"files_list": {
						"type": "Array"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_np9')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_np9')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/___pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get FileName",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Source_files_pu_raw_file",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems",
								"lastModified"
							]
						}
					},
					{
						"name": "Append variable1",
						"type": "AppendVariable",
						"dependsOn": [
							{
								"activity": "Get FileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "files_lists",
							"value": {
								"value": "@activity('Get FileName').output.childItems[0]",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"files_lists": {
						"type": "Array"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Source_files_pu_raw_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/___test_run')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "01 Get Customers",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01 Get Customers List For All Models",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "02 Get Data For Models",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "01 Get Customers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "02 Get Data For Models",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "03  Execute Models",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "02 Get Data For Models",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "03 - Execute Models",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "999 sync to azure sql",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "303  Execute Models",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "999 - sync to azure sql",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "301 Get Customers",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "03  Execute Models",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "301 Get Customers List For Model",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "302 Get Data For Models",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "301 Get Customers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "302 Get Data For Model",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "303  Execute Models",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "302 Get Data For Models",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "303 Execute Models",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Dm_Models"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/01 Get Customers List For All Models')]",
				"[concat(variables('factoryId'), '/pipelines/02 Get Data For Models')]",
				"[concat(variables('factoryId'), '/pipelines/03 - Execute Models')]",
				"[concat(variables('factoryId'), '/pipelines/999 - sync to azure sql')]",
				"[concat(variables('factoryId'), '/pipelines/301 Get Customers List For Model')]",
				"[concat(variables('factoryId'), '/pipelines/302 Get Data For Model')]",
				"[concat(variables('factoryId'), '/pipelines/303 Execute Models')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/_pu_raw_files_sync')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_zwu",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "/"
							},
							{
								"name": "Destination",
								"value": "platformusage/_test_pu_raw_file_sync/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": {
										"value": "@pipeline().parameters.windowStart",
										"type": "Expression"
									},
									"modifiedDatetimeEnd": {
										"value": "@pipeline().parameters.windowEnd",
										"type": "Expression"
									},
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"skipErrorFile": {
								"fileMissing": true
							},
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_zwu",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_zwu",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "String"
					},
					"windowEnd": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_zwu')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_zwu')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cm BlobJsonToCosmos')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_5sz",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dwh-qa/sqldata/campaingscsv.json"
							},
							{
								"name": "Destination",
								"value": "campaigns"
							}
						],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_5sz",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_5sz",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_5sz')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_5sz')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cm camp SqlJsonToBlobText')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_lfo",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "."
							},
							{
								"name": "Destination",
								"value": "dwh-qa/sqldata/campaingscsv.json"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "\r\nSELECT [value] FROM OPENJSON(\r\n  (SELECT\r\n     c.numerator, c.id, c.name,\r\n    (select product_id = p.id, product_name= p.name, product_numerator = p.numerator ,\r\n\t\t(SELECT Serial_id =pc.id, pc.serial\r\n\t\tFROM product_creative_tab pc \r\n\t\tWHERE pc.product_id = p.id\r\n\t\tFOR JSON AUTO\r\n\t\t) AS Serials\r\n\t FROM product_tab p \r\n\t WHERE p.campaign_id = c.id \r\n\t FOR json auto) as Products\r\n   FROM dbo.campaign_tab\tc  \r\n   WHERE c.numerator BETWEEN 39900 AND 39950\r\n   FOR JSON PATH)\r\n)",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_lfo",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_lfo",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_lfo')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_lfo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cm json to cosmos')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_bve",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dwh-qa/sqldata/campaings"
							},
							{
								"name": "Destination",
								"value": "campaigns"
							}
						],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_bve",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_bve",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_bve')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_bve')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cm to json 2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_3oo",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "."
							},
							{
								"name": "Destination",
								"value": "dwh-qa/sqldata/campaings.json"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "\r\nSELECT [value] FROM OPENJSON(\r\n  (SELECT\r\n     c.numerator, c.id, c.name,\r\n    (select product_id = p.id, product_name= p.name, product_numerator = p.numerator ,\r\n\t\t(SELECT Serial_id =pc.id, pc.serial\r\n\t\tFROM product_creative_tab pc \r\n\t\tWHERE pc.product_id = p.id\r\n\t\tFOR JSON AUTO\r\n\t\t) AS Serials\r\n\t FROM product_tab p \r\n\t WHERE p.campaign_id = c.id \r\n\t FOR json auto) as Products\r\n   FROM dbo.campaign_tab\tc  \r\n   WHERE c.numerator BETWEEN 39900 AND 39950\r\n   FOR JSON PATH)\r\n)",
								"partitionOption": "None"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"filePattern": "arrayOfObjects"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "value",
											"type": "String"
										},
										"sink": {
											"path": "$['value']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_3oo",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_3oo",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_3oo')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_3oo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cm to json')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_6v0",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "."
							},
							{
								"name": "Destination",
								"value": "dwh-qa//campaings"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "\r\nSELECT [value] FROM OPENJSON(\r\n  (SELECT\r\n     c.numerator, c.id, c.name,\r\n    (select product_id = p.id, product_name= p.name, product_numerator = p.numerator ,\r\n\t\t(SELECT Serial_id =pc.id, pc.serial\r\n\t\tFROM product_creative_tab pc \r\n\t\tWHERE pc.product_id = p.id\r\n\t\tFOR JSON AUTO\r\n\t\t) AS Serials\r\n\t FROM product_tab p \r\n\t WHERE p.campaign_id = c.id \r\n\t FOR json auto) as Products\r\n   FROM dbo.campaign_tab\tc  \r\n   WHERE c.numerator BETWEEN 39900 AND 39950\r\n   FOR JSON PATH)\r\n)",
								"partitionOption": "None"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "value",
											"type": "String"
										},
										"sink": {
											"path": "$['value']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_6v0",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_6v0",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_6v0')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_6v0')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/databricks_to_all_db_pr_pu_2019_2021')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_ihk",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "users/nati/pu_2019_2021_export/"
							},
							{
								"name": "Destination",
								"value": "dbo._nati_pu_2019_2021"
							}
						],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "nati/pu_2019_2021_export/",
									"wildcardFileName": "part-*",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBatchSize": 1000000,
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": true
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "accountnumber",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "accountnumber",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "Event_date",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "Event_date",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "event_name",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "event_name",
											"type": "String",
											"physicalType": "nchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_ihk",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_ihk",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Platfrom_Usage/export_data"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_ihk')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_ihk')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/j to cosmos2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_e97",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dwh-qa/sqldata/campaings.json"
							},
							{
								"name": "Destination",
								"value": "campaigns"
							}
						],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_e97",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_e97",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_e97')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_e97')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/load_pu_rows_files_to_row')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "load_pu_rows_files",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Load Data/Platform Usage/version 2/01 load  platform usage rows files to platformusage row data table daily"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Platfrom_Usage/V2"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Analysis')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data to ml",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT * FROM dm.Assignment.v_Train_Model_Data",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "all_db_pr_SQL_SERVER",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Assignment_Train_Model_Data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ML/train_ai"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/all_db_pr_SQL_SERVER')]",
				"[concat(variables('factoryId'), '/datasets/Assignment_Train_Model_Data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/run_only_pu_on_loop')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "run pu 01",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "RUN ONLY PU",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "run pu 02",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "run pu 01",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "RUN ONLY PU",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "run pu 03",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "run pu 02",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "RUN ONLY PU",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "run pu 04",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "run pu 03",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "RUN ONLY PU",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "run pu 05",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "run pu 04",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "RUN ONLY PU",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/RUN ONLY PU')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_Model_Data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS Byl",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Assignment Score"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Model_Data",
						"folderPath": "Assignment",
						"fileSystem": "mirrordatafs"
					},
					"compressionCodec": "gzip"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS Byl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Assignment_Train_Model_Data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "mlwprdwesa",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Train__Data_8_7",
						"folderPath": "Assignment/v_Train_Model_Data/",
						"container": "azureml-blobstore-6f32a53f-5320-4a3b-beeb-ff75fdbffc9e"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/mlwprdwesa')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricksDeltaLakeDataset1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDatabricksDeltaLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureDatabricksDeltaLakeDataset",
				"typeProperties": {
					"database": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricksDeltaLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricksDeltaLake_avidb')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDatabricksDeltaLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureDatabricksDeltaLakeDataset",
				"typeProperties": {
					"database": "avi"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricksDeltaLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSQL_Logins_By_Country')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_events",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BI"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "Event_date_Day",
						"type": "Date"
					},
					{
						"name": "AccountNumber",
						"type": "Int32"
					},
					{
						"name": "Broker",
						"type": "String"
					},
					{
						"name": "Folder",
						"type": "String"
					},
					{
						"name": "FolderType",
						"type": "String"
					},
					{
						"name": "Login_From_Country",
						"type": "String"
					},
					{
						"name": "CustomerCountry",
						"type": "String"
					},
					{
						"name": "AMLComplianceStatus",
						"type": "String"
					},
					{
						"name": "Sessions",
						"type": "Int32"
					}
				],
				"typeProperties": {
					"tableName": "[[Reports].[Logins_By_Country]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_events')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Azure BI db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Server",
						"type": "nvarchar"
					},
					{
						"name": "DB",
						"type": "nvarchar"
					},
					{
						"name": "TableName",
						"type": "nvarchar"
					},
					{
						"name": "Active",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "synapse_Mng_Sync_Tables"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Azure BI db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azure_dwh_Dim_Channels')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_dwh",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DC"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Dim_Channels"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_dwh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BI_Events_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdb_blob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BI"
				},
				"annotations": [],
				"type": "AzureBlob",
				"structure": [
					{
						"name": "Event_Date_day",
						"type": "DateTime"
					},
					{
						"name": "Source",
						"type": "String"
					},
					{
						"name": "Event_Name",
						"type": "String"
					},
					{
						"name": "Event_Details",
						"type": "String"
					},
					{
						"name": "Event_Count",
						"type": "Int64"
					}
				],
				"typeProperties": {
					"format": {
						"type": "ParquetFormat"
					},
					"fileName": "[parameters('BI_Events_blob_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('BI_Events_blob_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dwhdb_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BI_Logins_By_Country')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdb_blob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BI"
				},
				"annotations": [],
				"type": "AzureBlob",
				"structure": [
					{
						"name": "Event_Day",
						"type": "DateTime"
					},
					{
						"name": "AccountNumber",
						"type": "Int64"
					},
					{
						"name": "Broker",
						"type": "String"
					},
					{
						"name": "Folder",
						"type": "String"
					},
					{
						"name": "FolderType",
						"type": "String"
					},
					{
						"name": "Login_From_Country",
						"type": "String"
					},
					{
						"name": "CustomerCountry",
						"type": "String"
					},
					{
						"name": "AMLComplianceStatus",
						"type": "String"
					},
					{
						"name": "Sessions",
						"type": "Int64"
					}
				],
				"typeProperties": {
					"format": {
						"type": "ParquetFormat"
					},
					"fileName": "[parameters('BI_Logins_By_Country_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('BI_Logins_By_Country_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dwhdb_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BI_Serials_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdb_blob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BI"
				},
				"annotations": [],
				"type": "AzureBlob",
				"structure": [
					{
						"name": "Serial",
						"type": "Int64"
					},
					{
						"name": "Client_Id",
						"type": "String"
					},
					{
						"name": "Client_Numerator",
						"type": "Int32"
					},
					{
						"name": "Client_Name",
						"type": "String"
					},
					{
						"name": "Product_Numerator",
						"type": "Int32"
					},
					{
						"name": "Product_Name",
						"type": "String"
					},
					{
						"name": "Product_Full_Name",
						"type": "String"
					},
					{
						"name": "Campaign_Numerator",
						"type": "Int32"
					},
					{
						"name": "Campaign_Name",
						"type": "String"
					},
					{
						"name": "Targetmarket_Id",
						"type": "Int32"
					},
					{
						"name": "Targetmarket",
						"type": "String"
					},
					{
						"name": "Supplier_Numerator",
						"type": "Int32"
					},
					{
						"name": "Supplier",
						"type": "String"
					},
					{
						"name": "Supplier_Group",
						"type": "String"
					},
					{
						"name": "Mediabuyer_Numerator",
						"type": "Int32"
					},
					{
						"name": "Mediabuyer",
						"type": "String"
					},
					{
						"name": "Format",
						"type": "String"
					},
					{
						"name": "Site_Numerator",
						"type": "Int32"
					},
					{
						"name": "Site_Name",
						"type": "String"
					},
					{
						"name": "Proposition_Id",
						"type": "Int32"
					},
					{
						"name": "Proposition",
						"type": "String"
					},
					{
						"name": "Banner_Name",
						"type": "String"
					},
					{
						"name": "Banner_Path",
						"type": "String"
					},
					{
						"name": "TypeExt",
						"type": "String"
					},
					{
						"name": "Landing_Page",
						"type": "String"
					},
					{
						"name": "Language",
						"type": "String"
					},
					{
						"name": "SelfActivation",
						"type": "Int32"
					},
					{
						"name": "Content",
						"type": "String"
					},
					{
						"name": "Charge_Unit_Id",
						"type": "Int32"
					},
					{
						"name": "Charge_Unit_Name",
						"type": "String"
					},
					{
						"name": "Landing_Page_Numerator",
						"type": "Int32"
					},
					{
						"name": "Creative_Logical_Name",
						"type": "String"
					},
					{
						"name": "serial_details",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "ParquetFormat"
					},
					"fileName": "[parameters('BI_Serials_blob_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('BI_Serials_blob_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dwhdb_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobInputFolder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string",
						"defaultValue": "DimProducts.csv"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": "SampleData/AW",
						"container": "mycontainer"
					},
					"columnDelimiter": "|",
					"encodingName": "UTF-8",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob_Contacts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_name": {
						"type": "String",
						"defaultValue": "Dim_AccountContacts"
					}
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "\u0001",
						"rowDelimiter": "\n",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": {
						"value": "[parameters('Blob_Contacts_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": "[parameters('Blob_Contacts_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob_Serials')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_name": {
						"type": "String",
						"defaultValue": "Dim_AccountContacts"
					}
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "\u0001",
						"rowDelimiter": "\n",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": {
						"value": "[parameters('Blob_Serials_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": "[parameters('Blob_Serials_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Communication_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataloadStore",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"annotations": [],
				"type": "AzureBlob",
				"structure": [
					{
						"name": "MessageID",
						"type": "Int32"
					},
					{
						"name": "Event_Date",
						"type": "DateTime"
					},
					{
						"name": "details",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "\t",
						"rowDelimiter": "",
						"quoteChar": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"compression": {
						"type": "BZip2"
					},
					"fileName": {
						"value": "[parameters('Communication_blob_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": {
						"value": "[parameters('Communication_blob_properties_typeProperties_folderPath')]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataloadStore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Communication_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCMM_DBG_PR1",
					"type": "LinkedServiceReference",
					"parameters": {
						"DB": "emerp_lm"
					}
				},
				"folder": {
					"name": "DWH"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "MessageID",
						"type": "Int32"
					},
					{
						"name": "Event_Date",
						"type": "DateTime"
					},
					{
						"name": "details",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "azure.AZ_Communication"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCMM_DBG_PR1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Contacts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCMM_DBG_PR1",
					"type": "LinkedServiceReference",
					"parameters": {
						"DB": "emerp_lm"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "RAWDB_Id",
						"type": "Int64"
					},
					{
						"name": "datails",
						"type": "String"
					},
					{
						"name": "Fixed_Timestamp",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "EmErp_LM.azure.scmm_contacts"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCMM_DBG_PR1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbSqlApi')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDb1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": "users"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDb1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_Model_Data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH12",
					"type": "LinkedServiceReference",
					"parameters": {
						"DB_Name": "DM"
					}
				},
				"folder": {
					"name": "Assignment Score"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "AssignmentDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Contact_Id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Accountnumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BrokerId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "IsOnline",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "HasAccount",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "First_Lead_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "First_Lead_Local_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Last_Lead_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Last_Email_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Last_Login_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Last_Action_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "First_Lead_Last_Lead_Minutes",
						"type": "int",
						"precision": 10
					},
					{
						"name": "First_Lead_To_Assignment_Minutes",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Last_Action_To_Assignment_Minutes",
						"type": "int",
						"precision": 10
					},
					{
						"name": "First_Lead_Local_Weekday",
						"type": "int",
						"precision": 10
					},
					{
						"name": "First_Lead_Local_Day",
						"type": "int",
						"precision": 10
					},
					{
						"name": "First_Lead_Local_Hour",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Language",
						"type": "varchar"
					},
					{
						"name": "Country",
						"type": "varchar"
					},
					{
						"name": "SiteTrigger",
						"type": "nvarchar"
					},
					{
						"name": "Serial",
						"type": "varchar"
					},
					{
						"name": "Is_Serial_0",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Target_Market",
						"type": "nvarchar"
					},
					{
						"name": "CampaignName",
						"type": "nvarchar"
					},
					{
						"name": "ProductName",
						"type": "nvarchar"
					},
					{
						"name": "Supplier",
						"type": "nvarchar"
					},
					{
						"name": "Site_Name",
						"type": "nvarchar"
					},
					{
						"name": "Landing_Page",
						"type": "varchar"
					},
					{
						"name": "ProductType",
						"type": "nvarchar"
					},
					{
						"name": "Placement_size",
						"type": "nvarchar"
					},
					{
						"name": "SupplierChargingUnit",
						"type": "nvarchar"
					},
					{
						"name": "Creative_format",
						"type": "nvarchar"
					},
					{
						"name": "Creative",
						"type": "nvarchar"
					},
					{
						"name": "First_Lead_Os",
						"type": "nvarchar"
					},
					{
						"name": "First_Lead_Browser",
						"type": "nvarchar"
					},
					{
						"name": "First_Lead_Content",
						"type": "nvarchar"
					},
					{
						"name": "Last_Failed_Deposit_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Last_Failed_Amount_USD",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Last_Wire_Amount_USD",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Last_Failed_To_Assignment_Minutes",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Is_Failed_Dep_Last_7",
						"type": "int",
						"precision": 10
					},
					{
						"name": "number_of_serials",
						"type": "int",
						"precision": 10
					},
					{
						"name": "total_hphit",
						"type": "int",
						"precision": 10
					},
					{
						"name": "n_logins_last_30",
						"type": "int",
						"precision": 10
					},
					{
						"name": "n_emails_last_30",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SupplierGroup",
						"type": "varchar"
					},
					{
						"name": "SupplierGroup_SEM",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SupplierGroup_Others",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SupplierGroup_Affiliates",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ContactAction",
						"type": "varchar"
					},
					{
						"name": "ContactAction_Lead",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ContactAction_Returning_Lead",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ContactAction_Returning_Email",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ContactAction_Returning_Login",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ContactActionAge",
						"type": "varchar"
					},
					{
						"name": "ContactActionAge_Till_2H",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ContactActionAge_2H_24H",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ContactActionAge_24H_3D",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ContactActionAge_3D_7D",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ContactActionAge_7D_14D",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ContactActionAge_14D_1M",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ContactActionAge_1M",
						"type": "int",
						"precision": 10
					},
					{
						"name": "First_Lead_Device",
						"type": "nvarchar"
					},
					{
						"name": "First_Lead_Device_Tablet",
						"type": "int",
						"precision": 10
					},
					{
						"name": "First_Lead_Device_Mobile",
						"type": "int",
						"precision": 10
					},
					{
						"name": "First_Lead_Device_Desktop",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Last_Failed_Method",
						"type": "nvarchar"
					},
					{
						"name": "Last_Failed_CreditCards",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Last_Failed_eWallet",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Last_Failed_None",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Activation_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "Assignment",
					"table": "Model_Data"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DWH12')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DWH_API_Customers_Models_Data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AccountNumber",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "ModelID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Model_Result",
						"type": "nvarchar"
					},
					{
						"name": "Last_Update_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Last_Sync_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[Azure_Customers_Models_Data]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DWH')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DWH_Dim_Customers_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_name": {
						"type": "String",
						"defaultValue": "Dim_AccountContacts"
					}
				},
				"folder": {
					"name": "DWH"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "\u0001",
						"rowDelimiter": "\n",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": {
						"value": "[parameters('DWH_Dim_Customers_blob_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": "[parameters('DWH_Dim_Customers_blob_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DWH_Dim_Customers_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "AccountNumber",
						"type": "Int32"
					},
					{
						"name": "datails",
						"type": "String"
					},
					{
						"name": "SsisUpdatedDate",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "[[azure].[AZ_Customers]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DWH')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DWH_pu_list_files')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "alldbdwh",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Platform Usage"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "TransactionNumber",
						"type": "Int32"
					},
					{
						"name": "PositionNumber",
						"type": "Int32"
					},
					{
						"name": "AccountNumber",
						"type": "Int32"
					},
					{
						"name": "CustomerHistory_ID",
						"type": "Int32"
					},
					{
						"name": "CustomersExtendedHistory_ID",
						"type": "Int32"
					},
					{
						"name": "DealAttirbute_ID",
						"type": "Int16"
					},
					{
						"name": "Instrument_ID",
						"type": "Int32"
					},
					{
						"name": "TransactionType_ID",
						"type": "Int16"
					},
					{
						"name": "Direction_ID",
						"type": "Int16"
					},
					{
						"name": "Source_ID",
						"type": "Int16"
					},
					{
						"name": "DealType_ID",
						"type": "Int16"
					},
					{
						"name": "ExecutionDate",
						"type": "DateTime"
					},
					{
						"name": "ExecutionDay",
						"type": "DateTime"
					},
					{
						"name": "ExecutionTime",
						"type": "TimeSpan"
					},
					{
						"name": "TransactionCloseDate",
						"type": "DateTime"
					},
					{
						"name": "ValueDate",
						"type": "DateTime"
					},
					{
						"name": "ValueDay",
						"type": "DateTime"
					},
					{
						"name": "BaseAmount",
						"type": "Decimal"
					},
					{
						"name": "OtherAmount",
						"type": "Decimal"
					},
					{
						"name": "SpotRate",
						"type": "Decimal"
					},
					{
						"name": "ForwardPips",
						"type": "Double"
					},
					{
						"name": "TotRate",
						"type": "Decimal"
					},
					{
						"name": "Volume_USD",
						"type": "Decimal"
					},
					{
						"name": "ServerRate",
						"type": "Decimal"
					},
					{
						"name": "OtherServerRate",
						"type": "Decimal"
					},
					{
						"name": "ExecutedLimit",
						"type": "Int16"
					},
					{
						"name": "PL",
						"type": "Decimal"
					},
					{
						"name": "IsFirstBOP",
						"type": "Boolean"
					},
					{
						"name": "IsFirstForex",
						"type": "Boolean"
					},
					{
						"name": "IsFirstDeal",
						"type": "Boolean"
					},
					{
						"name": "Deleted",
						"type": "Boolean"
					},
					{
						"name": "PositionClosed",
						"type": "Int16"
					},
					{
						"name": "DealPL_USD",
						"type": "Decimal"
					},
					{
						"name": "PL_SymbolId",
						"type": "Int16"
					},
					{
						"name": "AccountBasesymbolId",
						"type": "Int16"
					},
					{
						"name": "EtlUpdatedDate",
						"type": "DateTime"
					},
					{
						"name": "SpreadCost",
						"type": "Decimal"
					},
					{
						"name": "Folder_ID",
						"type": "Int16"
					},
					{
						"name": "Broker_ID",
						"type": "Int32"
					},
					{
						"name": "AccountNumber_modo",
						"type": "Int32"
					},
					{
						"name": "PositionNumber_modo",
						"type": "Int32"
					},
					{
						"name": "PL_AccountBase",
						"type": "Decimal"
					},
					{
						"name": "Customer_Favor_Rate_diff",
						"type": "Decimal"
					},
					{
						"name": "Channel_Bucket_ID",
						"type": "Int32"
					},
					{
						"name": "Sessions_ID",
						"type": "Int64"
					},
					{
						"name": "DealCountTotal",
						"type": "Int32"
					},
					{
						"name": "Retention_ID",
						"type": "Int16"
					},
					{
						"name": "ConversionRate",
						"type": "Decimal"
					},
					{
						"name": "CommissionInAccountBase",
						"type": "Decimal"
					},
					{
						"name": "SpreadCostInAccountBase",
						"type": "Decimal"
					},
					{
						"name": "RolloverSpreadCostInAccountBase",
						"type": "Decimal"
					},
					{
						"name": "CommissionInOther",
						"type": "Decimal"
					},
					{
						"name": "SpreadCostInOther",
						"type": "Decimal"
					},
					{
						"name": "RolloverSpreadCostInOther",
						"type": "Decimal"
					}
				],
				"typeProperties": {
					"tableName": "[[azure].[platfrom_usage_log_file]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/alldbdwh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_3oo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bydatalakqa sa",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "campaings.json",
						"folderPath": "sqldata",
						"container": "dwh-qa"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bydatalakqa sa')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_5qf')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDb1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": "agents"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDb1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_5sz')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDb1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": "campaigns"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDb1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_6v0')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bydatalakqa sa",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "campaings",
						"folderPath": "sqldata",
						"container": "dwh-qa"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bydatalakqa sa')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_bve')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDb1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": "campaigns"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDb1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_e97')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDb1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": "campaigns"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDb1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_ihk')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "alldbdwh",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "accountnumber",
						"type": "bigint",
						"precision": 19,
						"scale": 0
					},
					{
						"name": "Event_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "event_name",
						"type": "nchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "_nati_pu_2019_2021"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/alldbdwh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_lfo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bydatalakqa sa",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "campaingscsv.json",
						"folderPath": "sqldata",
						"container": "dwh-qa"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bydatalakqa sa')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_np9')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlob_pu_files_raw_sc",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_folderPath": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().cw_folderPath",
							"type": "Expression"
						},
						"container": "platformusage"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_pu_files_raw_sc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_prf')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDb1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {
					"type": "object",
					"properties": {
						"Guid": {
							"type": "string"
						},
						"Name": {
							"type": "string"
						},
						"Age": {
							"type": "integer"
						}
					}
				},
				"typeProperties": {
					"collectionName": "WebEvents"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDb1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_y59')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSql tesdb",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "bi",
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSql tesdb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_zwu')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlob_pu_files_raw_sc",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "_test_pu_raw_file_sync",
						"container": "platformusage"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_pu_files_raw_sc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dim_AccountContacts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "alldbdwh",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "AccountNumber",
						"type": "Int32"
					},
					{
						"name": "ContactID",
						"type": "Int64"
					},
					{
						"name": "LastUpdate",
						"type": "DateTime"
					},
					{
						"name": "SsisUpdatedDate",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "dwh.azure.AZ_Dim_AccountContacts"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/alldbdwh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EMERP_DB_Events')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Dwhpr",
					"type": "LinkedServiceReference",
					"parameters": {
						"DB": "emerp_db"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "RAWDB_Id",
						"type": "Int64"
					},
					{
						"name": "datails",
						"type": "String"
					},
					{
						"name": "Fixed_Timestamp",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "azure.AZ_EMERP_DB_Events"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Dwhpr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Fact_Transactions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "alldbdwh",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "TransactionNumber",
						"type": "Int32"
					},
					{
						"name": "PositionNumber",
						"type": "Int32"
					},
					{
						"name": "AccountNumber",
						"type": "Int32"
					},
					{
						"name": "CustomerHistory_ID",
						"type": "Int32"
					},
					{
						"name": "CustomersExtendedHistory_ID",
						"type": "Int32"
					},
					{
						"name": "DealAttirbute_ID",
						"type": "Int16"
					},
					{
						"name": "Instrument_ID",
						"type": "Int32"
					},
					{
						"name": "TransactionType_ID",
						"type": "Int16"
					},
					{
						"name": "Direction_ID",
						"type": "Int16"
					},
					{
						"name": "Source_ID",
						"type": "Int16"
					},
					{
						"name": "DealType_ID",
						"type": "Int16"
					},
					{
						"name": "ExecutionDate",
						"type": "DateTime"
					},
					{
						"name": "ExecutionDay",
						"type": "DateTime"
					},
					{
						"name": "ExecutionTime",
						"type": "TimeSpan"
					},
					{
						"name": "TransactionCloseDate",
						"type": "DateTime"
					},
					{
						"name": "ValueDate",
						"type": "DateTime"
					},
					{
						"name": "ValueDay",
						"type": "DateTime"
					},
					{
						"name": "BaseAmount",
						"type": "Decimal"
					},
					{
						"name": "OtherAmount",
						"type": "Decimal"
					},
					{
						"name": "SpotRate",
						"type": "Decimal"
					},
					{
						"name": "ForwardPips",
						"type": "Double"
					},
					{
						"name": "TotRate",
						"type": "Decimal"
					},
					{
						"name": "Volume_USD",
						"type": "Decimal"
					},
					{
						"name": "ServerRate",
						"type": "Decimal"
					},
					{
						"name": "OtherServerRate",
						"type": "Decimal"
					},
					{
						"name": "ExecutedLimit",
						"type": "Int16"
					},
					{
						"name": "PL",
						"type": "Decimal"
					},
					{
						"name": "IsFirstBOP",
						"type": "Boolean"
					},
					{
						"name": "IsFirstForex",
						"type": "Boolean"
					},
					{
						"name": "IsFirstDeal",
						"type": "Boolean"
					},
					{
						"name": "Deleted",
						"type": "Boolean"
					},
					{
						"name": "PositionClosed",
						"type": "Int16"
					},
					{
						"name": "DealPL_USD",
						"type": "Decimal"
					},
					{
						"name": "PL_SymbolId",
						"type": "Int16"
					},
					{
						"name": "AccountBasesymbolId",
						"type": "Int16"
					},
					{
						"name": "EtlUpdatedDate",
						"type": "DateTime"
					},
					{
						"name": "SpreadCost",
						"type": "Decimal"
					},
					{
						"name": "Folder_ID",
						"type": "Int16"
					},
					{
						"name": "Broker_ID",
						"type": "Int32"
					},
					{
						"name": "AccountNumber_modo",
						"type": "Int32"
					},
					{
						"name": "PositionNumber_modo",
						"type": "Int32"
					},
					{
						"name": "PL_AccountBase",
						"type": "Decimal"
					},
					{
						"name": "Customer_Favor_Rate_diff",
						"type": "Decimal"
					},
					{
						"name": "Channel_Bucket_ID",
						"type": "Int32"
					},
					{
						"name": "Sessions_ID",
						"type": "Int64"
					},
					{
						"name": "DealCountTotal",
						"type": "Int32"
					},
					{
						"name": "Retention_ID",
						"type": "Int16"
					},
					{
						"name": "ConversionRate",
						"type": "Decimal"
					},
					{
						"name": "CommissionInAccountBase",
						"type": "Decimal"
					},
					{
						"name": "SpreadCostInAccountBase",
						"type": "Decimal"
					},
					{
						"name": "RolloverSpreadCostInAccountBase",
						"type": "Decimal"
					},
					{
						"name": "CommissionInOther",
						"type": "Decimal"
					},
					{
						"name": "SpreadCostInOther",
						"type": "Decimal"
					},
					{
						"name": "RolloverSpreadCostInOther",
						"type": "Decimal"
					}
				],
				"typeProperties": {
					"tableName": "[[azure].[AZ_Fact_Transactions]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/alldbdwh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Mng_azure_ETL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "alldbdwh",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"typeProperties": {
					"tableName": "[[azure].[Mng_azure_ETL]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/alldbdwh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Mng_data_factory_etl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Azure BI db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Source",
						"type": "varchar"
					},
					{
						"name": "TableName",
						"type": "varchar"
					},
					{
						"name": "Incremental",
						"type": "bit"
					},
					{
						"name": "LastIncrementalDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "LastIncrementalDate2",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "NextIncrementalDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "NextIncrementalDate2",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "SelectSQL",
						"type": "varchar"
					},
					{
						"name": "LastId",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "NextId",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "LastRunRowCount",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LastTimeStamp",
						"type": "varbinary"
					},
					{
						"name": "NextTimeStamp",
						"type": "varbinary"
					},
					{
						"name": "MaxToDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "MaxID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Batch_Size",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Mng_data_factory_ETL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Azure BI db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ParameterTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Azure BI db",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablename": {
						"type": "string",
						"defaultValue": "DimProducts"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Azure BI db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet_file_dynamic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLake_gen2_usansa",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Parquet_table_file_name": {
						"type": "string"
					},
					"Parquet_db": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().Parquet_db,'_',dataset().Parquet_table_file_name,'.qz')",
							"type": "Expression"
						},
						"folderPath": "parquet_file/lookup_tables",
						"fileSystem": "usan-data-lake-fs"
					},
					"compressionCodec": "gzip"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLake_gen2_usansa')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_mrr_customers_clustering')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "STG",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sync"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "AccountNumber",
						"type": "Int64",
						"precision": 19,
						"scale": 255
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[mrr_customers_clustering]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/STG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Scmm_Communication_Channels')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "emerp_lm",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DC"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ChannelID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ChannelTypeID",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "ChannelType",
						"type": "varchar"
					},
					{
						"name": "ChannelName",
						"type": "nvarchar"
					},
					{
						"name": "ChannelStatus",
						"type": "nvarchar"
					},
					{
						"name": "SendingMethodID",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "SendingMethodName",
						"type": "varchar"
					},
					{
						"name": "ChannelPopulationFilterId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ChannelPopulationFilter",
						"type": "nvarchar"
					},
					{
						"name": "Channel_Event",
						"type": "varchar"
					},
					{
						"name": "ChannelDeliveryScheduleType",
						"type": "varchar"
					},
					{
						"name": "CampaignID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CampaignName",
						"type": "nvarchar"
					},
					{
						"name": "CampaignCategory",
						"type": "varchar"
					},
					{
						"name": "Campaign_System",
						"type": "varchar"
					},
					{
						"name": "Campaign_Schedule_Type",
						"type": "varchar"
					},
					{
						"name": "EmailSubject",
						"type": "nvarchar"
					},
					{
						"name": "CampaignStatus",
						"type": "nvarchar"
					},
					{
						"name": "CampaignPopulationFilterId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CampaignPopulationFilter",
						"type": "nvarchar"
					},
					{
						"name": "ExpectedCustomerResponse",
						"type": "varchar"
					},
					{
						"name": "RewardID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RewardName",
						"type": "nvarchar"
					},
					{
						"name": "Channel_Group",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "azure",
					"table": "Communication_Channels_Stream"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/emerp_lm')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_3oo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "emerpdbpr",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "value",
						"type": "nvarchar"
					}
				],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/emerpdbpr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_5qf')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "emerpdbpr",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "agent_numerator",
						"type": "int",
						"precision": 10
					},
					{
						"name": "id",
						"type": "uniqueidentifier"
					},
					{
						"name": "name",
						"type": "nvarchar"
					},
					{
						"name": "first_name",
						"type": "nvarchar"
					},
					{
						"name": "last_name",
						"type": "nvarchar"
					},
					{
						"name": "email",
						"type": "nvarchar"
					},
					{
						"name": "password",
						"type": "nvarchar"
					},
					{
						"name": "deleted",
						"type": "bit"
					},
					{
						"name": "position",
						"type": "nvarchar"
					},
					{
						"name": "signature",
						"type": "nvarchar"
					},
					{
						"name": "default_supplier_id",
						"type": "uniqueidentifier"
					},
					{
						"name": "phone",
						"type": "nvarchar"
					},
					{
						"name": "fax",
						"type": "nvarchar"
					},
					{
						"name": "cellphone",
						"type": "nvarchar"
					},
					{
						"name": "affiliate",
						"type": "bit"
					},
					{
						"name": "status",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "address_id",
						"type": "uniqueidentifier"
					},
					{
						"name": "billing_address_id",
						"type": "uniqueidentifier"
					},
					{
						"name": "webui_pref",
						"type": "nvarchar"
					},
					{
						"name": "currency",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "default_charge_unit_id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "default_payment_method_id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "default_site_id",
						"type": "uniqueidentifier"
					},
					{
						"name": "affiliate_default",
						"type": "bit"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "agent_tab"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/emerpdbpr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_5sz')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bydatalakqa sa",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "campaingscsv.json",
						"folderPath": "sqldata",
						"container": "dwh-qa"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"numerator": {
							"type": "integer"
						},
						"id": {
							"type": "string"
						},
						"name": {
							"type": "string"
						},
						"Products": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"product_id": {
										"type": "string"
									},
									"product_numerator": {
										"type": "integer"
									},
									"Serials": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"Serial_id": {
													"type": "string"
												},
												"serial": {
													"type": "integer"
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bydatalakqa sa')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_6v0')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "emerpdbpr",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "value",
						"type": "nvarchar"
					}
				],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/emerpdbpr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_PlatfromUsagePROD')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Events_Collector_PlatfromUsage_log",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "FileShare",
				"typeProperties": {
					"folderPath": "[parameters('SourceDataset_PlatfromUsagePROD_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Events_Collector_PlatfromUsage_log')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_bve')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bydatalakqa sa",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "campaings",
						"folderPath": "sqldata",
						"container": "dwh-qa"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"value": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bydatalakqa sa')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_e97')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bydatalakqa sa",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "campaings.json",
						"folderPath": "sqldata",
						"container": "dwh-qa"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"value": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bydatalakqa sa')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_ihk')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdb_blob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "nati/pu_2019_2021_export",
						"container": "users"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "accountnumber",
						"type": "INT64"
					},
					{
						"name": "Event_date",
						"type": "INT96"
					},
					{
						"name": "event_name",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dwhdb_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_lfo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "emerpdbpr",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/emerpdbpr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_np9')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "pu_raw_file_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/pu_raw_file_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_prf')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "barak/tmp_pqu",
						"container": "users"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "id",
						"type": "UTF8"
					},
					{
						"name": "Req",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_y59')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCMM SQL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_schema": {
						"type": "String"
					},
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().cw_schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCMM SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_zwu')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "pu_raw_file_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/pu_raw_file_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_file_avi')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "fileserver1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"file_name": {
						"type": "String"
					},
					"folder": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Platform Usage"
				},
				"annotations": [],
				"type": "FileShare",
				"typeProperties": {
					"compression": {
						"type": "ZipDeflate",
						"level": "Optimal"
					},
					"fileName": {
						"value": "[parameters('Source_file_avi_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": {
						"value": "[parameters('Source_file_avi_properties_typeProperties_folderPath')]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/fileserver1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_files_pu_raw_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "pu_raw_file_LS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Platform Usage"
				},
				"annotations": [],
				"type": "FileShare",
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/pu_raw_file_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/all_db_pr_SQL_SERVER')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "alldbdwh",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "_nati_pu_2019_2021"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/alldbdwh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_EMERP_Events')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_name": {
						"type": "String",
						"defaultValue": "EMERP_Events"
					}
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "\u0001",
						"rowDelimiter": "\n",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": {
						"value": "[parameters('blob_EMERP_Events_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": "[parameters('blob_EMERP_Events_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_Fact_Transactions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_name": {
						"type": "String",
						"defaultValue": "Fact_Transactions"
					}
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": {
						"value": "[parameters('blob_Fact_Transactions_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": "[parameters('blob_Fact_Transactions_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_PU_raw_files')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlob_pu_files_raw_sc",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_name": {
						"type": "String"
					},
					"file_name": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Platform Usage"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"fileName": "[parameters('blob_PU_raw_files_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('blob_PU_raw_files_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_pu_files_raw_sc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_customers_clustering')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_name": {
						"type": "String"
					}
				},
				"folder": {
					"name": "sync"
				},
				"annotations": [],
				"type": "AzureBlob",
				"structure": [
					{
						"name": "AccountNumber",
						"type": "String"
					},
					{
						"name": "cluster_type",
						"type": "String"
					},
					{
						"name": "update_date",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": {
						"value": "[parameters('blob_customers_clustering_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": {
						"value": "[parameters('blob_customers_clustering_properties_typeProperties_folderPath')]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_customers_clustering_folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_name": {
						"type": "String"
					}
				},
				"folder": {
					"name": "sync"
				},
				"annotations": [],
				"type": "AzureBlob",
				"structure": [
					{
						"name": "AccountNumber",
						"type": "String"
					},
					{
						"name": "cluster_type",
						"type": "String"
					},
					{
						"name": "update_date",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": "[parameters('blob_customers_clustering_folder_properties_typeProperties_fileName')]",
					"folderPath": {
						"value": "[parameters('blob_customers_clustering_folder_properties_typeProperties_folderPath')]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_customers_clustering_folder_hd_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_name": {
						"type": "String"
					}
				},
				"folder": {
					"name": "sync"
				},
				"annotations": [],
				"type": "AzureBlob",
				"structure": [
					{
						"name": "AccountNumber",
						"type": "String"
					},
					{
						"name": "cluster_type",
						"type": "String"
					},
					{
						"name": "update_date",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": "[parameters('blob_customers_clustering_folder_hd_file_properties_typeProperties_fileName')]",
					"folderPath": {
						"value": "[parameters('blob_customers_clustering_folder_hd_file_properties_typeProperties_folderPath')]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_customers_clustering_json_file_list')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sync"
				},
				"annotations": [],
				"type": "AzureBlob",
				"structure": [
					{
						"name": "file",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "JsonFormat",
						"filePattern": "setOfObjects",
						"jsonPathDefinition": {
							"file": "$.['_1']"
						}
					},
					"fileName": "[parameters('blob_customers_clustering_json_file_list_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('blob_customers_clustering_json_file_list_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_platfrom_merge_file_des')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"file_name": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": " ",
						"rowDelimiter": "\n",
						"quoteChar": "\"",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": {
						"value": "[parameters('blob_platfrom_merge_file_des_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": "[parameters('blob_platfrom_merge_file_des_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_platfrom_unzip_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_name": {
						"type": "String"
					},
					"file_name": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Platform Usage"
				},
				"annotations": [],
				"type": "AzureBlob",
				"structure": [
					{
						"name": "ip",
						"type": "String"
					},
					{
						"name": "hyphen_1",
						"type": "String"
					},
					{
						"name": "hyphen_2",
						"type": "String"
					},
					{
						"name": "datetime",
						"type": "String"
					},
					{
						"name": "time",
						"type": "String"
					},
					{
						"name": "url_parm",
						"type": "String"
					},
					{
						"name": "Prop_6",
						"type": "String"
					},
					{
						"name": "Prop_7",
						"type": "String"
					},
					{
						"name": "server",
						"type": "String"
					},
					{
						"name": "user_agent",
						"type": "String"
					},
					{
						"name": "log_parm",
						"type": "String"
					}
				],
				"typeProperties": {
					"folderPath": {
						"value": "[parameters('blob_platfrom_unzip_file_properties_typeProperties_folderPath')]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_platfrom_unzip_file_1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_name": {
						"type": "String"
					},
					"file_name": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureBlob",
				"structure": [
					{
						"name": "ip",
						"type": "String"
					},
					{
						"name": "hyphen_1",
						"type": "String"
					},
					{
						"name": "hyphen_2",
						"type": "String"
					},
					{
						"name": "datetime",
						"type": "String"
					},
					{
						"name": "time",
						"type": "String"
					},
					{
						"name": "url_parm",
						"type": "String"
					},
					{
						"name": "Prop_6",
						"type": "String"
					},
					{
						"name": "Prop_7",
						"type": "String"
					},
					{
						"name": "server",
						"type": "String"
					},
					{
						"name": "user_agent",
						"type": "String"
					},
					{
						"name": "log_parm",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": " ",
						"rowDelimiter": "\n",
						"quoteChar": "\"",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": {
						"value": "[parameters('blob_platfrom_unzip_file_1_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": {
						"value": "[parameters('blob_platfrom_unzip_file_1_properties_typeProperties_folderPath')]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_serials_row_folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": "[parameters('blob_serials_row_folder_properties_typeProperties_fileName')]",
					"folderPath": {
						"value": "[parameters('blob_serials_row_folder_properties_typeProperties_folderPath')]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/des_pu_in_processing')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bydatalakqa sa",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "in_processing",
						"container": "test-up-blob-file"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bydatalakqa sa')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dwh_Customer_Questionnaires_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataloadStore",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "\t",
						"rowDelimiter": "",
						"quoteChar": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"compression": {
						"type": "BZip2"
					},
					"fileName": {
						"value": "[parameters('dwh_Customer_Questionnaires_blob_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": {
						"value": "[parameters('dwh_Customer_Questionnaires_blob_properties_typeProperties_folderPath')]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataloadStore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dwh_Customer_Questionnaires_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "AccountNumber",
						"type": "Int32"
					},
					{
						"name": "details",
						"type": "String"
					},
					{
						"name": "Last_Update",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "[[azure].[AZ_Customer_Questionnaires]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DWH')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dwh_Dim_Users_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataloadStore",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"annotations": [],
				"type": "AzureBlob",
				"structure": [
					{
						"name": "User_ID",
						"type": "Int16"
					},
					{
						"name": "details",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "\u0001",
						"rowDelimiter": "\n",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": {
						"value": "[parameters('dwh_Dim_Users_blob_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": "[parameters('dwh_Dim_Users_blob_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataloadStore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dwh_Dim_Users_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "User_ID",
						"type": "Int16"
					},
					{
						"name": "details",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[azure].[AZ_Users]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DWH')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dwh_calls_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataloadStore",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"annotations": [],
				"type": "AzureBlob",
				"structure": [
					{
						"name": "Call_ID",
						"type": "Int32"
					},
					{
						"name": "Call_Details",
						"type": "String"
					},
					{
						"name": "CallDay",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "\t",
						"rowDelimiter": "",
						"quoteChar": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"compression": {
						"type": "BZip2"
					},
					"fileName": {
						"value": "[parameters('dwh_calls_blob_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": {
						"value": "[parameters('dwh_calls_blob_properties_typeProperties_folderPath')]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataloadStore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dwh_calls_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "Call_ID",
						"type": "Int32"
					},
					{
						"name": "Call_Details",
						"type": "String"
					},
					{
						"name": "CallDay",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "[[azure].[AZ_Calls]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DWH')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dwh_lead_assignments_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataloadStore",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"annotations": [],
				"type": "AzureBlob",
				"structure": [
					{
						"name": "Fact_Lead_Assignments_ID",
						"type": "Int32"
					},
					{
						"name": "Assignment_Day",
						"type": "DateTime"
					},
					{
						"name": "Assignment_Date",
						"type": "DateTime"
					},
					{
						"name": "Details",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "\t",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"compression": {
						"type": "BZip2"
					},
					"fileName": {
						"value": "[parameters('dwh_lead_assignments_blob_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": {
						"value": "[parameters('dwh_lead_assignments_blob_properties_typeProperties_folderPath')]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataloadStore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dwh_lead_assignments_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "Fact_Lead_Assignments_ID",
						"type": "Int32"
					},
					{
						"name": "Assignment_Day",
						"type": "Date"
					},
					{
						"name": "Assignment_Date",
						"type": "DateTime"
					},
					{
						"name": "Details",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[azure].[AZ_Lead_assignments]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DWH')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dwhpr_dynamic_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Dwhpr",
					"type": "LinkedServiceReference",
					"parameters": {
						"DB": {
							"value": "@dataset().DB",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"DB": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					},
					"schema": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Dwhpr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/etl_manage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLoadStorageAccount",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureTable",
				"structure": [
					{
						"name": "PartitionKey",
						"type": "String"
					},
					{
						"name": "RowKey",
						"type": "String"
					},
					{
						"name": "Timestamp",
						"type": "DateTimeOffset"
					},
					{
						"name": "Last_Incremental_Date",
						"type": "String"
					},
					{
						"name": "Next_Incremental_Date",
						"type": "String"
					},
					{
						"name": "Last_PU_INT",
						"type": "Int64"
					},
					{
						"name": "Next_PU_INT",
						"type": "Int64"
					}
				],
				"typeProperties": {
					"tableName": "etlManage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataLoadStorageAccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/fact_events_dwh')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_dwh",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BI"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "Event_Date_day",
						"type": "DateTime"
					},
					{
						"name": "Source",
						"type": "String"
					},
					{
						"name": "Event_Name",
						"type": "String"
					},
					{
						"name": "Event_Details",
						"type": "String"
					},
					{
						"name": "Event_Count",
						"type": "Int64"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[fact_events]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_dwh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/fxnet_accounting_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataloadStore",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"annotations": [],
				"type": "AzureBlob",
				"structure": [
					{
						"name": "fact_account_trans_id",
						"type": "Int64"
					},
					{
						"name": "ActionDay",
						"type": "DateTime"
					},
					{
						"name": "ActionDate",
						"type": "DateTime"
					},
					{
						"name": "Details",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "\t",
						"rowDelimiter": "",
						"quoteChar": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"compression": {
						"type": "BZip2"
					},
					"fileName": {
						"value": "[parameters('fxnet_accounting_blob_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": {
						"value": "[parameters('fxnet_accounting_blob_properties_typeProperties_folderPath')]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataloadStore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/fxnet_accounting_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "fact_account_trans_id",
						"type": "Int64"
					},
					{
						"name": "ActionDay",
						"type": "Date"
					},
					{
						"name": "ActionDate",
						"type": "DateTime"
					},
					{
						"name": "Details",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[azure].[AZ_Accounting]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DWH')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/fxnet_deals_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataloadStore",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"annotations": [],
				"type": "AzureBlob",
				"structure": [
					{
						"name": "TransactionNumber",
						"type": "String"
					},
					{
						"name": "ExecutionDay",
						"type": "String"
					},
					{
						"name": "ExecutionDate",
						"type": "DateTime"
					},
					{
						"name": "Trans_Details",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "\t",
						"rowDelimiter": "",
						"quoteChar": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"compression": {
						"type": "BZip2"
					},
					"fileName": {
						"value": "[parameters('fxnet_deals_blob_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": {
						"value": "[parameters('fxnet_deals_blob_properties_typeProperties_folderPath')]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataloadStore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/fxnet_deals_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "TransactionNumber",
						"type": "Int32"
					},
					{
						"name": "ExecutionDay",
						"type": "Date"
					},
					{
						"name": "ExecutionDate",
						"type": "DateTime"
					},
					{
						"name": "Trans_Details",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[azure].[AZ_Deals]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DWH')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/platformusage_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_name": {
						"type": "String"
					},
					"file_name": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Platform Usage"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"compression": {
						"type": "ZipDeflate",
						"level": "Optimal"
					},
					"fileName": {
						"value": "[parameters('platformusage_blob_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": {
						"value": "[parameters('platformusage_blob_properties_typeProperties_folderPath')]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sc_pu_landing')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "bydatalakqa sa",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "landing",
						"container": "test-up-blob-file"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/bydatalakqa sa')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/scmm_activities_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataloadStore",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"annotations": [],
				"type": "AzureBlob",
				"structure": [
					{
						"name": "Activity_Id",
						"type": "Int32"
					},
					{
						"name": "Activity_Date",
						"type": "DateTime"
					},
					{
						"name": "details",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "\t",
						"rowDelimiter": "",
						"quoteChar": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"compression": {
						"type": "BZip2"
					},
					"fileName": {
						"value": "[parameters('scmm_activities_blob_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": {
						"value": "[parameters('scmm_activities_blob_properties_typeProperties_folderPath')]",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataloadStore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/scmm_activities_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCMM_DBG_PR1",
					"type": "LinkedServiceReference",
					"parameters": {
						"DB": "EmErp_LM"
					}
				},
				"folder": {
					"name": "DWH"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "Activity_Id",
						"type": "Int32"
					},
					{
						"name": "Activity_Date",
						"type": "DateTime"
					},
					{
						"name": "details",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[azure].[AZ_SCMM_Activities]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCMM_DBG_PR1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/serials')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "emerpdbpr",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "Serial",
						"type": "Int64"
					},
					{
						"name": "serial_details",
						"type": "String"
					},
					{
						"name": "update_date",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "azure.az_serials"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/emerpdbpr')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/serials_dim_dwh')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_dwh",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BI"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "Serial",
						"type": "Int64"
					},
					{
						"name": "Client_Id",
						"type": "String"
					},
					{
						"name": "Client_Numerator",
						"type": "Int32"
					},
					{
						"name": "Client_Name",
						"type": "String"
					},
					{
						"name": "Product_Numerator",
						"type": "Int32"
					},
					{
						"name": "Product_Name",
						"type": "String"
					},
					{
						"name": "Product_Full_Name",
						"type": "String"
					},
					{
						"name": "Campaign_Numerator",
						"type": "Int32"
					},
					{
						"name": "Campaign_Name",
						"type": "String"
					},
					{
						"name": "Targetmarket_Id",
						"type": "Int32"
					},
					{
						"name": "Targetmarket",
						"type": "String"
					},
					{
						"name": "Supplier_Numerator",
						"type": "Int32"
					},
					{
						"name": "Supplier",
						"type": "String"
					},
					{
						"name": "Supplier_Group",
						"type": "String"
					},
					{
						"name": "Mediabuyer_Numerator",
						"type": "Int32"
					},
					{
						"name": "Mediabuyer",
						"type": "String"
					},
					{
						"name": "Format",
						"type": "String"
					},
					{
						"name": "Site_Numerator",
						"type": "Int32"
					},
					{
						"name": "Site_Name",
						"type": "String"
					},
					{
						"name": "Proposition_Id",
						"type": "Int32"
					},
					{
						"name": "Proposition",
						"type": "String"
					},
					{
						"name": "Banner_Name",
						"type": "String"
					},
					{
						"name": "Banner_Path",
						"type": "String"
					},
					{
						"name": "TypeExt",
						"type": "String"
					},
					{
						"name": "Landing_Page",
						"type": "String"
					},
					{
						"name": "Language",
						"type": "String"
					},
					{
						"name": "SelfActivation",
						"type": "Int32"
					},
					{
						"name": "Content",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[dim_serials]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_dwh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/unzip_platfrom_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"compression": {
						"type": "ZipDeflate"
					},
					"fileName": "[parameters('unzip_platfrom_file_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('unzip_platfrom_file_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS Byl')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLS Byl_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLS Byl_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Analysis')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-194285697588541.1.azuredatabricks.net",
					"authentication": "MSI",
					"workspaceResourceId": "/subscriptions/c080e8cb-10cc-4387-9fd5-9436257f02f4/resourceGroups/dataloader-rg/providers/Microsoft.Databricks/workspaces/Analysis",
					"existingClusterId": "[parameters('Analysis_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Analysis_spark_3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "rt 7.5",
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-194285697588541.1.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('Analysis_spark_3_accessToken')]"
					},
					"existingClusterId": "[parameters('Analysis_spark_3_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azure BI db')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('Azure BI db_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage3_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlob_pu_files_raw_sc')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlob_pu_files_raw_sc_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLake_gen2_usansa')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLake_gen2_usansa_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLake_gen2_usansa_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks1_10_4')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-194285697588541.1.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks1_10_4_accessToken')]"
					},
					"newClusterNodeType": "Standard_DS3_v2",
					"newClusterNumOfWorker": "1:2",
					"newClusterVersion": "10.4.x-cpu-ml-scala2.12",
					"newClusterInitScripts": [],
					"clusterOption": "Autoscaling"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricksDeltaLake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricksDeltaLake",
				"typeProperties": {
					"domain": "https://adb-194285697588541.1.azuredatabricks.net",
					"clusterId": "1116-124605-z2166z9e",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricksDeltaLake_accessToken')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSql tesdb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSql tesdb_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase_dwh')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase_dwh_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase_events')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase_events_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDb1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('CosmosDb1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DWH')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('DWH_connectionString')]",
					"userName": "[parameters('DWH_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('DWH_password')]"
					}
				},
				"connectVia": {
					"referenceName": "alldbgateway",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/alldbgateway')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DWH12')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"DB_Name": {
						"type": "string",
						"defaultValue": "DWH"
					}
				},
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('DWH12_connectionString')]",
					"userName": "[parameters('DWH12_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('DWH12_password')]"
					}
				},
				"connectVia": {
					"referenceName": "alldbgateway",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/alldbgateway')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataLoadStorageAccount')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureTableStorage",
				"typeProperties": {
					"connectionString": "[parameters('DataLoadStorageAccount_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Databricks Job Cluster')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://westeurope.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('Databricks Job Cluster_accessToken')]"
					},
					"newClusterNodeType": "Standard_DS3_v2",
					"newClusterNumOfWorker": "2:5",
					"newClusterSparkEnvVars": {
						"PYSPARK_PYTHON": "/databricks/python3/bin/python3"
					},
					"newClusterVersion": "6.5.x-scala2.11",
					"newClusterInitScripts": [],
					"clusterOption": "Fixed"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataloadStore')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('DataloadStore_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dwhpr')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"DB": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('Dwhpr_connectionString')]",
					"userName": "[parameters('Dwhpr_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Dwhpr_password')]"
					}
				},
				"connectVia": {
					"referenceName": "alldbgateway",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/alldbgateway')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ETL Manage DB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ETL Manage DB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Events_Collector_PlatfromUsage_log')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('Events_Collector_PlatfromUsage_log_properties_typeProperties_host')]",
					"userId": "[parameters('Events_Collector_PlatfromUsage_log_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Events_Collector_PlatfromUsage_log_password')]"
					}
				},
				"connectVia": {
					"referenceName": "alldbgateway",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/alldbgateway')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCMM SQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SCMM SQL_connectionString')]",
					"userName": "[parameters('SCMM SQL_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SCMM SQL_password')]"
					}
				},
				"connectVia": {
					"referenceName": "alldbgateway",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/alldbgateway')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCMM_DBG_PR1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"DB": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SCMM_DBG_PR1_connectionString')]",
					"userName": "[parameters('SCMM_DBG_PR1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SCMM_DBG_PR1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "alldbgateway",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/alldbgateway')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('STG_connectionString')]",
					"userName": "[parameters('STG_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('STG_password')]"
					}
				},
				"connectVia": {
					"referenceName": "alldbgateway",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/alldbgateway')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/alldbdwh')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('alldbdwh_connectionString')]",
					"userName": "[parameters('alldbdwh_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('alldbdwh_password')]"
					}
				},
				"connectVia": {
					"referenceName": "alldbgateway",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/alldbgateway')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bydatalakqa sa')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('bydatalakqa sa_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dwhdb_blob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('dwhdb_blob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/emerp_lm')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('emerp_lm_connectionString')]",
					"userName": "[parameters('emerp_lm_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('emerp_lm_password')]"
					}
				},
				"connectVia": {
					"referenceName": "alldbgateway",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/alldbgateway')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/emerpdbpr')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "dwh-pr\\emerp",
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('emerpdbpr_connectionString')]",
					"userName": "[parameters('emerpdbpr_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('emerpdbpr_password')]"
					}
				},
				"connectVia": {
					"referenceName": "alldbgateway",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/alldbgateway')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/fileserver1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('fileserver1_properties_typeProperties_host')]",
					"userId": "[parameters('fileserver1_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('fileserver1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "alldbgateway",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/alldbgateway')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('linkedService1_properties_typeProperties_host')]",
					"userId": "[parameters('linkedService1_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('linkedService1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "alldbgateway",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/alldbgateway')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/mlwprdwesa')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('mlwprdwesa_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pu_raw_file_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('pu_raw_file_LS_properties_typeProperties_host')]",
					"userId": "[parameters('pu_raw_file_LS_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('pu_raw_file_LS_password')]"
					}
				},
				"connectVia": {
					"referenceName": "alldbgateway",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/alldbgateway')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Communication Daily')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Communication",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2019-03-07T17:45:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								59
							],
							"hours": [
								3
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Communication')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DWH Calls Daily')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "DWH_Calls",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2019-03-14T18:56:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								50
							],
							"hours": [
								3
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/DWH_Calls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DWH Lead Assignments')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "DWH_Lead_Assignments",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2019-03-16T22:04:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								5
							],
							"hours": [
								4
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/DWH_Lead_Assignments')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FXNET Accounting Daily')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "FXNET_Accounting",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2019-03-12T17:34:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								4
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/FXNET_Accounting')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FXNET Deals Daily')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "FXNET_Deals",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2019-03-13T14:40:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								55
							],
							"hours": [
								3
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/FXNET_Deals')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Reports Logins by Country Daily')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Logins_by_Country",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2019-04-10T11:07:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								9
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Logins_by_Country')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Run Clustering Model Daily')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2019-05-14T08:57:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								10
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger_np9')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "___CopyPipeline_pu_file_AUTO",
							"type": "PipelineReference"
						},
						"parameters": {
							"windowStart": {
								"type": "Expression",
								"value": "[parameters('Trigger_np9_properties____CopyPipeline_pu_file_AUTO_parameters_windowStart')]"
							}
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 1,
						"startTime": "2022-02-28T08:51:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/___CopyPipeline_pu_file_AUTO')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger_zci')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2022-02-28T08:33:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger_zwu')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "_pu_raw_files_sync",
							"type": "PipelineReference"
						},
						"parameters": {
							"windowStart": {
								"type": "Expression",
								"value": "[parameters('Trigger_zwu_properties__pu_raw_files_sync_parameters_windowStart')]"
							},
							"windowEnd": {
								"type": "Expression",
								"value": "[parameters('Trigger_zwu_properties__pu_raw_files_sync_parameters_windowEnd')]"
							}
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 24,
						"startTime": "2022-02-28T12:25:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/_pu_raw_files_sync')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/every_day_run_all_piplines_to_platfrom_usage')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "RUN_ALL_pip_platfrom_usage",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2019-01-20T15:52:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								1
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/RUN_ALL_pip_platfrom_usage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pu_files_load')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "V3_PU_real_time_file_sync",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 2,
						"startTime": "2022-03-31T14:01:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/V3_PU_real_time_file_sync')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/alldbgateway')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/puodsfiles')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "West Europe",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Scmm_Communication_MessageTemplates')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Id_Mng_azure_ETL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT  LastIncrementalDate=DATEADD(MINUTE,65,LastIncrementalDate)   \n  ---- remove to use incremental\n FROM  Mng_data_factory_ETL\n  WHERE TableName='MessageTemplates'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Mng_data_factory_etl",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LK_new_max_id",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT MAX(ContentUpdateDate) FROM emerp_lm.azure.scmm_Communication_MessageTemplates",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SCMM_ALL",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy data to file",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Id_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT * from   EmErp_LM.azure.scmm_Communication_MessageTemplates",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureDatabricksDeltaLakeSink",
								"importSettings": {
									"type": "AzureDatabricksDeltaLakeImportCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "adf_staging_linked_service",
									"type": "LinkedServiceReference"
								},
								"path": "usan-data-lake-fs/adf_staging/Scmm_Communication_MessageTemplates",
								"enableCompression": true
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "MessageTemplateID",
											"type": "Int32"
										},
										"sink": {
											"name": "MessageTemplateID",
											"type": "Int"
										}
									},
									{
										"source": {
											"name": "ContentKey",
											"type": "String"
										},
										"sink": {
											"name": "ContentKey",
											"type": "string"
										}
									},
									{
										"source": {
											"name": "ChannelID",
											"type": "Int32"
										},
										"sink": {
											"name": "ChannelID",
											"type": "Int"
										}
									},
									{
										"source": {
											"name": "Created",
											"type": "DateTime"
										},
										"sink": {
											"name": "Created",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Weight",
											"type": "Byte"
										},
										"sink": {
											"name": "Weight",
											"type": "Int"
										}
									},
									{
										"source": {
											"name": "ContentUpdateDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "ContentUpdateDate",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SCMM_ALL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureDatabricksDelta_DWH",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Data_from_SQL"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Mng_data_factory_etl')]",
				"[concat(variables('factoryId'), '/datasets/SCMM_ALL')]",
				"[concat(variables('factoryId'), '/datasets/AzureDatabricksDelta_DWH')]",
				"[concat(variables('factoryId'), '/linkedServices/adf_staging_linked_service')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCMM_ALL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCMM_DBG_PR1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SCMM_DBG_PR1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricksDelta_DWH')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDatabricksDeltaLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureDatabricksDeltaLakeDataset",
				"typeProperties": {
					"database": "prod_raw",
					"table": "mrr_communication_messagetemplates"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricksDeltaLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_staging_linked_service')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('adf_staging_linked_service_connectionString')]"
				}
			},
			"dependsOn": []
		}
	]
}