{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name",
			"defaultValue": "pudatafactory"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/0000Incremental_SQL_DWH_Copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Id_Mng_azure_ETL",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT  LastIncrementalDate\n FROM  [azure].[Mng_azure_ETL]\n WHERE TableName='Fact_Transactions'"
							},
							"dataset": {
								"referenceName": "Mng_azure_ETL",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "LK_new_max_id",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT ExecutionDate=MAX(ExecutionDate)\n FROM [azure].[AZ_Fact_Transactions]\n"
							},
							"dataset": {
								"referenceName": "Mng_azure_ETL",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Id_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select * from azure.AZ_Fact_Transactions\n where ExecutionDate > '@{activity('LK_Last_Id_Mng_azure_ETL').output.firstRow.LastIncrementalDate}' and ExecutionDate <= '@{activity('LK_new_max_id').output.firstRow.ExecutionDate}'",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "Fact_Transactions",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "blob_Fact_Transactions",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": "Fact_Transactions"
								}
							}
						]
					},
					{
						"name": "update_mng_azure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'azure].[SP_Update_Mng_azure_ETL]')]",
							"storedProcedureParameters": {
								"LastId": {
									"value": "-1",
									"type": "Int64"
								},
								"LastIncrementalDate": {
									"value": {
										"value": "@{activity('LK_new_max_id').output.firstRow.ExecutionDate}",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": "Fact_Transactions",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "alldbdwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "_old"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Mng_azure_ETL')]",
				"[concat(variables('factoryId'), '/datasets/Fact_Transactions')]",
				"[concat(variables('factoryId'), '/datasets/blob_Fact_Transactions')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/01_platfromusage_files_copy_to_blob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_file",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "run_sp_add_new_file_name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "\t  SELECT file_name,\n        folder\n\tFROM azure.platfrom_usage_log_file\n WHERE ISNULL(move_to_blob,0) <>1 \n  \n  IF @@ROWCOUNT=0 THROW 50000 ,'No file to move',1"
							},
							"dataset": {
								"referenceName": "DWH_pu_list_files",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Copy to blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_file",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "Source_file_avi",
								"type": "DatasetReference",
								"parameters": {
									"file_name": {
										"value": "@activity('LK_file').output.firstRow.file_name",
										"type": "Expression"
									},
									"folder": {
										"value": "@substring(activity('LK_file').output.firstRow.FILE_NAME,0,8)",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "platformusage_blob",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": {
										"value": "@concat('platformusage/rawdata/',activity('LK_file').output.firstRow.folder,'/')\n ",
										"type": "Expression"
									},
									"file_name": {
										"value": "@concat(substring(activity('LK_file').output.firstRow.FILE_NAME,0,8),'.zip')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "update_platfrom_usage_log_file",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy to blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'azure].[SP_Update_platfrom_usage_log_file]')]",
							"storedProcedureParameters": {
								"file_name": {
									"value": {
										"value": "@activity('LK_file').output.firstRow.file_name",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "alldbdwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "run_sp_add_new_file_name",
						"type": "SqlServerStoredProcedure",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'azure].[SP_add_new_file_to_table]')]"
						},
						"linkedServiceName": {
							"referenceName": "alldbdwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Platfrom_Usage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DWH_pu_list_files')]",
				"[concat(variables('factoryId'), '/datasets/Source_file_avi')]",
				"[concat(variables('factoryId'), '/datasets/platformusage_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/02_platfromusage_unzip_zip_blob_files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "lookup_file_to_unzip",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "      SELECT file_name,\n        folder,unzip_file\n\tFROM azure.platfrom_usage_log_file\n WHERE ISNULL(unzip_file,0) <>1 AND move_to_blob=1\n  \n  IF @@ROWCOUNT=0 THROW 50000 ,'No file to move',1"
							},
							"dataset": {
								"referenceName": "DWH_pu_list_files",
								"type": "DatasetReference"
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "unzip",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "lookup_file_to_unzip",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink",
								"copyBehavior": "PreserveHierarchy"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "platformusage_blob",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": "@concat('platformusage/rawdata/',activity('lookup_file_to_unzip').output.firstRow.folder,'/')",
									"file_name": "@concat(substring(activity('lookup_file_to_unzip').output.firstRow.FILE_NAME,0,8),'.zip')"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "blob_platfrom_unzip_file",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": "@concat('platformusage/unzip/',activity('lookup_file_to_unzip').output.firstRow.folder,'/')",
									"file_name": "@concat(substring(activity('lookup_file_to_unzip').output.firstRow.FILE_NAME,0,8),'.zip')"
								}
							}
						]
					},
					{
						"name": "update_unzip",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "unzip",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'azure].[SP_Update_platfrom_usage_log_file_unzip]')]",
							"storedProcedureParameters": {
								"file_name": {
									"value": {
										"value": "@activity('lookup_file_to_unzip').output.firstRow.file_name",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "alldbdwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Platfrom_Usage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DWH_pu_list_files')]",
				"[concat(variables('factoryId'), '/datasets/platformusage_blob')]",
				"[concat(variables('factoryId'), '/datasets/blob_platfrom_unzip_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/03_PU_Load_ods_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PU_Load_ods_data",
						"description": "create one daily file from all daily files ",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Lookup_file_to_create",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"notebookPath": "/Load Data/Platform Usage/PU Load ods data",
							"baseParameters": {
								"input_file_path": {
									"value": "@activity('Lookup_file_to_create').output.firstRow.file_name",
									"type": "Expression"
								},
								"ods": "/mnt/dataloadestore/platformusage/ods/",
								"zippath": "/mnt/dataloadestore/platformusage/unzip/",
								"folder_name": {
									"value": "@activity('Lookup_file_to_create').output.firstRow.folder",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_file_to_create",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "   SELECT file_name,\n        folder,daily_file\nFROM azure.platfrom_usage_log_file\nWHERE 1=1\nAND move_to_blob =1 \nAND unzip_file=1\nAND  ISNULL(daily_file,0)<>1\n"
							},
							"dataset": {
								"referenceName": "DWH_pu_list_files",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Update_Create_Daily_File",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "PU_Load_ods_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'azure].[SP_Update_platfrom_usage_log_file_create_daily_file]')]",
							"storedProcedureParameters": {
								"file_name": {
									"value": {
										"value": "@activity('Lookup_file_to_create').output.firstRow.file_name",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "alldbdwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Platfrom_Usage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DWH_pu_list_files')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/04_PU_ods_to_events')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PU PU ods to events raw",
						"type": "DatabricksNotebook",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"notebookPath": "/Load Data/Platform Usage/PU ods to events raw"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Platfrom_Usage"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/Contacts')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Id_Mng_azure_ETL",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT  LastIncrementalDate=LastId \n  ---- remove to use incremental\n FROM  [localdb].[azure].[Mng_azure_ETL]\n  WHERE TableName='Contacts'"
							},
							"dataset": {
								"referenceName": "Mng_azure_ETL",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Id_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "SELECT TOP 100 * from   EmErp_LM.azure.scmm_contacts\n where update_date > CAST(CAST('@{activity('LK_Last_Id_Mng_azure_ETL').output.firstRow.LastIncrementalDate}' AS bigint) AS VARBINARY(8)))\n",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "Contacts",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "Blob_Contacts",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": "Contacts"
								}
							}
						]
					},
					{
						"name": "update_mng_azure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'azure].[SP_Update_Mng_azure_ETL]')]",
							"storedProcedureParameters": {
								"LastId": {
									"value": {
										"value": "  @{activity('LK_new_max_id').output.firstRow.last_id}",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"LastIncrementalDate": {
									"value": "1990-01-01",
									"type": "DateTime"
								},
								"TableName": {
									"value": "Contacts",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "alldbdwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LK_new_max_id",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT last_id= MAX(timeStampINT)\nFROM EmErp_LM.azure.scmm_contacts\n"
							},
							"dataset": {
								"referenceName": "Contacts",
								"type": "DatasetReference"
							}
						}
					}
				],
				"folder": {
					"name": "Data_from_SQL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Mng_azure_ETL')]",
				"[concat(variables('factoryId'), '/datasets/Contacts')]",
				"[concat(variables('factoryId'), '/datasets/Blob_Contacts')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_emerp')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_576",
						"type": "Copy",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Destination",
								"value": "testdata/dspsample.csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "-- test 5\r\nSELECT RAWDB_Id, DynamicSerialParams\r\nFROM emerp_db.dbo.events\r\nWHERE RAWDB_Id IN(\r\n998890442,\r\n998890443,\r\n998890445,\r\n999093755,\r\n999093756,\r\n999094912,\r\n999102165)\r\n"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_576",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "BI_Events_blob",
								"type": "DatasetReference"
							}
						]
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_576')]",
				"[concat(variables('factoryId'), '/datasets/BI_Events_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_emerpdsp')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_emerpdsp",
						"type": "Copy",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Destination",
								"value": "testdata/dat"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "-- test 5\nSELECT RAWDB_Id, DynamicSerialParams\nFROM emerp_db.dbo.events\nWHERE RAWDB_Id IN(\n998890442,\n998890443,\n998890445,\n999093755,\n999093756,\n999094912,\n999102165)\n"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_bvj",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_bvj",
								"type": "DatasetReference"
							}
						]
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_bvj')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_bvj')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_gjq')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_gjq",
						"type": "Copy",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Destination",
								"value": "/fact_account"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "select * from fact_account where actionDay='2018-09-09'"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_gjq",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_opq",
								"type": "DatasetReference"
							}
						]
					}
				],
				"folder": {
					"name": "_old"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_gjq')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_opq')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy_emerp_events')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_tau",
						"type": "Copy",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Destination",
								"value": "emerp-events/ods/events_2017"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "select * from emerp_db.dbo.events\r\nwhere fixed_timestamp <'2008-01-01'"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"redirectIncompatibleRowSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "emerp-events/ods_errors"
							},
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_tau",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "BI_Events_blob",
								"type": "DatasetReference"
							}
						]
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_tau')]",
				"[concat(variables('factoryId'), '/datasets/BI_Events_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Customers')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Id_Mng_azure_ETL",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "\n  \nSELECT  LastIncrementalDate=DATEADD(MINUTE,65,LastIncrementalDate)   \n  ---- remove to use incremental\n FROM  [localdb].[azure].[Mng_azure_ETL]\n  WHERE TableName='Customers'\n"
							},
							"dataset": {
								"referenceName": "Mng_azure_ETL",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "LK_new_max_id",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT ExecutionDate=MAX(SsisUpdatedDate)\n FROM dwh.azure.AZ_Customers\n"
							},
							"dataset": {
								"referenceName": "Mng_azure_ETL",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Id_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select * from  dwh.azure.AZ_Customers\n where SsisUpdatedDate > '@{activity('LK_Last_Id_Mng_azure_ETL').output.firstRow.LastIncrementalDate}' and SsisUpdatedDate<= '@{activity('LK_new_max_id').output.firstRow.ExecutionDate}'",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "Customers",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "blob_Customers",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": "Customers"
								}
							}
						]
					},
					{
						"name": "update_mng_azure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'azure].[SP_Update_Mng_azure_ETL]')]",
							"storedProcedureParameters": {
								"LastId": {
									"value": "-1",
									"type": "Int64"
								},
								"LastIncrementalDate": {
									"value": {
										"value": "@{activity('LK_new_max_id').output.firstRow.ExecutionDate}",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": "Customers",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "alldbdwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Customers",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "update_mng_azure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"notebookPath": "/Process/Infrastructure/Customers"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Data_from_SQL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Mng_azure_ETL')]",
				"[concat(variables('factoryId'), '/datasets/Customers')]",
				"[concat(variables('factoryId'), '/datasets/blob_Customers')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DWH_Calls')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Id_Mng_azure_ETL",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT  LastIncrementalDate \n  ---- remove to use incremental\nFROM  localdb.azure.Mng_azure_ETL\nWHERE TableName='DWH_Calls'"
							},
							"dataset": {
								"referenceName": "Mng_azure_ETL",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "LK_new_max_id",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT executionDay=DATEADD(DAY,-1,MAX(callday))\nFROM dwh.azure.calls"
							},
							"dataset": {
								"referenceName": "Mng_azure_ETL",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Id_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "\nselect * \nFROM dwh.azure.calls\nwhere callday> '@{activity('LK_Last_Id_Mng_azure_ETL').output.firstRow.LastIncrementalDate}' and callday<= '@{activity('LK_new_max_id').output.firstRow.executionDay}'",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"Call_ID": "Call_ID",
									"Call_Details": "Call_Details",
									"CallDay": "CallDay"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dwh_calls_src",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "dwh_calls_blob",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "update_mng_azure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'azure].[SP_Update_Mng_azure_ETL]')]",
							"storedProcedureParameters": {
								"LastId": {
									"value": "-1",
									"type": "Int64"
								},
								"LastIncrementalDate": {
									"value": {
										"value": "@{activity('LK_new_max_id').output.firstRow.ExecutionDay}",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": "DWH_Calls",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "alldbdwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Load_Calls_To_Events",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "update_mng_azure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"notebookPath": "/Load Data/Calls/Load Calls"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Data_from_SQL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Mng_azure_ETL')]",
				"[concat(variables('factoryId'), '/datasets/dwh_calls_src')]",
				"[concat(variables('factoryId'), '/datasets/dwh_calls_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EMERP_Events')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Id_Mng_azure_ETL",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT  LastIncrementalDate=DATEADD(MINUTE,65,LastIncrementalDate)   \n  ---- remove to use incremental\n FROM  localdb.azure.Mng_azure_ETL\n  WHERE TableName='EMERP_DB_Events'"
							},
							"dataset": {
								"referenceName": "Mng_azure_ETL",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "LK_new_max_id",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": " SELECT ExecutionDate=MAX(Event_Date_day)\n FROM EmErp_DB.azure.AZ_EMERP_DB_Events"
							},
							"dataset": {
								"referenceName": "Mng_azure_ETL",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Id_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select * from  EmErp_DB.azure.AZ_EMERP_DB_Events\n where Event_Date_day > '@{activity('LK_Last_Id_Mng_azure_ETL').output.firstRow.LastIncrementalDate}' and Event_Date_day <= '@{activity('LK_new_max_id').output.firstRow.ExecutionDate}'",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "EMERP_DB_Events",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "blob_EMERP_Events",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": "EMERP_Events"
								}
							}
						]
					},
					{
						"name": "update_mng_azure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'azure].[SP_Update_Mng_azure_ETL]')]",
							"storedProcedureParameters": {
								"LastId": {
									"value": "-1",
									"type": "Int64"
								},
								"LastIncrementalDate": {
									"value": {
										"value": "@{activity('LK_new_max_id').output.firstRow.ExecutionDate}",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": "EMERP_DB_Events",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "alldbdwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "EMERP_Events",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "update_mng_azure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"notebookPath": "/Load Data/Emerp Events/EMERP_Events_to_events_table"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Data_from_SQL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Mng_azure_ETL')]",
				"[concat(variables('factoryId'), '/datasets/EMERP_DB_Events')]",
				"[concat(variables('factoryId'), '/datasets/blob_EMERP_Events')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FXNET_Deals')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Id_Mng_azure_ETL",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT  LastIncrementalDate \n  ---- remove to use incremental\nFROM  localdb.azure.Mng_azure_ETL\nWHERE TableName='FXNET_Deals'"
							},
							"dataset": {
								"referenceName": "Mng_azure_ETL",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "LK_new_max_id",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT executionDay=DATEADD(DAY,-1,MAX(executionday))\nFROM dwh.azure.deals"
							},
							"dataset": {
								"referenceName": "Mng_azure_ETL",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Id_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "\nselect * \nFROM dwh.azure.deals\nwhere executionDay > '@{activity('LK_Last_Id_Mng_azure_ETL').output.firstRow.LastIncrementalDate}' and executionDay<= '@{activity('LK_new_max_id').output.firstRow.executionDay}'",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"TransactionNumber": "TransactionNumber",
									"Trans_Details": "Trans_Details",
									"ExecutionDay": "ExecutionDay"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "fxnet_deals_src",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "fxnet_deals_blob",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": "FXNET_Deals"
								}
							}
						]
					},
					{
						"name": "update_mng_azure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'azure].[SP_Update_Mng_azure_ETL]')]",
							"storedProcedureParameters": {
								"LastId": {
									"value": "-1",
									"type": "Int64"
								},
								"LastIncrementalDate": {
									"value": {
										"value": "@{activity('LK_new_max_id').output.firstRow.ExecutionDay}",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": "FXNET_Deals",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "alldbdwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Data_from_SQL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Mng_azure_ETL')]",
				"[concat(variables('factoryId'), '/datasets/fxnet_deals_src')]",
				"[concat(variables('factoryId'), '/datasets/fxnet_deals_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Platfrom_Usage_Log_Collector')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_qai",
						"type": "Copy",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "processed/PlatfromUsagePROD_@{formatDateTime(pipeline().parameters.windowStart,'yyyy')}@{formatDateTime(pipeline().parameters.windowStart,'MM')}@{formatDateTime(pipeline().parameters.windowStart,'dd')}*"
							},
							{
								"name": "Destination",
								"value": "INprocessed/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": false
							},
							"sink": {
								"type": "FileSystemSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_PlatfromUsagePROD",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_qai",
								"type": "DatasetReference"
							}
						]
					}
				],
				"parameters": {
					"windowStart": {
						"type": "String"
					}
				},
				"folder": {
					"name": "_old"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_PlatfromUsagePROD')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_qai')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RUN_ALL_pip_platfrom_usage')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "RUN - 02_platfromusage_unzip_zip_blob_files",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RUN - 01_platfromusage_files_copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"pipeline": {
								"referenceName": "02_platfromusage_unzip_zip_blob_files",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "RUN - 03_PU_Load_ods_data",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RUN - 02_platfromusage_unzip_zip_blob_files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"pipeline": {
								"referenceName": "03_PU_Load_ods_data",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "RUN - Customers",
						"type": "ExecutePipeline",
						"typeProperties": {
							"pipeline": {
								"referenceName": "Customers",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "RUN - 04_PU_ods_to_events",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RUN - 03_PU_Load_ods_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"pipeline": {
								"referenceName": "04_PU_ods_to_events",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "RUN - 01_platfromusage_files_copy_to_blob",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RUN - Customers",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "RUN - Serials",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01_platfromusage_files_copy_to_blob",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "RUN - Serials",
						"type": "ExecutePipeline",
						"typeProperties": {
							"pipeline": {
								"referenceName": "Serials",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/02_platfromusage_unzip_zip_blob_files')]",
				"[concat(variables('factoryId'), '/pipelines/03_PU_Load_ods_data')]",
				"[concat(variables('factoryId'), '/pipelines/Customers')]",
				"[concat(variables('factoryId'), '/pipelines/04_PU_ods_to_events')]",
				"[concat(variables('factoryId'), '/pipelines/01_platfromusage_files_copy_to_blob')]",
				"[concat(variables('factoryId'), '/pipelines/Serials')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Serials Dim')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy_to_sql",
						"type": "Copy",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"Serial": "Serial",
									"Client_Id": "Client_Id",
									"Client_Numerator": "Client_Numerator",
									"Client_Name": "Client_Name",
									"Product_Numerator": "Product_Numerator",
									"Product_Name": "Product_Name",
									"Product_Full_Name": "Product_Full_Name",
									"Campaign_Numerator": "Campaign_Numerator",
									"Campaign_Name": "Campaign_Name",
									"Targetmarket_Id": "Targetmarket_Id",
									"Targetmarket": "Targetmarket",
									"Supplier_Numerator": "Supplier_Numerator",
									"Supplier": "Supplier",
									"Supplier_Group": "Supplier_Group",
									"Mediabuyer_Numerator": "Mediabuyer_Numerator",
									"Mediabuyer": "Mediabuyer",
									"Format": "Format",
									"Site_Numerator": "Site_Numerator",
									"Site_Name": "Site_Name",
									"Proposition_Id": "Proposition_Id",
									"Proposition": "Proposition",
									"Banner_Name": "Banner_Name",
									"Banner_Path": "Banner_Path",
									"TypeExt": "TypeExt",
									"Landing_Page": "Landing_Page",
									"Language": "Language",
									"SelfActivation": "SelfActivation",
									"Content": "Content"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "BI_Serials_blob",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "serials_dim_dwh",
								"type": "DatasetReference"
							}
						]
					}
				],
				"folder": {
					"name": "BI"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/BI_Serials_blob')]",
				"[concat(variables('factoryId'), '/datasets/serials_dim_dwh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Serials')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Id_Mng_azure_ETL",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT  LastIncrementalDate=DATEADD(MINUTE,65,LastIncrementalDate)   \n  ---- remove to use incremental\n FROM  [localdb].[azure].[Mng_azure_ETL]\n  WHERE TableName='Serials'"
							},
							"dataset": {
								"referenceName": "Mng_azure_ETL",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Id_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "serials",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "Blob_Serials",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": "Serials"
								}
							}
						]
					},
					{
						"name": "update_mng_azure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'azure].[SP_Update_Mng_azure_ETL]')]",
							"storedProcedureParameters": {
								"LastId": {
									"value": "-1",
									"type": "Int64"
								},
								"LastIncrementalDate": {
									"value": {
										"value": "@{activity('LK_new_max_id').output.firstRow.ExecutionDate}",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": "Serials",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "alldbdwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LK_new_max_id",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": " SELECT ExecutionDate=MAX(update_date)\n FROM azure.az_serials"
							},
							"dataset": {
								"referenceName": "serials",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Serials",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "update_mng_azure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"notebookPath": "/Load Data/Emerp Events/serials"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Data_from_SQL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Mng_azure_ETL')]",
				"[concat(variables('factoryId'), '/datasets/serials')]",
				"[concat(variables('factoryId'), '/datasets/Blob_Serials')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copypufiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_opq",
						"type": "Copy",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "/"
							},
							{
								"name": "Destination",
								"value": "puods/pulogfile"
							}
						],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink",
								"copyBehavior": "MergeFiles"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_opq",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_opq",
								"type": "DatasetReference"
							}
						]
					}
				],
				"folder": {
					"name": "_old"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_opq')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_opq')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/fact events')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy_to_sql",
						"type": "Copy",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"Event_Date_day": "Event_Date_day",
									"Source": "Source",
									"Event_Name": "Event_Name",
									"Event_Details": "Event_Details",
									"Event_Count": "Event_Count"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "BI_Events_blob",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "fact_events_dwh",
								"type": "DatasetReference"
							}
						]
					}
				],
				"folder": {
					"name": "BI"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/BI_Events_blob')]",
				"[concat(variables('factoryId'), '/datasets/fact_events_dwh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BI_Events_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdb_blob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BI"
				},
				"type": "AzureBlob",
				"structure": [
					{
						"name": "Event_Date_day",
						"type": "DateTime"
					},
					{
						"name": "Source",
						"type": "String"
					},
					{
						"name": "Event_Name",
						"type": "String"
					},
					{
						"name": "Event_Details",
						"type": "String"
					},
					{
						"name": "Event_Count",
						"type": "Int64"
					}
				],
				"typeProperties": {
					"format": {
						"type": "ParquetFormat"
					},
					"fileName": "*.parquet",
					"folderPath": "bi-db/fact_events"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/BI_Serials_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdb_blob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BI"
				},
				"type": "AzureBlob",
				"structure": [
					{
						"name": "Serial",
						"type": "Int64"
					},
					{
						"name": "Client_Id",
						"type": "String"
					},
					{
						"name": "Client_Numerator",
						"type": "Int32"
					},
					{
						"name": "Client_Name",
						"type": "String"
					},
					{
						"name": "Product_Numerator",
						"type": "Int32"
					},
					{
						"name": "Product_Name",
						"type": "String"
					},
					{
						"name": "Product_Full_Name",
						"type": "String"
					},
					{
						"name": "Campaign_Numerator",
						"type": "Int32"
					},
					{
						"name": "Campaign_Name",
						"type": "String"
					},
					{
						"name": "Targetmarket_Id",
						"type": "Int32"
					},
					{
						"name": "Targetmarket",
						"type": "String"
					},
					{
						"name": "Supplier_Numerator",
						"type": "Int32"
					},
					{
						"name": "Supplier",
						"type": "String"
					},
					{
						"name": "Supplier_Group",
						"type": "String"
					},
					{
						"name": "Mediabuyer_Numerator",
						"type": "Int32"
					},
					{
						"name": "Mediabuyer",
						"type": "String"
					},
					{
						"name": "Format",
						"type": "String"
					},
					{
						"name": "Site_Numerator",
						"type": "Int32"
					},
					{
						"name": "Site_Name",
						"type": "String"
					},
					{
						"name": "Proposition_Id",
						"type": "Int32"
					},
					{
						"name": "Proposition",
						"type": "String"
					},
					{
						"name": "Banner_Name",
						"type": "String"
					},
					{
						"name": "Banner_Path",
						"type": "String"
					},
					{
						"name": "TypeExt",
						"type": "String"
					},
					{
						"name": "Landing_Page",
						"type": "String"
					},
					{
						"name": "Language",
						"type": "String"
					},
					{
						"name": "SelfActivation",
						"type": "Int32"
					},
					{
						"name": "Content",
						"type": "String"
					},
					{
						"name": "Charge_Unit_Id",
						"type": "Int32"
					},
					{
						"name": "Charge_Unit_Name",
						"type": "String"
					},
					{
						"name": "Landing_Page_Numerator",
						"type": "Int32"
					},
					{
						"name": "Creative_Logical_Name",
						"type": "String"
					},
					{
						"name": "serial_details",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "ParquetFormat"
					},
					"fileName": "*.parquet",
					"folderPath": "bi-db/dim_serials"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob_Contacts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_name": {
						"type": "String",
						"defaultValue": "Dim_AccountContacts"
					}
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "\u0001",
						"rowDelimiter": "\n",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": {
						"value": "@CONCAT('Contacts_', pipeline().RunId, '.csv')",
						"type": "Expression"
					},
					"folderPath": "rawdata/Contacts"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob_Serials')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_name": {
						"type": "String",
						"defaultValue": "Dim_AccountContacts"
					}
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "\u0001",
						"rowDelimiter": "\n",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": {
						"value": "@CONCAT('Serials', pipeline().RunId, '.csv')",
						"type": "Expression"
					},
					"folderPath": "rawdata/Serials"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/Contacts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Dwhpr",
					"type": "LinkedServiceReference"
				},
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "RAWDB_Id",
						"type": "Int64"
					},
					{
						"name": "datails",
						"type": "String"
					},
					{
						"name": "Fixed_Timestamp",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "EmErp_LM.azure.scmm_contacts"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/Customers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "alldbdwh",
					"type": "LinkedServiceReference"
				},
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "AccountNumber",
						"type": "Int32"
					},
					{
						"name": "datails",
						"type": "String"
					},
					{
						"name": "SsisUpdatedDate",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "dwh.azure.AZ_Customers"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/DWH_pu_list_files')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "alldbdwh",
					"type": "LinkedServiceReference"
				},
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "TransactionNumber",
						"type": "Int32"
					},
					{
						"name": "PositionNumber",
						"type": "Int32"
					},
					{
						"name": "AccountNumber",
						"type": "Int32"
					},
					{
						"name": "CustomerHistory_ID",
						"type": "Int32"
					},
					{
						"name": "CustomersExtendedHistory_ID",
						"type": "Int32"
					},
					{
						"name": "DealAttirbute_ID",
						"type": "Int16"
					},
					{
						"name": "Instrument_ID",
						"type": "Int32"
					},
					{
						"name": "TransactionType_ID",
						"type": "Int16"
					},
					{
						"name": "Direction_ID",
						"type": "Int16"
					},
					{
						"name": "Source_ID",
						"type": "Int16"
					},
					{
						"name": "DealType_ID",
						"type": "Int16"
					},
					{
						"name": "ExecutionDate",
						"type": "DateTime"
					},
					{
						"name": "ExecutionDay",
						"type": "DateTime"
					},
					{
						"name": "ExecutionTime",
						"type": "TimeSpan"
					},
					{
						"name": "TransactionCloseDate",
						"type": "DateTime"
					},
					{
						"name": "ValueDate",
						"type": "DateTime"
					},
					{
						"name": "ValueDay",
						"type": "DateTime"
					},
					{
						"name": "BaseAmount",
						"type": "Decimal"
					},
					{
						"name": "OtherAmount",
						"type": "Decimal"
					},
					{
						"name": "SpotRate",
						"type": "Decimal"
					},
					{
						"name": "ForwardPips",
						"type": "Double"
					},
					{
						"name": "TotRate",
						"type": "Decimal"
					},
					{
						"name": "Volume_USD",
						"type": "Decimal"
					},
					{
						"name": "ServerRate",
						"type": "Decimal"
					},
					{
						"name": "OtherServerRate",
						"type": "Decimal"
					},
					{
						"name": "ExecutedLimit",
						"type": "Int16"
					},
					{
						"name": "PL",
						"type": "Decimal"
					},
					{
						"name": "IsFirstBOP",
						"type": "Boolean"
					},
					{
						"name": "IsFirstForex",
						"type": "Boolean"
					},
					{
						"name": "IsFirstDeal",
						"type": "Boolean"
					},
					{
						"name": "Deleted",
						"type": "Boolean"
					},
					{
						"name": "PositionClosed",
						"type": "Int16"
					},
					{
						"name": "DealPL_USD",
						"type": "Decimal"
					},
					{
						"name": "PL_SymbolId",
						"type": "Int16"
					},
					{
						"name": "AccountBasesymbolId",
						"type": "Int16"
					},
					{
						"name": "EtlUpdatedDate",
						"type": "DateTime"
					},
					{
						"name": "SpreadCost",
						"type": "Decimal"
					},
					{
						"name": "Folder_ID",
						"type": "Int16"
					},
					{
						"name": "Broker_ID",
						"type": "Int32"
					},
					{
						"name": "AccountNumber_modo",
						"type": "Int32"
					},
					{
						"name": "PositionNumber_modo",
						"type": "Int32"
					},
					{
						"name": "PL_AccountBase",
						"type": "Decimal"
					},
					{
						"name": "Customer_Favor_Rate_diff",
						"type": "Decimal"
					},
					{
						"name": "Channel_Bucket_ID",
						"type": "Int32"
					},
					{
						"name": "Sessions_ID",
						"type": "Int64"
					},
					{
						"name": "DealCountTotal",
						"type": "Int32"
					},
					{
						"name": "Retention_ID",
						"type": "Int16"
					},
					{
						"name": "ConversionRate",
						"type": "Decimal"
					},
					{
						"name": "CommissionInAccountBase",
						"type": "Decimal"
					},
					{
						"name": "SpreadCostInAccountBase",
						"type": "Decimal"
					},
					{
						"name": "RolloverSpreadCostInAccountBase",
						"type": "Decimal"
					},
					{
						"name": "CommissionInOther",
						"type": "Decimal"
					},
					{
						"name": "SpreadCostInOther",
						"type": "Decimal"
					},
					{
						"name": "RolloverSpreadCostInOther",
						"type": "Decimal"
					}
				],
				"typeProperties": {
					"tableName": "[concat('[', 'azure].[platfrom_usage_log_file]')]"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_bvj')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage2",
					"type": "LinkedServiceReference"
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": "datadsp",
					"folderPath": "testdata"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_gjq')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "pufiles",
					"type": "LinkedServiceReference"
				},
				"type": "FileShare",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"compression": {
						"type": "GZip",
						"level": "Optimal"
					},
					"fileName": "fact_account",
					"folderPath": ""
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_opq')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "destpufiles",
					"type": "LinkedServiceReference"
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": "pulogfile",
					"folderPath": "puods"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_qai')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Events_Collector_PlatfromUsage_log",
					"type": "LinkedServiceReference"
				},
				"type": "FileShare",
				"typeProperties": {
					"folderPath": "INprocessed"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationFilesBlobStore1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your destination Azure Blob Store.",
				"linkedServiceName": {
					"referenceName": "cliotestingstore",
					"type": "LinkedServiceReference"
				},
				"type": "AzureBlob",
				"typeProperties": {
					"fileName": "",
					"folderPath": "sinkdata/staged_sink"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dim_AccountContacts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "alldbdwh",
					"type": "LinkedServiceReference"
				},
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "AccountNumber",
						"type": "Int32"
					},
					{
						"name": "ContactID",
						"type": "Int64"
					},
					{
						"name": "LastUpdate",
						"type": "DateTime"
					},
					{
						"name": "SsisUpdatedDate",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "dwh.azure.AZ_Dim_AccountContacts"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/EMERP_DB_Events')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "alldbdwh",
					"type": "LinkedServiceReference"
				},
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "RAWDB_Id",
						"type": "Int64"
					},
					{
						"name": "datails",
						"type": "String"
					},
					{
						"name": "Fixed_Timestamp",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "emerp_db.azure.AZ_EMERP_DB_Events"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/Fact_Transactions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "alldbdwh",
					"type": "LinkedServiceReference"
				},
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "TransactionNumber",
						"type": "Int32"
					},
					{
						"name": "PositionNumber",
						"type": "Int32"
					},
					{
						"name": "AccountNumber",
						"type": "Int32"
					},
					{
						"name": "CustomerHistory_ID",
						"type": "Int32"
					},
					{
						"name": "CustomersExtendedHistory_ID",
						"type": "Int32"
					},
					{
						"name": "DealAttirbute_ID",
						"type": "Int16"
					},
					{
						"name": "Instrument_ID",
						"type": "Int32"
					},
					{
						"name": "TransactionType_ID",
						"type": "Int16"
					},
					{
						"name": "Direction_ID",
						"type": "Int16"
					},
					{
						"name": "Source_ID",
						"type": "Int16"
					},
					{
						"name": "DealType_ID",
						"type": "Int16"
					},
					{
						"name": "ExecutionDate",
						"type": "DateTime"
					},
					{
						"name": "ExecutionDay",
						"type": "DateTime"
					},
					{
						"name": "ExecutionTime",
						"type": "TimeSpan"
					},
					{
						"name": "TransactionCloseDate",
						"type": "DateTime"
					},
					{
						"name": "ValueDate",
						"type": "DateTime"
					},
					{
						"name": "ValueDay",
						"type": "DateTime"
					},
					{
						"name": "BaseAmount",
						"type": "Decimal"
					},
					{
						"name": "OtherAmount",
						"type": "Decimal"
					},
					{
						"name": "SpotRate",
						"type": "Decimal"
					},
					{
						"name": "ForwardPips",
						"type": "Double"
					},
					{
						"name": "TotRate",
						"type": "Decimal"
					},
					{
						"name": "Volume_USD",
						"type": "Decimal"
					},
					{
						"name": "ServerRate",
						"type": "Decimal"
					},
					{
						"name": "OtherServerRate",
						"type": "Decimal"
					},
					{
						"name": "ExecutedLimit",
						"type": "Int16"
					},
					{
						"name": "PL",
						"type": "Decimal"
					},
					{
						"name": "IsFirstBOP",
						"type": "Boolean"
					},
					{
						"name": "IsFirstForex",
						"type": "Boolean"
					},
					{
						"name": "IsFirstDeal",
						"type": "Boolean"
					},
					{
						"name": "Deleted",
						"type": "Boolean"
					},
					{
						"name": "PositionClosed",
						"type": "Int16"
					},
					{
						"name": "DealPL_USD",
						"type": "Decimal"
					},
					{
						"name": "PL_SymbolId",
						"type": "Int16"
					},
					{
						"name": "AccountBasesymbolId",
						"type": "Int16"
					},
					{
						"name": "EtlUpdatedDate",
						"type": "DateTime"
					},
					{
						"name": "SpreadCost",
						"type": "Decimal"
					},
					{
						"name": "Folder_ID",
						"type": "Int16"
					},
					{
						"name": "Broker_ID",
						"type": "Int32"
					},
					{
						"name": "AccountNumber_modo",
						"type": "Int32"
					},
					{
						"name": "PositionNumber_modo",
						"type": "Int32"
					},
					{
						"name": "PL_AccountBase",
						"type": "Decimal"
					},
					{
						"name": "Customer_Favor_Rate_diff",
						"type": "Decimal"
					},
					{
						"name": "Channel_Bucket_ID",
						"type": "Int32"
					},
					{
						"name": "Sessions_ID",
						"type": "Int64"
					},
					{
						"name": "DealCountTotal",
						"type": "Int32"
					},
					{
						"name": "Retention_ID",
						"type": "Int16"
					},
					{
						"name": "ConversionRate",
						"type": "Decimal"
					},
					{
						"name": "CommissionInAccountBase",
						"type": "Decimal"
					},
					{
						"name": "SpreadCostInAccountBase",
						"type": "Decimal"
					},
					{
						"name": "RolloverSpreadCostInAccountBase",
						"type": "Decimal"
					},
					{
						"name": "CommissionInOther",
						"type": "Decimal"
					},
					{
						"name": "SpreadCostInOther",
						"type": "Decimal"
					},
					{
						"name": "RolloverSpreadCostInOther",
						"type": "Decimal"
					}
				],
				"typeProperties": {
					"tableName": "[concat('[', 'azure].[AZ_Fact_Transactions]')]"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/Mng_azure_ETL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "alldbdwh",
					"type": "LinkedServiceReference"
				},
				"type": "SqlServerTable",
				"typeProperties": {
					"tableName": "[concat('[', 'azure].[Mng_azure_ETL]')]"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceAvailabilityBlobStore1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Dataset to check if '_success' flag/ file is available in source. If not, then the activity fails, letting you know that source dataset is not ready.\nContext: In Spark/ Hadoop environments, generally users leverage flags to identify if the data has been correctly written through the distributed compute engines. E.g. '_success' defines all nodes have successfully written the data.",
				"linkedServiceName": {
					"referenceName": "DataloadStore",
					"type": "LinkedServiceReference"
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": "_success",
					"folderPath": "data/source"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_576')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "alldbdwh",
					"type": "LinkedServiceReference"
				},
				"type": "SqlServerTable"
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_PlatfromUsagePROD')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Events_Collector_PlatfromUsage_log",
					"type": "LinkedServiceReference"
				},
				"type": "FileShare",
				"typeProperties": {
					"folderPath": "processed"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_bvj')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "alldbdwh",
					"type": "LinkedServiceReference"
				},
				"type": "SqlServerTable"
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_gjq')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "alldbdwh",
					"type": "LinkedServiceReference"
				},
				"type": "SqlServerTable"
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_opq')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "pufiles",
					"type": "LinkedServiceReference"
				},
				"type": "FileShare",
				"structure": [
					{
						"name": "ip",
						"type": "String"
					},
					{
						"name": "f1",
						"type": "String"
					},
					{
						"name": "f2",
						"type": "String"
					},
					{
						"name": "datetime",
						"type": "String"
					},
					{
						"name": "timeoffset",
						"type": "String"
					},
					{
						"name": "urlstring",
						"type": "String"
					},
					{
						"name": "response",
						"type": "String"
					},
					{
						"name": "rc",
						"type": "String"
					},
					{
						"name": "url2",
						"type": "String"
					},
					{
						"name": "appsettings",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": " ",
						"rowDelimiter": "\n",
						"quoteChar": "\"",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"folderPath": ""
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_tau')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "alldbdwh",
					"type": "LinkedServiceReference"
				},
				"type": "SqlServerTable"
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceFilesBlobStore1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your source files in Azure Blob Store.",
				"linkedServiceName": {
					"referenceName": "DataloadStore",
					"type": "LinkedServiceReference"
				},
				"type": "AzureBlob",
				"typeProperties": {
					"fileName": "Product.csv",
					"folderPath": "data/source"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_file_avi')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "fileserver1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"file_name": {
						"type": "String"
					},
					"folder": {
						"type": "String"
					}
				},
				"type": "FileShare",
				"typeProperties": {
					"compression": {
						"type": "ZipDeflate",
						"level": "Optimal"
					},
					"fileName": {
						"value": "@dataset().file_name",
						"type": "Expression"
					},
					"folderPath": {
						"value": "@dataset().folder",
						"type": "Expression"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_Customers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_name": {
						"type": "String",
						"defaultValue": "Dim_AccountContacts"
					}
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": {
						"value": "@CONCAT('Customers_', pipeline().RunId, '.csv')",
						"type": "Expression"
					},
					"folderPath": "rawdata/Customers"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_EMERP_Events')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_name": {
						"type": "String",
						"defaultValue": "EMERP_Events"
					}
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "\u0001",
						"rowDelimiter": "\n",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": {
						"value": "@CONCAT('EMERP_Events', pipeline().RunId, '.csv')",
						"type": "Expression"
					},
					"folderPath": "rawdata/EMERP_Events"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_Fact_Transactions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_name": {
						"type": "String",
						"defaultValue": "Fact_Transactions"
					}
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": {
						"value": "@CONCAT('test_pu-', pipeline().RunId, '.txt')",
						"type": "Expression"
					},
					"folderPath": "rawdata/Fact_Transactions"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_platfrom_merge_file_des')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"file_name": {
						"type": "String"
					}
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": " ",
						"rowDelimiter": "\n",
						"quoteChar": "\"",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": {
						"value": "@dataset().file_name",
						"type": "Expression"
					},
					"folderPath": "rawdata/platfrom_merged_by_day"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_platfrom_unzip_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_name": {
						"type": "String"
					},
					"file_name": {
						"type": "String"
					}
				},
				"type": "AzureBlob",
				"structure": [
					{
						"name": "ip",
						"type": "String"
					},
					{
						"name": "hyphen_1",
						"type": "String"
					},
					{
						"name": "hyphen_2",
						"type": "String"
					},
					{
						"name": "datetime",
						"type": "String"
					},
					{
						"name": "time",
						"type": "String"
					},
					{
						"name": "url_parm",
						"type": "String"
					},
					{
						"name": "Prop_6",
						"type": "String"
					},
					{
						"name": "Prop_7",
						"type": "String"
					},
					{
						"name": "server",
						"type": "String"
					},
					{
						"name": "user_agent",
						"type": "String"
					},
					{
						"name": "log_parm",
						"type": "String"
					}
				],
				"typeProperties": {
					"folderPath": {
						"value": "@dataset().folder_name",
						"type": "Expression"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_platfrom_unzip_file_1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_name": {
						"type": "String"
					},
					"file_name": {
						"type": "String"
					}
				},
				"type": "AzureBlob",
				"structure": [
					{
						"name": "ip",
						"type": "String"
					},
					{
						"name": "hyphen_1",
						"type": "String"
					},
					{
						"name": "hyphen_2",
						"type": "String"
					},
					{
						"name": "datetime",
						"type": "String"
					},
					{
						"name": "time",
						"type": "String"
					},
					{
						"name": "url_parm",
						"type": "String"
					},
					{
						"name": "Prop_6",
						"type": "String"
					},
					{
						"name": "Prop_7",
						"type": "String"
					},
					{
						"name": "server",
						"type": "String"
					},
					{
						"name": "user_agent",
						"type": "String"
					},
					{
						"name": "log_parm",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": " ",
						"rowDelimiter": "\n",
						"quoteChar": "\"",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": {
						"value": "@dataset().file_name",
						"type": "Expression"
					},
					"folderPath": {
						"value": "@dataset().folder_name",
						"type": "Expression"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/checkin_test')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdb_blob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BI"
				},
				"type": "AzureBlob",
				"structure": [
					{
						"name": "Event_Date_day",
						"type": "DateTime"
					},
					{
						"name": "Source",
						"type": "String"
					},
					{
						"name": "Event_Name",
						"type": "String"
					},
					{
						"name": "Event_Details",
						"type": "String"
					},
					{
						"name": "Event_Count",
						"type": "Int64"
					}
				],
				"typeProperties": {
					"format": {
						"type": "ParquetFormat"
					},
					"fileName": "*.parquet",
					"folderPath": "bi-db/fact_events"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/dwh_calls_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataloadStore",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"type": "AzureBlob",
				"structure": [
					{
						"name": "Call_ID",
						"type": "Int32"
					},
					{
						"name": "Call_Details",
						"type": "String"
					},
					{
						"name": "CallDay",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "\t",
						"rowDelimiter": "",
						"quoteChar": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"compression": {
						"type": "BZip2"
					},
					"fileName": {
						"value": "@CONCAT('Calls_', pipeline().TriggerTime, '.csv.bz2')",
						"type": "Expression"
					},
					"folderPath": {
						"value": "@concat('rawdata/DWH_Calls/received=',utcnow())",
						"type": "Expression"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/dwh_calls_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "alldbdwh",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "Call_ID",
						"type": "Int32"
					},
					{
						"name": "Call_Details",
						"type": "String"
					},
					{
						"name": "CallDay",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "dwh.azure.calls"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/fact_events_dwh')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_dwh",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BI"
				},
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "Event_Date_day",
						"type": "DateTime"
					},
					{
						"name": "Source",
						"type": "String"
					},
					{
						"name": "Event_Name",
						"type": "String"
					},
					{
						"name": "Event_Details",
						"type": "String"
					},
					{
						"name": "Event_Count",
						"type": "Int64"
					}
				],
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[fact_events]')]"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/fxnet_deals_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_name": {
						"type": "String",
						"defaultValue": "EMERP_Events"
					}
				},
				"type": "AzureBlob",
				"structure": [
					{
						"name": "TransactionNumber",
						"type": "String"
					},
					{
						"name": "Trans_Details",
						"type": "String"
					},
					{
						"name": "ExecutionDay",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "\t",
						"rowDelimiter": "",
						"quoteChar": "\"",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"compression": {
						"type": "BZip2"
					},
					"fileName": {
						"value": "@CONCAT('FXNET_Deals', pipeline().RunId, '.csv')",
						"type": "Expression"
					},
					"folderPath": "rawdata/FXNET_Deals/received=2018-01-01"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/fxnet_deals_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "alldbdwh",
					"type": "LinkedServiceReference"
				},
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "TransactionNumber",
						"type": "Int32"
					},
					{
						"name": "Trans_Details",
						"type": "String"
					},
					{
						"name": "ExecutionDay",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "dwh.azure.deals"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/platformusage_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_name": {
						"type": "String"
					},
					"file_name": {
						"type": "String"
					}
				},
				"type": "AzureBlob",
				"typeProperties": {
					"compression": {
						"type": "ZipDeflate",
						"level": "Optimal"
					},
					"fileName": {
						"value": "@dataset().file_name",
						"type": "Expression"
					},
					"folderPath": {
						"value": "@dataset().folder_name",
						"type": "Expression"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/serials')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "emerpdbpr",
					"type": "LinkedServiceReference"
				},
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "Serial",
						"type": "Int64"
					},
					{
						"name": "serial_details",
						"type": "String"
					},
					{
						"name": "update_date",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "azure.az_serials"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/serials_dim_dwh')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_dwh",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BI"
				},
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "Serial",
						"type": "Int64"
					},
					{
						"name": "Client_Id",
						"type": "String"
					},
					{
						"name": "Client_Numerator",
						"type": "Int32"
					},
					{
						"name": "Client_Name",
						"type": "String"
					},
					{
						"name": "Product_Numerator",
						"type": "Int32"
					},
					{
						"name": "Product_Name",
						"type": "String"
					},
					{
						"name": "Product_Full_Name",
						"type": "String"
					},
					{
						"name": "Campaign_Numerator",
						"type": "Int32"
					},
					{
						"name": "Campaign_Name",
						"type": "String"
					},
					{
						"name": "Targetmarket_Id",
						"type": "Int32"
					},
					{
						"name": "Targetmarket",
						"type": "String"
					},
					{
						"name": "Supplier_Numerator",
						"type": "Int32"
					},
					{
						"name": "Supplier",
						"type": "String"
					},
					{
						"name": "Supplier_Group",
						"type": "String"
					},
					{
						"name": "Mediabuyer_Numerator",
						"type": "Int32"
					},
					{
						"name": "Mediabuyer",
						"type": "String"
					},
					{
						"name": "Format",
						"type": "String"
					},
					{
						"name": "Site_Numerator",
						"type": "Int32"
					},
					{
						"name": "Site_Name",
						"type": "String"
					},
					{
						"name": "Proposition_Id",
						"type": "Int32"
					},
					{
						"name": "Proposition",
						"type": "String"
					},
					{
						"name": "Banner_Name",
						"type": "String"
					},
					{
						"name": "Banner_Path",
						"type": "String"
					},
					{
						"name": "TypeExt",
						"type": "String"
					},
					{
						"name": "Landing_Page",
						"type": "String"
					},
					{
						"name": "Language",
						"type": "String"
					},
					{
						"name": "SelfActivation",
						"type": "Int32"
					},
					{
						"name": "Content",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[dim_serials]')]"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/unzip_platfrom_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"compression": {
						"type": "ZipDeflate"
					},
					"fileName": "",
					"folderPath": "platformusage/rawdata/201810"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/DWH_Calls_Daily_Load')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "DWH_Calls",
							"type": "PipelineReference"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2019-02-18T07:00:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/DWH_Calls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FXNET_Deals_Daily_Load')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "FXNET_Deals",
							"type": "PipelineReference"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2019-02-10T07:00:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								7
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/FXNET_Deals')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/every_day_run_all_piplines_to_platfrom_usage')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "RUN_ALL_pip_platfrom_usage",
							"type": "PipelineReference"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2019-01-20T15:52:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								5
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/RUN_ALL_pip_platfrom_usage')]"
			]
		}
	]
}