{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name",
			"defaultValue": "puDataFactory"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/01_platfromusage_files_copy_to_blob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_file",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "run_sp_add_new_file_name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "\t  SELECT file_name,\n        folder\n\tFROM azure.platfrom_usage_log_file\n WHERE ISNULL(move_to_blob,0) <>1 \n  \n  IF @@ROWCOUNT=0 THROW 50000 ,'No file to move',1"
							},
							"dataset": {
								"referenceName": "DWH_pu_list_files",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Copy to blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_file",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "Source_file_avi",
								"type": "DatasetReference",
								"parameters": {
									"file_name": {
										"value": "@activity('LK_file').output.firstRow.file_name",
										"type": "Expression"
									},
									"folder": {
										"value": "@substring(activity('LK_file').output.firstRow.FILE_NAME,0,8)",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "platformusage_blob",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": {
										"value": "@concat('platformusage/rawdata/',activity('LK_file').output.firstRow.folder,'/')\n ",
										"type": "Expression"
									},
									"file_name": {
										"value": "@concat(substring(activity('LK_file').output.firstRow.FILE_NAME,0,8),'.zip')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "update_platfrom_usage_log_file",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy to blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"storedProcedureName": "[[azure].[SP_Update_platfrom_usage_log_file]",
							"storedProcedureParameters": {
								"file_name": {
									"value": {
										"value": "@activity('LK_file').output.firstRow.file_name",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "alldbdwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "run_sp_add_new_file_name",
						"type": "SqlServerStoredProcedure",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"storedProcedureName": "[[azure].[SP_add_new_file_to_table]"
						},
						"linkedServiceName": {
							"referenceName": "alldbdwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Platfrom_Usage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DWH_pu_list_files')]",
				"[concat(variables('factoryId'), '/datasets/Source_file_avi')]",
				"[concat(variables('factoryId'), '/datasets/platformusage_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/02_platfromusage_unzip_zip_blob_files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "lookup_file_to_unzip",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "      SELECT file_name,\n        folder,unzip_file\n\tFROM azure.platfrom_usage_log_file\n WHERE ISNULL(unzip_file,0) <>1 AND move_to_blob=1\n  \n  IF @@ROWCOUNT=0 THROW 50000 ,'No file to move',1"
							},
							"dataset": {
								"referenceName": "DWH_pu_list_files",
								"type": "DatasetReference"
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "unzip",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "lookup_file_to_unzip",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink",
								"copyBehavior": "PreserveHierarchy"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "platformusage_blob",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": "@concat('platformusage/rawdata/',activity('lookup_file_to_unzip').output.firstRow.folder,'/')",
									"file_name": "@concat(substring(activity('lookup_file_to_unzip').output.firstRow.FILE_NAME,0,8),'.zip')"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "blob_platfrom_unzip_file",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": "@concat('platformusage/unzip/',activity('lookup_file_to_unzip').output.firstRow.folder,'/')",
									"file_name": "@concat(substring(activity('lookup_file_to_unzip').output.firstRow.FILE_NAME,0,8),'.zip')"
								}
							}
						]
					},
					{
						"name": "update_unzip",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "unzip",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"storedProcedureName": "[[azure].[SP_Update_platfrom_usage_log_file_unzip]",
							"storedProcedureParameters": {
								"file_name": {
									"value": {
										"value": "@activity('lookup_file_to_unzip').output.firstRow.file_name",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "alldbdwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Platfrom_Usage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DWH_pu_list_files')]",
				"[concat(variables('factoryId'), '/datasets/platformusage_blob')]",
				"[concat(variables('factoryId'), '/datasets/blob_platfrom_unzip_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/03_PU_Load_ods_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PU_Load_ods_data",
						"description": "create one daily file from all daily files ",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Lookup_file_to_create",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"notebookPath": "/Load Data/Platform Usage/PU Load ods data",
							"baseParameters": {
								"input_file_path": {
									"value": "@activity('Lookup_file_to_create').output.firstRow.file_name",
									"type": "Expression"
								},
								"ods": "/mnt/dataloadestore/platformusage/ods/",
								"zippath": "/mnt/dataloadestore/platformusage/unzip/",
								"folder_name": {
									"value": "@activity('Lookup_file_to_create').output.firstRow.folder",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_file_to_create",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "   SELECT file_name,\n        folder,daily_file\nFROM azure.platfrom_usage_log_file\nWHERE 1=1\nAND move_to_blob =1 \nAND unzip_file=1\nAND  ISNULL(daily_file,0)<>1\n"
							},
							"dataset": {
								"referenceName": "DWH_pu_list_files",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Update_Create_Daily_File",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "PU_Load_ods_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"storedProcedureName": "[[azure].[SP_Update_platfrom_usage_log_file_create_daily_file]",
							"storedProcedureParameters": {
								"file_name": {
									"value": {
										"value": "@activity('Lookup_file_to_create').output.firstRow.file_name",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "alldbdwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Platfrom_Usage"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DWH_pu_list_files')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/04_PU_ods_to_events')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PU PU ods to events raw",
						"type": "DatabricksNotebook",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"notebookPath": "/Load Data/Platform Usage/PU ods to events raw"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Platfrom_Usage"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/2 day 01 - Get_Customers_List_For_Model')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "run Get Customers List For Model",
						"type": "DatabricksNotebook",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"notebookPath": "/Analysis/Clustering/10. Customers 2 Days -  10. Get Customers List For Model"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Dm_Models"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/2 day 02 - Get Data For Model')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2 Days 11  Get Data For Model",
						"type": "DatabricksNotebook",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"notebookPath": "/Analysis/Clustering/10. Customers 2 Days -  11. Get Data For Model"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Dm_Models"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/2 day 03 - Execute Model')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Customers 2 Days  12 Execute Model",
						"type": "DatabricksNotebook",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"notebookPath": "/Analysis/Clustering/10. Customers 2 Days - 12. Execute Model"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Dm_Models"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/Communication')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Date_Mng_azure_ETL",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "AzureTableSource",
								"azureTableSourceQuery": "PartitionKey eq 'Upload Data' and RowKey eq 'Communication'",
								"azureTableSourceIgnoreTableNotFound": false
							},
							"dataset": {
								"referenceName": "etl_manage",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "LK_new_max_date",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": " SELECT Last_Event_Date = MAX(Event_Date)\nFROM EMERP_LM.azure.AZ_Communication\nWHERE Event_Date < CAST(GETDATE() AS DATE)"
							},
							"dataset": {
								"referenceName": "Communication_src",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Date_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select * \nFROM EMERP_LM.azure.AZ_Communication\nwhere Event_Date > '@{activity('LK_Last_Date_Mng_azure_ETL').output.value[0].Last_Incremental_Date}' and Event_Date <= '@{activity('LK_new_max_date').output.firstRow.Last_Event_Date}'",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"MessageID": "MessageID",
									"Event_Date": "Event_Date",
									"details": "details"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Communication_src",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "Communication_blob",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Update Manage Table",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MergeTableStore",
								"type": "PipelineReference"
							},
							"parameters": {
								"PartitionKey": "Upload Data",
								"RowKey": "Communication",
								"PropertyName": "Last_Incremental_Date",
								"PropertyValue": {
									"value": "@activity('LK_new_max_date').output.firstRow.Last_Event_Date",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load Communication to Events",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Update Manage Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"notebookPath": "/Load Data/Digital Communication/Load Communication"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Data_from_SQL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/etl_manage')]",
				"[concat(variables('factoryId'), '/datasets/Communication_src')]",
				"[concat(variables('factoryId'), '/datasets/Communication_blob')]",
				"[concat(variables('factoryId'), '/pipelines/MergeTableStore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Contacts')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Id_Mng_azure_ETL",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT  LastIncrementalDate=LastId \n  ---- remove to use incremental\n FROM  [localdb].[azure].[Mng_azure_ETL]\n  WHERE TableName='Contacts'"
							},
							"dataset": {
								"referenceName": "Mng_azure_ETL",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Id_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * from   EmErp_LM.azure.scmm_contacts\n where update_date > CAST(CAST('@{activity('LK_Last_Id_Mng_azure_ETL').output.firstRow.LastIncrementalDate}' AS bigint) AS VARBINARY(8))\n",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "Contacts",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "Blob_Contacts",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": "Contacts"
								}
							}
						]
					},
					{
						"name": "update_mng_azure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"storedProcedureName": "[[azure].[SP_Update_Mng_azure_ETL]",
							"storedProcedureParameters": {
								"LastId": {
									"value": {
										"value": "@{activity('LK_new_max_id').output.firstRow.last_id}",
										"type": "Expression"
									},
									"type": "Int64"
								},
								"LastIncrementalDate": {
									"value": "1990-01-01",
									"type": "DateTime"
								},
								"TableName": {
									"value": "Contacts",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "alldbdwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LK_new_max_id",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT last_id= MAX(timeStampINT)\nFROM EmErp_LM.azure.scmm_contacts\n"
							},
							"dataset": {
								"referenceName": "Contacts",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Contacts",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "update_mng_azure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"notebookPath": "/Load Data/Dimensions/contacts"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Data_from_SQL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Mng_azure_ETL')]",
				"[concat(variables('factoryId'), '/datasets/Contacts')]",
				"[concat(variables('factoryId'), '/datasets/Blob_Contacts')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Customer_Questionnaires')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Date_Mng_azure_ETL",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "AzureTableSource",
								"azureTableSourceQuery": {
									"value": "PartitionKey eq 'Upload Data' and RowKey eq '@{variables('Table_Name')}'",
									"type": "Expression"
								},
								"azureTableSourceIgnoreTableNotFound": false
							},
							"dataset": {
								"referenceName": "etl_manage",
								"type": "DatasetReference"
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "LK_new_max_date",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": " SELECT Last_Update= MAX(Last_Update)\nFROM azure.AZ_Customer_Questionnaires"
							},
							"dataset": {
								"referenceName": "dwh_Customer_Questionnaires_src",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Date_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select * \nFROM azure.AZ_Customer_Questionnaires\nwhere Last_Update > '@{activity('LK_Last_Date_Mng_azure_ETL').output.firstRow.Last_Incremental_Date}' \n  and Last_Update <= '@{activity('LK_new_max_date').output.firstRow.Last_Update}'\n",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "dwh_Customer_Questionnaires_src",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "dwh_Customer_Questionnaires_blob",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Update Manage Table",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "run_Load Customer_Questionnaires",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MergeTableStore",
								"type": "PipelineReference"
							},
							"parameters": {
								"PartitionKey": "Upload Data",
								"RowKey": {
									"value": "@variables('Table_Name')",
									"type": "Expression"
								},
								"PropertyName": "Last_Incremental_Date",
								"PropertyValue": {
									"value": "@activity('LK_new_max_date').output.firstRow.Last_Update",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "run_Load Customer_Questionnaires",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"notebookPath": "/Load Data/Dimensions/Load Customer_Questionnaires"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Delete_copy_file",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Update Manage Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"dataset": {
								"referenceName": "dwh_Customer_Questionnaires_blob",
								"type": "DatasetReference"
							},
							"enableLogging": false
						}
					}
				],
				"variables": {
					"Table_Name": {
						"type": "String",
						"defaultValue": "Customer_Questionnaires"
					}
				},
				"folder": {
					"name": "Data_from_SQL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/etl_manage')]",
				"[concat(variables('factoryId'), '/datasets/dwh_Customer_Questionnaires_src')]",
				"[concat(variables('factoryId'), '/datasets/dwh_Customer_Questionnaires_blob')]",
				"[concat(variables('factoryId'), '/pipelines/MergeTableStore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Customers')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Id_Mng_azure_ETL",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "\n  \nSELECT  LastIncrementalDate=DATEADD(MINUTE,65,LastIncrementalDate)   \n  ---- remove to use incremental\n FROM  [localdb].[azure].[Mng_azure_ETL]\n  WHERE TableName='Customers'\n"
							},
							"dataset": {
								"referenceName": "Mng_azure_ETL",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "LK_new_max_id",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT ExecutionDate=MAX(SsisUpdatedDate)\n FROM dwh.azure.AZ_Customers\n"
							},
							"dataset": {
								"referenceName": "Mng_azure_ETL",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Id_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select * from  dwh.azure.AZ_Customers\n where SsisUpdatedDate > '@{activity('LK_Last_Id_Mng_azure_ETL').output.firstRow.LastIncrementalDate}' and SsisUpdatedDate<= '@{activity('LK_new_max_id').output.firstRow.ExecutionDate}'",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "DWH_Dim_Customers_src",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "DWH_Dim_Customers_blob",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": "Customers"
								}
							}
						]
					},
					{
						"name": "update_mng_azure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"storedProcedureName": "[[azure].[SP_Update_Mng_azure_ETL]",
							"storedProcedureParameters": {
								"LastId": {
									"value": "-1",
									"type": "Int64"
								},
								"LastIncrementalDate": {
									"value": {
										"value": "@{activity('LK_new_max_id').output.firstRow.ExecutionDate}",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": "Customers",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "alldbdwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Customers",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "update_mng_azure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"notebookPath": "/Load Data/Dimensions/Customers"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Data_from_SQL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Mng_azure_ETL')]",
				"[concat(variables('factoryId'), '/datasets/DWH_Dim_Customers_src')]",
				"[concat(variables('factoryId'), '/datasets/DWH_Dim_Customers_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DWH_Calls')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_new_max_Date",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT Next_Call_Day=DATEADD(DAY,-1,MAX(callday))\nFROM dwh.azure.AZ_Calls"
							},
							"dataset": {
								"referenceName": "dwh_calls_src",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_new_max_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_Last_Date_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select * \nFROM dwh.azure.AZ_calls\nwhere callday> '@{activity('LK_Last_Date_Mng_azure_ETL').output.firstRow.Last_Incremental_Date}' and callday<= '@{activity('LK_new_max_Date').output.firstRow.Next_Call_Day}'",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"Call_ID": "Call_ID",
									"Call_Details": "Call_Details",
									"CallDay": "CallDay"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dwh_calls_src",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "dwh_calls_blob",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "LK_Last_Date_Mng_azure_ETL",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "AzureTableSource",
								"azureTableSourceQuery": "PartitionKey eq 'Upload Data' and RowKey eq 'DWH_Calls'",
								"azureTableSourceIgnoreTableNotFound": false
							},
							"dataset": {
								"referenceName": "etl_manage",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Load Calls to Events",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "merge tbl store",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"notebookPath": "/Load Data/Calls/Load Calls"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "merge tbl store",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MergeTableStore",
								"type": "PipelineReference"
							},
							"parameters": {
								"PartitionKey": "Upload Data",
								"RowKey": "DWH_Calls",
								"PropertyName": "Last_Incremental_Date",
								"PropertyValue": {
									"value": "@{activity('LK_new_max_Date').output.firstRow.Next_Call_Day}",
									"type": "Expression"
								}
							}
						}
					}
				],
				"folder": {
					"name": "Data_from_SQL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dwh_calls_src')]",
				"[concat(variables('factoryId'), '/datasets/dwh_calls_blob')]",
				"[concat(variables('factoryId'), '/datasets/etl_manage')]",
				"[concat(variables('factoryId'), '/pipelines/MergeTableStore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DWH_Dim_Users')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"User_ID": "User_ID",
									"details": "details"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dwh_Dim_Users_src",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "dwh_Dim_Users_blob",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Load_Users",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"notebookPath": "/Load Data/Dimensions/Users"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Data_from_SQL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dwh_Dim_Users_src')]",
				"[concat(variables('factoryId'), '/datasets/dwh_Dim_Users_blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DWH_Lead_Assignments')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "assignments",
				"activities": [
					{
						"name": "LK_Last_Date_Mng_azure_ETL",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "AzureTableSource",
								"azureTableSourceQuery": {
									"value": "PartitionKey eq 'Upload Data' and RowKey eq '@{variables('Table_Name')}'",
									"type": "Expression"
								},
								"azureTableSourceIgnoreTableNotFound": false
							},
							"dataset": {
								"referenceName": "etl_manage",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "LK_new_max_date",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT Last_Date=MAX(Assignment_Date)\nFROM azure.AZ_Lead_Assignments \nWHERE Assignment_Day BETWEEN\nCAST(GETDATE() - 100 AS DATE) AND CAST(GETDATE() - 1 AS DATE) \n"
							},
							"dataset": {
								"referenceName": "dwh_lead_assignments_src",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Date_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * \nFROM azure.AZ_Lead_Assignments\nwhere Assignment_Date > '@{activity('LK_Last_Date_Mng_azure_ETL').output.value[0].Last_Incremental_Date}' \n  and Assignment_Date <= '@{activity('LK_new_max_date').output.firstRow.Last_Date}'\n  and Assignment_Day > dateadd(day,-1,cast('@{activity('LK_Last_Date_Mng_azure_ETL').output.value[0].Last_Incremental_Date}' as date))\n  and Assignment_Day < dateadd(day,1,cast('@{activity('LK_new_max_date').output.firstRow.Last_Date}' as date))\n",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"Fact_Lead_Assignments_ID": "Fact_Lead_Assignments_ID",
									"Assignment_Day": "Assignment_Day",
									"Assignment_Date": "Assignment_Date",
									"Details": "Details"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dwh_lead_assignments_src",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "dwh_lead_assignments_blob",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Update Manage Table",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MergeTableStore",
								"type": "PipelineReference"
							},
							"parameters": {
								"PartitionKey": "Upload Data",
								"RowKey": {
									"value": "@variables('Table_Name')",
									"type": "Expression"
								},
								"PropertyName": "Last_Incremental_Date",
								"PropertyValue": {
									"value": "@activity('LK_new_max_date').output.firstRow.Last_Date",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "load assignments to events",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Update Manage Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"notebookPath": "/Load Data/SCMM/Load Lead Assignments"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"variables": {
					"Table_Name": {
						"type": "String",
						"defaultValue": "DWH_Lead_Assignments"
					}
				},
				"folder": {
					"name": "Data_from_SQL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/etl_manage')]",
				"[concat(variables('factoryId'), '/datasets/dwh_lead_assignments_src')]",
				"[concat(variables('factoryId'), '/datasets/dwh_lead_assignments_blob')]",
				"[concat(variables('factoryId'), '/pipelines/MergeTableStore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EMERP_Events')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Id_Mng_azure_ETL",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT  LastIncrementalDate=DATEADD(MINUTE,65,LastIncrementalDate)   \n  ---- remove to use incremental\n FROM  localdb.azure.Mng_azure_ETL\n  WHERE TableName='EMERP_DB_Events'"
							},
							"dataset": {
								"referenceName": "Mng_azure_ETL",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "LK_new_max_id",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": " SELECT ExecutionDate=MAX(Event_Date)\n FROM EmErp_DB.azure.AZ_EMERP_DB_Events"
							},
							"dataset": {
								"referenceName": "EMERP_DB_Events",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Id_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select * from  EmErp_DB.azure.AZ_EMERP_DB_Events\n where Event_Date > '@{activity('LK_Last_Id_Mng_azure_ETL').output.firstRow.LastIncrementalDate}' \n AND Event_Date <= '@{activity('LK_new_max_id').output.firstRow.ExecutionDate}'",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "EMERP_DB_Events",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "blob_EMERP_Events",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": "EMERP_Events"
								}
							}
						]
					},
					{
						"name": "Stored Procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"storedProcedureName": "[[azure].[SP_Update_Mng_azure_ETL]",
							"storedProcedureParameters": {
								"LastId": {
									"value": "-1",
									"type": "Int64"
								},
								"LastIncrementalDate": {
									"value": {
										"value": "@{activity('LK_new_max_id').output.firstRow.ExecutionDate}",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": "EMERP_DB_Events",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "alldbdwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Stored Procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"notebookPath": "/Load Data/Emerp Events/EMERP_Events_to_events_table"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Data_from_SQL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Mng_azure_ETL')]",
				"[concat(variables('factoryId'), '/datasets/EMERP_DB_Events')]",
				"[concat(variables('factoryId'), '/datasets/blob_EMERP_Events')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FXNET_Accounting')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Date_Mng_azure_ETL",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "AzureTableSource",
								"azureTableSourceQuery": {
									"value": "PartitionKey eq 'Upload Data' and RowKey eq '@{variables('Table_Name')}'",
									"type": "Expression"
								},
								"azureTableSourceIgnoreTableNotFound": false
							},
							"dataset": {
								"referenceName": "etl_manage",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "LK_new_max_date",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT Last_Activity_Date = MAX(ActionDate)\nFROM azure.AZ_Accounting\nWHERE ActionDay BETWEEN CAST(GETDATE() - 100 AS DATE) AND CAST(GETDATE() - 1 AS DATE) "
							},
							"dataset": {
								"referenceName": "fxnet_accounting_src",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Date_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select * \nFROM azure.AZ_Accounting\nwhere ActionDate > '@{activity('LK_Last_Date_Mng_azure_ETL').output.value[0].Last_Incremental_Date}' \n  and ActionDate <= '@{activity('LK_new_max_date').output.firstRow.Last_Activity_Date}'\n  and ActionDay > dateadd(day,-1,cast('@{activity('LK_Last_Date_Mng_azure_ETL').output.value[0].Last_Incremental_Date}' as date))\n  and ActionDay < dateadd(day,1,cast('@{activity('LK_new_max_date').output.firstRow.Last_Activity_Date}' as date))",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"fact_account_trans_id": "fact_account_trans_id",
									"ActionDay": "ActionDay",
									"ActionDate": "ActionDate",
									"Details": "Details"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "fxnet_accounting_src",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "fxnet_accounting_blob",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Update Manage Table",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MergeTableStore",
								"type": "PipelineReference"
							},
							"parameters": {
								"PartitionKey": "Upload Data",
								"RowKey": {
									"value": "@variables('Table_Name')",
									"type": "Expression"
								},
								"PropertyName": "Last_Incremental_Date",
								"PropertyValue": {
									"value": "@activity('LK_new_max_date').output.firstRow.Last_Activity_Date",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load Accounts to Events",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Update Manage Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"notebookPath": "/Load Data/FXNET/Load Accounting"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"variables": {
					"Table_Name": {
						"type": "String",
						"defaultValue": "FXNET_Accounting"
					}
				},
				"folder": {
					"name": "Data_from_SQL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/etl_manage')]",
				"[concat(variables('factoryId'), '/datasets/fxnet_accounting_src')]",
				"[concat(variables('factoryId'), '/datasets/fxnet_accounting_blob')]",
				"[concat(variables('factoryId'), '/pipelines/MergeTableStore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FXNET_Deals')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Date_Mng_azure_ETL",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "AzureTableSource",
								"azureTableSourceQuery": {
									"value": "PartitionKey eq 'Upload Data' and RowKey eq '@{variables('Table_Name')}'",
									"type": "Expression"
								},
								"azureTableSourceIgnoreTableNotFound": false
							},
							"dataset": {
								"referenceName": "etl_manage",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "LK_new_max_Date",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT Last_Date=MAX(ExecutionDate)\nFROM azure.AZ_Deals\nWHERE executionDay BETWEEN\nCAST(GETDATE() - 100 AS DATE) AND CAST(GETDATE() - 1 AS DATE) "
							},
							"dataset": {
								"referenceName": "fxnet_deals_src",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Date_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select * \nFROM azure.AZ_Deals\nwhere executionDate > '@{activity('LK_Last_Date_Mng_azure_ETL').output.firstRow.Last_Incremental_Date}' \nand executionDate <= '@{activity('LK_new_max_Date').output.firstRow.Last_Date}'\nand executionDay > dateadd(day,-1,cast('@{activity('LK_Last_Date_Mng_azure_ETL').output.firstRow.Last_Incremental_Date}' as date))\nand executionDay < dateadd(day,1,cast('@{activity('LK_new_max_Date').output.firstRow.Last_Date}' as date))",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"TransactionNumber": "TransactionNumber",
									"ExecutionDay": "ExecutionDay",
									"ExecutionDate": "ExecutionDate",
									"Trans_Details": "Trans_Details"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "fxnet_deals_src",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "fxnet_deals_blob",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Update mng ETL table storage",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MergeTableStore",
								"type": "PipelineReference"
							},
							"parameters": {
								"PartitionKey": "Upload Data",
								"RowKey": {
									"value": "@variables('Table_Name')",
									"type": "Expression"
								},
								"PropertyName": "Last_Incremental_Date",
								"PropertyValue": {
									"value": "@activity('LK_new_max_Date').output.firstRow.Last_Date",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load Deals",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Update mng ETL table storage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"notebookPath": "/Load Data/FXNET/Load Deals"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"variables": {
					"Table_Name": {
						"type": "String",
						"defaultValue": "FXNET_Deals"
					}
				},
				"folder": {
					"name": "Data_from_SQL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/etl_manage')]",
				"[concat(variables('factoryId'), '/datasets/fxnet_deals_src')]",
				"[concat(variables('factoryId'), '/datasets/fxnet_deals_blob')]",
				"[concat(variables('factoryId'), '/pipelines/MergeTableStore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Logins_by_Country')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Login Sessions",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "GetLast_Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"notebookPath": "/BI/Reports/Sessions Reports",
							"baseParameters": {
								"Last_Date": {
									"value": "@activity('GetLast_Date').output.firstRow.Last_Date",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "GetLast_Date",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[Reports].[Get_LastDate]"
							},
							"dataset": {
								"referenceName": "AzureSQL_Logins_By_Country",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Copy mrr to Azure SQL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Login Sessions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"Event_date_Day": "Event_date_Day",
									"AccountNumber": "AccountNumber",
									"Broker": "Broker",
									"Folder": "Folder",
									"FolderType": "FolderType",
									"Login_From_Country": "Login_From_Country",
									"CustomerCountry": "CustomerCountry",
									"AMLComplianceStatus": "AMLComplianceStatus",
									"Sessions": "Sessions"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "BI_Logins_By_Country",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSQL_Logins_By_Country",
								"type": "DatasetReference"
							}
						]
					}
				],
				"folder": {
					"name": "BI"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSQL_Logins_By_Country')]",
				"[concat(variables('factoryId'), '/datasets/BI_Logins_By_Country')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MergeTableStore')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MergeTableStorage",
						"type": "WebActivity",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"url": "https://prod-19.westeurope.logic.azure.com:443/workflows/fdc08617ec204e91923afb154eb5e9d3/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=lmpuubOmGI-VjJ9ltwWrti0QZzF4gYY4HHKM_RfQCis",
							"method": "POST",
							"body": {
								"value": "@concat('{ \"PartitionKey\":\"',pipeline().parameters.PartitionKey,'\",   \"RowKey\":\"',pipeline().parameters.RowKey,'\"  , \"PropertyName\":\"',pipeline().parameters.PropertyName,'\", \"PropertyValue\":\"',pipeline().parameters.PropertyValue,'\" }')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"PartitionKey": {
						"type": "String",
						"defaultValue": "PartitionKey"
					},
					"RowKey": {
						"type": "String",
						"defaultValue": "RowKey"
					},
					"PropertyName": {
						"type": "String",
						"defaultValue": "PropertyName"
					},
					"PropertyValue": {
						"type": "String",
						"defaultValue": "PropertyValue"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/RUN_ALL_pip_platfrom_usage')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "RUN - 02_platfromusage_unzip_zip_blob_files",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RUN - 01_platfromusage_files_copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"pipeline": {
								"referenceName": "02_platfromusage_unzip_zip_blob_files",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "RUN - 03_PU_Load_ods_data",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RUN - 02_platfromusage_unzip_zip_blob_files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"pipeline": {
								"referenceName": "03_PU_Load_ods_data",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "RUN - Customers",
						"type": "ExecutePipeline",
						"typeProperties": {
							"pipeline": {
								"referenceName": "Customers",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "RUN - 04_PU_ods_to_events",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RUN - 03_PU_Load_ods_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"pipeline": {
								"referenceName": "04_PU_ods_to_events",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "RUN - 01_platfromusage_files_copy_to_blob",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RUN - Customer Questionnaires",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01_platfromusage_files_copy_to_blob",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "RUN - Serials",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RUN - Customers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Serials",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "RUN - emerp_events",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RUN - 04_PU_ods_to_events",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"pipeline": {
								"referenceName": "EMERP_Events",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "RUN - Contacts",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RUN - Serials",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Contacts",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "RUN - Users",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RUN - Contacts",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DWH_Dim_Users",
								"type": "PipelineReference"
							}
						}
					},
					{
						"name": "RUN - Customer Questionnaires",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RUN - Users",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Customer_Questionnaires",
								"type": "PipelineReference"
							}
						}
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/02_platfromusage_unzip_zip_blob_files')]",
				"[concat(variables('factoryId'), '/pipelines/03_PU_Load_ods_data')]",
				"[concat(variables('factoryId'), '/pipelines/Customers')]",
				"[concat(variables('factoryId'), '/pipelines/04_PU_ods_to_events')]",
				"[concat(variables('factoryId'), '/pipelines/01_platfromusage_files_copy_to_blob')]",
				"[concat(variables('factoryId'), '/pipelines/Serials')]",
				"[concat(variables('factoryId'), '/pipelines/EMERP_Events')]",
				"[concat(variables('factoryId'), '/pipelines/Contacts')]",
				"[concat(variables('factoryId'), '/pipelines/DWH_Dim_Users')]",
				"[concat(variables('factoryId'), '/pipelines/Customer_Questionnaires')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCMM_Activities')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Date_Mng_azure_ETL",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "AzureTableSource",
								"azureTableSourceQuery": "PartitionKey eq 'Upload Data' and RowKey eq 'SCMM_Activities'",
								"azureTableSourceIgnoreTableNotFound": false
							},
							"dataset": {
								"referenceName": "etl_manage",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "LK_new_max_date",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT Last_Activity_Date = MAX(Activity_Date)\nFROM azure.AZ_SCMM_Activities\n"
							},
							"dataset": {
								"referenceName": "scmm_activities_src",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Date_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select * \nFROM EMERP_LM.azure.AZ_SCMM_Activities\nwhere Activity_Date > '@{activity('LK_Last_Date_Mng_azure_ETL').output.value[0].Last_Incremental_Date}' and Activity_Date <= '@{activity('LK_new_max_date').output.firstRow.Last_Activity_Date}'",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"Activity_Id": "Activity_Id",
									"Activity_Date": "Activity_Date",
									"details": "details"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "scmm_activities_src",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "scmm_activities_blob",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "Update Manage Table",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MergeTableStore",
								"type": "PipelineReference"
							},
							"parameters": {
								"PartitionKey": "Upload Data",
								"RowKey": "SCMM_Activities",
								"PropertyName": "Last_Incremental_Date",
								"PropertyValue": {
									"value": "@activity('LK_new_max_date').output.firstRow.Last_Activity_Date",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load_Activities_To_Events",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Update Manage Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"notebookPath": "/Load Data/SCMM/Load Activities"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Data_from_SQL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/etl_manage')]",
				"[concat(variables('factoryId'), '/datasets/scmm_activities_src')]",
				"[concat(variables('factoryId'), '/datasets/scmm_activities_blob')]",
				"[concat(variables('factoryId'), '/pipelines/MergeTableStore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Serials Dim')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy_to_sql",
						"type": "Copy",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"Serial": "Serial",
									"Client_Id": "Client_Id",
									"Client_Numerator": "Client_Numerator",
									"Client_Name": "Client_Name",
									"Product_Numerator": "Product_Numerator",
									"Product_Name": "Product_Name",
									"Product_Full_Name": "Product_Full_Name",
									"Campaign_Numerator": "Campaign_Numerator",
									"Campaign_Name": "Campaign_Name",
									"Targetmarket_Id": "Targetmarket_Id",
									"Targetmarket": "Targetmarket",
									"Supplier_Numerator": "Supplier_Numerator",
									"Supplier": "Supplier",
									"Supplier_Group": "Supplier_Group",
									"Mediabuyer_Numerator": "Mediabuyer_Numerator",
									"Mediabuyer": "Mediabuyer",
									"Format": "Format",
									"Site_Numerator": "Site_Numerator",
									"Site_Name": "Site_Name",
									"Proposition_Id": "Proposition_Id",
									"Proposition": "Proposition",
									"Banner_Name": "Banner_Name",
									"Banner_Path": "Banner_Path",
									"TypeExt": "TypeExt",
									"Landing_Page": "Landing_Page",
									"Language": "Language",
									"SelfActivation": "SelfActivation",
									"Content": "Content"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "BI_Serials_blob",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "serials_dim_dwh",
								"type": "DatasetReference"
							}
						]
					}
				],
				"folder": {
					"name": "BI"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/BI_Serials_blob')]",
				"[concat(variables('factoryId'), '/datasets/serials_dim_dwh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Serials')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LK_Last_Id_Mng_azure_ETL",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT  LastIncrementalDate=DATEADD(MINUTE,65,LastIncrementalDate)   \n  ---- remove to use incremental\n FROM  [localdb].[azure].[Mng_azure_ETL]\n  WHERE TableName='Serials'"
							},
							"dataset": {
								"referenceName": "Mng_azure_ETL",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "copy_to_blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LK_Last_Id_Mng_azure_ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LK_new_max_id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "serials",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "Blob_Serials",
								"type": "DatasetReference",
								"parameters": {
									"folder_name": "Serials"
								}
							}
						]
					},
					{
						"name": "update_mng_azure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "copy_to_blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"storedProcedureName": "[[azure].[SP_Update_Mng_azure_ETL]",
							"storedProcedureParameters": {
								"LastId": {
									"value": "-1",
									"type": "Int64"
								},
								"LastIncrementalDate": {
									"value": {
										"value": "@{activity('LK_new_max_id').output.firstRow.ExecutionDate}",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": "Serials",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "alldbdwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LK_new_max_id",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": " SELECT ExecutionDate=MAX(update_date)\n FROM azure.az_serials"
							},
							"dataset": {
								"referenceName": "serials",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Serials",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "update_mng_azure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"notebookPath": "/Load Data/Dimensions/serials"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Delete_serials_file",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Serials",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"dataset": {
								"referenceName": "blob_serials_row_folder",
								"type": "DatasetReference"
							},
							"enableLogging": false
						}
					},
					{
						"name": "Serials_after_delete",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Delete_serials_file",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"notebookPath": "/Load Data/Dimensions/serials"
						},
						"linkedServiceName": {
							"referenceName": "Analysis",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Data_from_SQL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Mng_azure_ETL')]",
				"[concat(variables('factoryId'), '/datasets/serials')]",
				"[concat(variables('factoryId'), '/datasets/Blob_Serials')]",
				"[concat(variables('factoryId'), '/datasets/blob_serials_row_folder')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSQL_Logins_By_Country')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_events",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BI"
				},
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "Event_date_Day",
						"type": "Date"
					},
					{
						"name": "AccountNumber",
						"type": "Int32"
					},
					{
						"name": "Broker",
						"type": "String"
					},
					{
						"name": "Folder",
						"type": "String"
					},
					{
						"name": "FolderType",
						"type": "String"
					},
					{
						"name": "Login_From_Country",
						"type": "String"
					},
					{
						"name": "CustomerCountry",
						"type": "String"
					},
					{
						"name": "AMLComplianceStatus",
						"type": "String"
					},
					{
						"name": "Sessions",
						"type": "Int32"
					}
				],
				"typeProperties": {
					"tableName": "[[Reports].[Logins_By_Country]"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/BI_Events_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdb_blob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BI"
				},
				"type": "AzureBlob",
				"structure": [
					{
						"name": "Event_Date_day",
						"type": "DateTime"
					},
					{
						"name": "Source",
						"type": "String"
					},
					{
						"name": "Event_Name",
						"type": "String"
					},
					{
						"name": "Event_Details",
						"type": "String"
					},
					{
						"name": "Event_Count",
						"type": "Int64"
					}
				],
				"typeProperties": {
					"format": {
						"type": "ParquetFormat"
					},
					"fileName": "*.parquet",
					"folderPath": "bi-db/fact_events"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/BI_Logins_By_Country')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdb_blob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BI"
				},
				"type": "AzureBlob",
				"structure": [
					{
						"name": "Event_date_Day",
						"type": "DateTime"
					},
					{
						"name": "AccountNumber",
						"type": "Int64"
					},
					{
						"name": "Broker",
						"type": "String"
					},
					{
						"name": "Folder",
						"type": "String"
					},
					{
						"name": "FolderType",
						"type": "String"
					},
					{
						"name": "Login_From_Country",
						"type": "String"
					},
					{
						"name": "CustomerCountry",
						"type": "String"
					},
					{
						"name": "AMLComplianceStatus",
						"type": "String"
					},
					{
						"name": "Sessions",
						"type": "Int64"
					}
				],
				"typeProperties": {
					"format": {
						"type": "ParquetFormat"
					},
					"fileName": "*.parquet",
					"folderPath": "bi-db/mrr_logins_by_country"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/BI_Serials_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdb_blob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BI"
				},
				"type": "AzureBlob",
				"structure": [
					{
						"name": "Serial",
						"type": "Int64"
					},
					{
						"name": "Client_Id",
						"type": "String"
					},
					{
						"name": "Client_Numerator",
						"type": "Int32"
					},
					{
						"name": "Client_Name",
						"type": "String"
					},
					{
						"name": "Product_Numerator",
						"type": "Int32"
					},
					{
						"name": "Product_Name",
						"type": "String"
					},
					{
						"name": "Product_Full_Name",
						"type": "String"
					},
					{
						"name": "Campaign_Numerator",
						"type": "Int32"
					},
					{
						"name": "Campaign_Name",
						"type": "String"
					},
					{
						"name": "Targetmarket_Id",
						"type": "Int32"
					},
					{
						"name": "Targetmarket",
						"type": "String"
					},
					{
						"name": "Supplier_Numerator",
						"type": "Int32"
					},
					{
						"name": "Supplier",
						"type": "String"
					},
					{
						"name": "Supplier_Group",
						"type": "String"
					},
					{
						"name": "Mediabuyer_Numerator",
						"type": "Int32"
					},
					{
						"name": "Mediabuyer",
						"type": "String"
					},
					{
						"name": "Format",
						"type": "String"
					},
					{
						"name": "Site_Numerator",
						"type": "Int32"
					},
					{
						"name": "Site_Name",
						"type": "String"
					},
					{
						"name": "Proposition_Id",
						"type": "Int32"
					},
					{
						"name": "Proposition",
						"type": "String"
					},
					{
						"name": "Banner_Name",
						"type": "String"
					},
					{
						"name": "Banner_Path",
						"type": "String"
					},
					{
						"name": "TypeExt",
						"type": "String"
					},
					{
						"name": "Landing_Page",
						"type": "String"
					},
					{
						"name": "Language",
						"type": "String"
					},
					{
						"name": "SelfActivation",
						"type": "Int32"
					},
					{
						"name": "Content",
						"type": "String"
					},
					{
						"name": "Charge_Unit_Id",
						"type": "Int32"
					},
					{
						"name": "Charge_Unit_Name",
						"type": "String"
					},
					{
						"name": "Landing_Page_Numerator",
						"type": "Int32"
					},
					{
						"name": "Creative_Logical_Name",
						"type": "String"
					},
					{
						"name": "serial_details",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "ParquetFormat"
					},
					"fileName": "*.parquet",
					"folderPath": "bi-db/dim_serials"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob_Contacts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_name": {
						"type": "String",
						"defaultValue": "Dim_AccountContacts"
					}
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "\u0001",
						"rowDelimiter": "\n",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": {
						"value": "@CONCAT('Contacts_', pipeline().RunId, '.csv')",
						"type": "Expression"
					},
					"folderPath": "rawdata/Contacts"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob_Serials')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_name": {
						"type": "String",
						"defaultValue": "Dim_AccountContacts"
					}
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "\u0001",
						"rowDelimiter": "\n",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": {
						"value": "@CONCAT('Serials', pipeline().RunId, '.csv')",
						"type": "Expression"
					},
					"folderPath": "rawdata/Serials"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/Communication_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataloadStore",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"type": "AzureBlob",
				"structure": [
					{
						"name": "MessageID",
						"type": "Int32"
					},
					{
						"name": "Event_Date",
						"type": "DateTime"
					},
					{
						"name": "details",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "\t",
						"rowDelimiter": "",
						"quoteChar": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"compression": {
						"type": "BZip2"
					},
					"fileName": {
						"value": "@CONCAT('Communication_', pipeline().TriggerTime, '.csv.bz2')",
						"type": "Expression"
					},
					"folderPath": {
						"value": "@concat('rawdata/Communication/Received=',utcnow('s'))",
						"type": "Expression"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/Communication_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "alldbdwh",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "MessageID",
						"type": "Int32"
					},
					{
						"name": "Event_Date",
						"type": "DateTime"
					},
					{
						"name": "details",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "emerp_lm.azure.AZ_Communication"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/Contacts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Dwhpr",
					"type": "LinkedServiceReference"
				},
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "RAWDB_Id",
						"type": "Int64"
					},
					{
						"name": "datails",
						"type": "String"
					},
					{
						"name": "Fixed_Timestamp",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "EmErp_LM.azure.scmm_contacts"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/Customers_Models_Data_old')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_events",
					"type": "LinkedServiceReference"
				},
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "AccountNumber",
						"type": "Int32"
					},
					{
						"name": "Broker",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "Customers_Models_Data"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/DWH_API_Customers_Models_Data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AccountNumber",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "ModelID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Model_Result",
						"type": "nvarchar"
					},
					{
						"name": "Last_Update_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Last_Sync_Date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[Azure_Customers_Models_Data]"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/DWH_Dim_Customers_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_name": {
						"type": "String",
						"defaultValue": "Dim_AccountContacts"
					}
				},
				"folder": {
					"name": "DWH"
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "\u0001",
						"rowDelimiter": "\n",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": {
						"value": "@CONCAT('Customers_', pipeline().RunId, '.csv')",
						"type": "Expression"
					},
					"folderPath": "rawdata/Customers"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/DWH_Dim_Customers_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "AccountNumber",
						"type": "Int32"
					},
					{
						"name": "datails",
						"type": "String"
					},
					{
						"name": "SsisUpdatedDate",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "[[azure].[AZ_Customers]"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/DWH_pu_list_files')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "alldbdwh",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Platform Usage"
				},
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "TransactionNumber",
						"type": "Int32"
					},
					{
						"name": "PositionNumber",
						"type": "Int32"
					},
					{
						"name": "AccountNumber",
						"type": "Int32"
					},
					{
						"name": "CustomerHistory_ID",
						"type": "Int32"
					},
					{
						"name": "CustomersExtendedHistory_ID",
						"type": "Int32"
					},
					{
						"name": "DealAttirbute_ID",
						"type": "Int16"
					},
					{
						"name": "Instrument_ID",
						"type": "Int32"
					},
					{
						"name": "TransactionType_ID",
						"type": "Int16"
					},
					{
						"name": "Direction_ID",
						"type": "Int16"
					},
					{
						"name": "Source_ID",
						"type": "Int16"
					},
					{
						"name": "DealType_ID",
						"type": "Int16"
					},
					{
						"name": "ExecutionDate",
						"type": "DateTime"
					},
					{
						"name": "ExecutionDay",
						"type": "DateTime"
					},
					{
						"name": "ExecutionTime",
						"type": "TimeSpan"
					},
					{
						"name": "TransactionCloseDate",
						"type": "DateTime"
					},
					{
						"name": "ValueDate",
						"type": "DateTime"
					},
					{
						"name": "ValueDay",
						"type": "DateTime"
					},
					{
						"name": "BaseAmount",
						"type": "Decimal"
					},
					{
						"name": "OtherAmount",
						"type": "Decimal"
					},
					{
						"name": "SpotRate",
						"type": "Decimal"
					},
					{
						"name": "ForwardPips",
						"type": "Double"
					},
					{
						"name": "TotRate",
						"type": "Decimal"
					},
					{
						"name": "Volume_USD",
						"type": "Decimal"
					},
					{
						"name": "ServerRate",
						"type": "Decimal"
					},
					{
						"name": "OtherServerRate",
						"type": "Decimal"
					},
					{
						"name": "ExecutedLimit",
						"type": "Int16"
					},
					{
						"name": "PL",
						"type": "Decimal"
					},
					{
						"name": "IsFirstBOP",
						"type": "Boolean"
					},
					{
						"name": "IsFirstForex",
						"type": "Boolean"
					},
					{
						"name": "IsFirstDeal",
						"type": "Boolean"
					},
					{
						"name": "Deleted",
						"type": "Boolean"
					},
					{
						"name": "PositionClosed",
						"type": "Int16"
					},
					{
						"name": "DealPL_USD",
						"type": "Decimal"
					},
					{
						"name": "PL_SymbolId",
						"type": "Int16"
					},
					{
						"name": "AccountBasesymbolId",
						"type": "Int16"
					},
					{
						"name": "EtlUpdatedDate",
						"type": "DateTime"
					},
					{
						"name": "SpreadCost",
						"type": "Decimal"
					},
					{
						"name": "Folder_ID",
						"type": "Int16"
					},
					{
						"name": "Broker_ID",
						"type": "Int32"
					},
					{
						"name": "AccountNumber_modo",
						"type": "Int32"
					},
					{
						"name": "PositionNumber_modo",
						"type": "Int32"
					},
					{
						"name": "PL_AccountBase",
						"type": "Decimal"
					},
					{
						"name": "Customer_Favor_Rate_diff",
						"type": "Decimal"
					},
					{
						"name": "Channel_Bucket_ID",
						"type": "Int32"
					},
					{
						"name": "Sessions_ID",
						"type": "Int64"
					},
					{
						"name": "DealCountTotal",
						"type": "Int32"
					},
					{
						"name": "Retention_ID",
						"type": "Int16"
					},
					{
						"name": "ConversionRate",
						"type": "Decimal"
					},
					{
						"name": "CommissionInAccountBase",
						"type": "Decimal"
					},
					{
						"name": "SpreadCostInAccountBase",
						"type": "Decimal"
					},
					{
						"name": "RolloverSpreadCostInAccountBase",
						"type": "Decimal"
					},
					{
						"name": "CommissionInOther",
						"type": "Decimal"
					},
					{
						"name": "SpreadCostInOther",
						"type": "Decimal"
					},
					{
						"name": "RolloverSpreadCostInOther",
						"type": "Decimal"
					}
				],
				"typeProperties": {
					"tableName": "[[azure].[platfrom_usage_log_file]"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dim_AccountContacts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "alldbdwh",
					"type": "LinkedServiceReference"
				},
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "AccountNumber",
						"type": "Int32"
					},
					{
						"name": "ContactID",
						"type": "Int64"
					},
					{
						"name": "LastUpdate",
						"type": "DateTime"
					},
					{
						"name": "SsisUpdatedDate",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "dwh.azure.AZ_Dim_AccountContacts"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/EMERP_DB_Events')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Dwhpr",
					"type": "LinkedServiceReference"
				},
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "RAWDB_Id",
						"type": "Int64"
					},
					{
						"name": "datails",
						"type": "String"
					},
					{
						"name": "Fixed_Timestamp",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "emerp_db.azure.AZ_EMERP_DB_Events"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/Fact_Transactions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "alldbdwh",
					"type": "LinkedServiceReference"
				},
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "TransactionNumber",
						"type": "Int32"
					},
					{
						"name": "PositionNumber",
						"type": "Int32"
					},
					{
						"name": "AccountNumber",
						"type": "Int32"
					},
					{
						"name": "CustomerHistory_ID",
						"type": "Int32"
					},
					{
						"name": "CustomersExtendedHistory_ID",
						"type": "Int32"
					},
					{
						"name": "DealAttirbute_ID",
						"type": "Int16"
					},
					{
						"name": "Instrument_ID",
						"type": "Int32"
					},
					{
						"name": "TransactionType_ID",
						"type": "Int16"
					},
					{
						"name": "Direction_ID",
						"type": "Int16"
					},
					{
						"name": "Source_ID",
						"type": "Int16"
					},
					{
						"name": "DealType_ID",
						"type": "Int16"
					},
					{
						"name": "ExecutionDate",
						"type": "DateTime"
					},
					{
						"name": "ExecutionDay",
						"type": "DateTime"
					},
					{
						"name": "ExecutionTime",
						"type": "TimeSpan"
					},
					{
						"name": "TransactionCloseDate",
						"type": "DateTime"
					},
					{
						"name": "ValueDate",
						"type": "DateTime"
					},
					{
						"name": "ValueDay",
						"type": "DateTime"
					},
					{
						"name": "BaseAmount",
						"type": "Decimal"
					},
					{
						"name": "OtherAmount",
						"type": "Decimal"
					},
					{
						"name": "SpotRate",
						"type": "Decimal"
					},
					{
						"name": "ForwardPips",
						"type": "Double"
					},
					{
						"name": "TotRate",
						"type": "Decimal"
					},
					{
						"name": "Volume_USD",
						"type": "Decimal"
					},
					{
						"name": "ServerRate",
						"type": "Decimal"
					},
					{
						"name": "OtherServerRate",
						"type": "Decimal"
					},
					{
						"name": "ExecutedLimit",
						"type": "Int16"
					},
					{
						"name": "PL",
						"type": "Decimal"
					},
					{
						"name": "IsFirstBOP",
						"type": "Boolean"
					},
					{
						"name": "IsFirstForex",
						"type": "Boolean"
					},
					{
						"name": "IsFirstDeal",
						"type": "Boolean"
					},
					{
						"name": "Deleted",
						"type": "Boolean"
					},
					{
						"name": "PositionClosed",
						"type": "Int16"
					},
					{
						"name": "DealPL_USD",
						"type": "Decimal"
					},
					{
						"name": "PL_SymbolId",
						"type": "Int16"
					},
					{
						"name": "AccountBasesymbolId",
						"type": "Int16"
					},
					{
						"name": "EtlUpdatedDate",
						"type": "DateTime"
					},
					{
						"name": "SpreadCost",
						"type": "Decimal"
					},
					{
						"name": "Folder_ID",
						"type": "Int16"
					},
					{
						"name": "Broker_ID",
						"type": "Int32"
					},
					{
						"name": "AccountNumber_modo",
						"type": "Int32"
					},
					{
						"name": "PositionNumber_modo",
						"type": "Int32"
					},
					{
						"name": "PL_AccountBase",
						"type": "Decimal"
					},
					{
						"name": "Customer_Favor_Rate_diff",
						"type": "Decimal"
					},
					{
						"name": "Channel_Bucket_ID",
						"type": "Int32"
					},
					{
						"name": "Sessions_ID",
						"type": "Int64"
					},
					{
						"name": "DealCountTotal",
						"type": "Int32"
					},
					{
						"name": "Retention_ID",
						"type": "Int16"
					},
					{
						"name": "ConversionRate",
						"type": "Decimal"
					},
					{
						"name": "CommissionInAccountBase",
						"type": "Decimal"
					},
					{
						"name": "SpreadCostInAccountBase",
						"type": "Decimal"
					},
					{
						"name": "RolloverSpreadCostInAccountBase",
						"type": "Decimal"
					},
					{
						"name": "CommissionInOther",
						"type": "Decimal"
					},
					{
						"name": "SpreadCostInOther",
						"type": "Decimal"
					},
					{
						"name": "RolloverSpreadCostInOther",
						"type": "Decimal"
					}
				],
				"typeProperties": {
					"tableName": "[[azure].[AZ_Fact_Transactions]"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/Mng_azure_ETL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "alldbdwh",
					"type": "LinkedServiceReference"
				},
				"type": "SqlServerTable",
				"typeProperties": {
					"tableName": "[[azure].[Mng_azure_ETL]"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_mrr_customers_clustering')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "STG",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sync"
				},
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "AccountNumber",
						"type": "Int64",
						"precision": 19,
						"scale": 255
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[mrr_customers_clustering]"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_PlatfromUsagePROD')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Events_Collector_PlatfromUsage_log",
					"type": "LinkedServiceReference"
				},
				"type": "FileShare",
				"typeProperties": {
					"folderPath": "processed"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_file_avi')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "fileserver1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"file_name": {
						"type": "String"
					},
					"folder": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Platform Usage"
				},
				"type": "FileShare",
				"typeProperties": {
					"compression": {
						"type": "ZipDeflate",
						"level": "Optimal"
					},
					"fileName": {
						"value": "@dataset().file_name",
						"type": "Expression"
					},
					"folderPath": {
						"value": "@dataset().folder",
						"type": "Expression"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/alldbsp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "alldbdwh",
					"type": "LinkedServiceReference"
				},
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "AccountNumber",
						"type": "Int64",
						"precision": 19,
						"scale": 255
					}
				],
				"typeProperties": {
					"tableName": "acc_tab"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_EMERP_Events')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_name": {
						"type": "String",
						"defaultValue": "EMERP_Events"
					}
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "\u0001",
						"rowDelimiter": "\n",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": {
						"value": "@CONCAT('EMERP_Events', pipeline().RunId, '.csv')",
						"type": "Expression"
					},
					"folderPath": "rawdata/EMERP_Events"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_Fact_Transactions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_name": {
						"type": "String",
						"defaultValue": "Fact_Transactions"
					}
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": {
						"value": "@CONCAT('test_pu-', pipeline().RunId, '.txt')",
						"type": "Expression"
					},
					"folderPath": "rawdata/Fact_Transactions"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_customers_clustering')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_name": {
						"type": "String"
					}
				},
				"folder": {
					"name": "sync"
				},
				"type": "AzureBlob",
				"structure": [
					{
						"name": "AccountNumber",
						"type": "String"
					},
					{
						"name": "cluster_type",
						"type": "String"
					},
					{
						"name": "update_date",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": {
						"value": "*.csv",
						"type": "Expression"
					},
					"folderPath": {
						"value": "@concat('rawdata/export_file/customers_clustering/',dataset().folder_name)",
						"type": "Expression"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_customers_clustering_folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_name": {
						"type": "String"
					}
				},
				"folder": {
					"name": "sync"
				},
				"type": "AzureBlob",
				"structure": [
					{
						"name": "AccountNumber",
						"type": "String"
					},
					{
						"name": "cluster_type",
						"type": "String"
					},
					{
						"name": "update_date",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": "",
					"folderPath": {
						"value": "@concat('rawdata/export_file/customers_clustering/',dataset().folder_name)",
						"type": "Expression"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_customers_clustering_folder_hd_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_name": {
						"type": "String"
					}
				},
				"folder": {
					"name": "sync"
				},
				"type": "AzureBlob",
				"structure": [
					{
						"name": "AccountNumber",
						"type": "String"
					},
					{
						"name": "cluster_type",
						"type": "String"
					},
					{
						"name": "update_date",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": "dataset().folder_name",
					"folderPath": {
						"value": "rawdata/export_file/customers_clustering/",
						"type": "Expression"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_customers_clustering_json_file_list')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sync"
				},
				"type": "AzureBlob",
				"structure": [
					{
						"name": "file",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "JsonFormat",
						"filePattern": "setOfObjects",
						"jsonPathDefinition": {
							"file": "$.['_1']"
						}
					},
					"fileName": "*.json",
					"folderPath": "rawdata/export_file/customers_clustering/file_list.json"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_platfrom_merge_file_des')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"file_name": {
						"type": "String"
					}
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": " ",
						"rowDelimiter": "\n",
						"quoteChar": "\"",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": {
						"value": "@dataset().file_name",
						"type": "Expression"
					},
					"folderPath": "rawdata/platfrom_merged_by_day"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_platfrom_unzip_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_name": {
						"type": "String"
					},
					"file_name": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Platform Usage"
				},
				"type": "AzureBlob",
				"structure": [
					{
						"name": "ip",
						"type": "String"
					},
					{
						"name": "hyphen_1",
						"type": "String"
					},
					{
						"name": "hyphen_2",
						"type": "String"
					},
					{
						"name": "datetime",
						"type": "String"
					},
					{
						"name": "time",
						"type": "String"
					},
					{
						"name": "url_parm",
						"type": "String"
					},
					{
						"name": "Prop_6",
						"type": "String"
					},
					{
						"name": "Prop_7",
						"type": "String"
					},
					{
						"name": "server",
						"type": "String"
					},
					{
						"name": "user_agent",
						"type": "String"
					},
					{
						"name": "log_parm",
						"type": "String"
					}
				],
				"typeProperties": {
					"folderPath": {
						"value": "@dataset().folder_name",
						"type": "Expression"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_platfrom_unzip_file_1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_name": {
						"type": "String"
					},
					"file_name": {
						"type": "String"
					}
				},
				"type": "AzureBlob",
				"structure": [
					{
						"name": "ip",
						"type": "String"
					},
					{
						"name": "hyphen_1",
						"type": "String"
					},
					{
						"name": "hyphen_2",
						"type": "String"
					},
					{
						"name": "datetime",
						"type": "String"
					},
					{
						"name": "time",
						"type": "String"
					},
					{
						"name": "url_parm",
						"type": "String"
					},
					{
						"name": "Prop_6",
						"type": "String"
					},
					{
						"name": "Prop_7",
						"type": "String"
					},
					{
						"name": "server",
						"type": "String"
					},
					{
						"name": "user_agent",
						"type": "String"
					},
					{
						"name": "log_parm",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": " ",
						"rowDelimiter": "\n",
						"quoteChar": "\"",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": {
						"value": "@dataset().file_name",
						"type": "Expression"
					},
					"folderPath": {
						"value": "@dataset().folder_name",
						"type": "Expression"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_serials_row_folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": "*.csv",
					"folderPath": {
						"value": "rawdata/Serials/",
						"type": "Expression"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/dwh_Customer_Questionnaires_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataloadStore",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "\t",
						"rowDelimiter": "",
						"quoteChar": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"compression": {
						"type": "BZip2"
					},
					"fileName": {
						"value": "@CONCAT('Customer_Questionnaires_', pipeline().TriggerTime, '.csv.bz2')",
						"type": "Expression"
					},
					"folderPath": {
						"value": "rawdata/Customer_Questionnaires/",
						"type": "Expression"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/dwh_Customer_Questionnaires_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "AccountNumber",
						"type": "Int32"
					},
					{
						"name": "details",
						"type": "String"
					},
					{
						"name": "Last_Update",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "[[azure].[AZ_Customer_Questionnaires]"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/dwh_Dim_Users_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataloadStore",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"type": "AzureBlob",
				"structure": [
					{
						"name": "User_ID",
						"type": "Int16"
					},
					{
						"name": "details",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "\u0001",
						"rowDelimiter": "\n",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": true
					},
					"fileName": {
						"value": "Users.csv",
						"type": "Expression"
					},
					"folderPath": "rawdata/DWH_Users"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/dwh_Dim_Users_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "User_ID",
						"type": "Int16"
					},
					{
						"name": "details",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[azure].[AZ_Users]"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/dwh_calls_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataloadStore",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"type": "AzureBlob",
				"structure": [
					{
						"name": "Call_ID",
						"type": "Int32"
					},
					{
						"name": "Call_Details",
						"type": "String"
					},
					{
						"name": "CallDay",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "\t",
						"rowDelimiter": "",
						"quoteChar": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"compression": {
						"type": "BZip2"
					},
					"fileName": {
						"value": "@CONCAT('Calls_', pipeline().TriggerTime, '.csv.bz2')",
						"type": "Expression"
					},
					"folderPath": {
						"value": "@concat('rawdata/DWH_Calls/Received=',utcnow('s'))",
						"type": "Expression"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/dwh_calls_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "Call_ID",
						"type": "Int32"
					},
					{
						"name": "Call_Details",
						"type": "String"
					},
					{
						"name": "CallDay",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "[[azure].[AZ_Calls]"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/dwh_lead_assignments_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataloadStore",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"type": "AzureBlob",
				"structure": [
					{
						"name": "Fact_Lead_Assignments_ID",
						"type": "Int32"
					},
					{
						"name": "Assignment_Day",
						"type": "DateTime"
					},
					{
						"name": "Assignment_Date",
						"type": "DateTime"
					},
					{
						"name": "Details",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "\t",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"compression": {
						"type": "BZip2"
					},
					"fileName": {
						"value": "@CONCAT('DWH_Lead_Assignments_', pipeline().TriggerTime, '.csv.bz2')",
						"type": "Expression"
					},
					"folderPath": {
						"value": "@concat('rawdata/DWH_Lead_Assignments/Received=',utcnow('s'))",
						"type": "Expression"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/dwh_lead_assignments_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "Fact_Lead_Assignments_ID",
						"type": "Int32"
					},
					{
						"name": "Assignment_Day",
						"type": "Date"
					},
					{
						"name": "Assignment_Date",
						"type": "DateTime"
					},
					{
						"name": "Details",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[azure].[AZ_Lead_assignments]"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/etl_manage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLoadStorageAccount",
					"type": "LinkedServiceReference"
				},
				"type": "AzureTable",
				"structure": [
					{
						"name": "PartitionKey",
						"type": "String"
					},
					{
						"name": "RowKey",
						"type": "String"
					},
					{
						"name": "Timestamp",
						"type": "DateTimeOffset"
					},
					{
						"name": "Last_Incremental_Date",
						"type": "String"
					},
					{
						"name": "Next_Incremental_Date",
						"type": "String"
					},
					{
						"name": "Last_PU_INT",
						"type": "Int64"
					},
					{
						"name": "Next_PU_INT",
						"type": "Int64"
					}
				],
				"typeProperties": {
					"tableName": "etlManage"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/fact_events_dwh')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_dwh",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BI"
				},
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "Event_Date_day",
						"type": "DateTime"
					},
					{
						"name": "Source",
						"type": "String"
					},
					{
						"name": "Event_Name",
						"type": "String"
					},
					{
						"name": "Event_Details",
						"type": "String"
					},
					{
						"name": "Event_Count",
						"type": "Int64"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[fact_events]"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/fxnet_accounting_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataloadStore",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"type": "AzureBlob",
				"structure": [
					{
						"name": "fact_account_trans_id",
						"type": "Int64"
					},
					{
						"name": "ActionDay",
						"type": "DateTime"
					},
					{
						"name": "ActionDate",
						"type": "DateTime"
					},
					{
						"name": "Details",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "\t",
						"rowDelimiter": "",
						"quoteChar": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"compression": {
						"type": "BZip2"
					},
					"fileName": {
						"value": "@CONCAT('FXNET_Accounting_', pipeline().TriggerTime, '.csv.bz2')",
						"type": "Expression"
					},
					"folderPath": {
						"value": "@concat('rawdata/FXNET_Accounting/Received=',utcnow('s'))",
						"type": "Expression"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/fxnet_accounting_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "fact_account_trans_id",
						"type": "Int64"
					},
					{
						"name": "ActionDay",
						"type": "Date"
					},
					{
						"name": "ActionDate",
						"type": "DateTime"
					},
					{
						"name": "Details",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[azure].[AZ_Accounting]"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/fxnet_deals_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataloadStore",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"type": "AzureBlob",
				"structure": [
					{
						"name": "TransactionNumber",
						"type": "String"
					},
					{
						"name": "ExecutionDay",
						"type": "String"
					},
					{
						"name": "ExecutionDate",
						"type": "DateTime"
					},
					{
						"name": "Trans_Details",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "\t",
						"rowDelimiter": "",
						"quoteChar": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"compression": {
						"type": "BZip2"
					},
					"fileName": {
						"value": "@CONCAT('FXNET_Deals_', pipeline().TriggerTime, '.csv.bz2')",
						"type": "Expression"
					},
					"folderPath": {
						"value": "@concat('rawdata/FXNET_Deals/Received=',utcnow('s'))",
						"type": "Expression"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/fxnet_deals_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DWH",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "TransactionNumber",
						"type": "Int32"
					},
					{
						"name": "ExecutionDay",
						"type": "Date"
					},
					{
						"name": "ExecutionDate",
						"type": "DateTime"
					},
					{
						"name": "Trans_Details",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[azure].[AZ_Deals]"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/platformusage_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_name": {
						"type": "String"
					},
					"file_name": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Platform Usage"
				},
				"type": "AzureBlob",
				"typeProperties": {
					"compression": {
						"type": "ZipDeflate",
						"level": "Optimal"
					},
					"fileName": {
						"value": "@dataset().file_name",
						"type": "Expression"
					},
					"folderPath": {
						"value": "@dataset().folder_name",
						"type": "Expression"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/scmm_activities_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataloadStore",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"type": "AzureBlob",
				"structure": [
					{
						"name": "Activity_Id",
						"type": "Int32"
					},
					{
						"name": "Activity_Date",
						"type": "DateTime"
					},
					{
						"name": "details",
						"type": "String"
					}
				],
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": "\t",
						"rowDelimiter": "",
						"quoteChar": "",
						"nullValue": "\\N",
						"encodingName": null,
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"compression": {
						"type": "BZip2"
					},
					"fileName": {
						"value": "@CONCAT('SCMM_Activities_', pipeline().TriggerTime, '.csv.bz2')",
						"type": "Expression"
					},
					"folderPath": {
						"value": "@concat('rawdata/SCMM_Activities/Received=',utcnow('s'))",
						"type": "Expression"
					}
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/scmm_activities_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "emerp_lm",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DWH"
				},
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "Activity_Id",
						"type": "Int32"
					},
					{
						"name": "Activity_Date",
						"type": "DateTime"
					},
					{
						"name": "details",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[azure].[AZ_SCMM_Activities]"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/serials')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "emerpdbpr",
					"type": "LinkedServiceReference"
				},
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "Serial",
						"type": "Int64"
					},
					{
						"name": "serial_details",
						"type": "String"
					},
					{
						"name": "update_date",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "azure.az_serials"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/serials_dim_dwh')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_dwh",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BI"
				},
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "Serial",
						"type": "Int64"
					},
					{
						"name": "Client_Id",
						"type": "String"
					},
					{
						"name": "Client_Numerator",
						"type": "Int32"
					},
					{
						"name": "Client_Name",
						"type": "String"
					},
					{
						"name": "Product_Numerator",
						"type": "Int32"
					},
					{
						"name": "Product_Name",
						"type": "String"
					},
					{
						"name": "Product_Full_Name",
						"type": "String"
					},
					{
						"name": "Campaign_Numerator",
						"type": "Int32"
					},
					{
						"name": "Campaign_Name",
						"type": "String"
					},
					{
						"name": "Targetmarket_Id",
						"type": "Int32"
					},
					{
						"name": "Targetmarket",
						"type": "String"
					},
					{
						"name": "Supplier_Numerator",
						"type": "Int32"
					},
					{
						"name": "Supplier",
						"type": "String"
					},
					{
						"name": "Supplier_Group",
						"type": "String"
					},
					{
						"name": "Mediabuyer_Numerator",
						"type": "Int32"
					},
					{
						"name": "Mediabuyer",
						"type": "String"
					},
					{
						"name": "Format",
						"type": "String"
					},
					{
						"name": "Site_Numerator",
						"type": "Int32"
					},
					{
						"name": "Site_Name",
						"type": "String"
					},
					{
						"name": "Proposition_Id",
						"type": "Int32"
					},
					{
						"name": "Proposition",
						"type": "String"
					},
					{
						"name": "Banner_Name",
						"type": "String"
					},
					{
						"name": "Banner_Path",
						"type": "String"
					},
					{
						"name": "TypeExt",
						"type": "String"
					},
					{
						"name": "Landing_Page",
						"type": "String"
					},
					{
						"name": "Language",
						"type": "String"
					},
					{
						"name": "SelfActivation",
						"type": "Int32"
					},
					{
						"name": "Content",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[dim_serials]"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/unzip_platfrom_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"compression": {
						"type": "ZipDeflate"
					},
					"fileName": "",
					"folderPath": "platformusage/rawdata/201810"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/Communication Daily')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Communication",
							"type": "PipelineReference"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2019-03-07T17:45:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								8
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Communication')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DWH Calls Daily')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "DWH_Calls",
							"type": "PipelineReference"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2019-03-14T18:56:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								5
							],
							"hours": [
								8
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/DWH_Calls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DWH Lead Assignments')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "DWH_Lead_Assignments",
							"type": "PipelineReference"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2019-03-16T22:04:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								20
							],
							"hours": [
								8
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/DWH_Lead_Assignments')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FXNET Accounting Daily')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "FXNET_Accounting",
							"type": "PipelineReference"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2019-03-12T17:34:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								15
							],
							"hours": [
								8
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/FXNET_Accounting')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FXNET Deals Daily')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "FXNET_Deals",
							"type": "PipelineReference"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2019-03-13T14:40:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								10
							],
							"hours": [
								8
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/FXNET_Deals')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Reports Logins by Country Daily')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Logins_by_Country",
							"type": "PipelineReference"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2019-04-10T11:07:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								9
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Logins_by_Country')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCMM_Activities Daily')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "SCMM_Activities",
							"type": "PipelineReference"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2019-03-06T15:12:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								8
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SCMM_Activities')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/every_day_run_all_piplines_to_platfrom_usage')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "RUN_ALL_pip_platfrom_usage",
							"type": "PipelineReference"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2019-01-20T15:52:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								5
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/RUN_ALL_pip_platfrom_usage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/model  Get data for model')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "2 day 02 - Get Data For Model",
							"type": "PipelineReference"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2019-05-06T09:14:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								9
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/2 day 02 - Get Data For Model')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/model - 2 day Get Customers List For Clustering Model Daily')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "2 day 01 - Get_Customers_List_For_Model",
							"type": "PipelineReference"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2019-04-29T14:38:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								9
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/2 day 01 - Get_Customers_List_For_Model')]"
			]
		}
	]
}